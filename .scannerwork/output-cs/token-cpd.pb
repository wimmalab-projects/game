π
YC:\Users\Administrator\Desktop\git_wine\wine-game\Assets\AA_Rami\CustomerSystem\Client.cs
public 
class 
Client 
: 
MonoBehaviour #
{ 
public 


GameMaster 
. 

ClientType  

clientType! +
;+ ,
public

 

string

 
Name

 
;

 
public 

string 
Explanation 
; 
public 

string 

GoodReview 
; 
public 

string 
AverageReview 
;  
public 

string 
	BadReview 
; 
public 

Wine 
	WineIWant 
; 
public 

Wine 
WineIGet 
; 
public 

int 
Budget 
; 
} µ<
`C:\Users\Administrator\Desktop\git_wine\wine-game\Assets\AA_Rami\CustomerSystem\CustomerPanel.cs
public 
class 
CustomerPanel 
: 
MonoBehaviour *
{+ ,
public		 

Client		 
clientSender		 
=		  
null		! %
;		% &
public 

void 
ActivatePanel 
( 
)  
{ 
if 

( 
clientSender 
!= 
null  
)  !
{ 	
this 
. 

gameObject 
. 
	transform %
.% &
Find& *
(* +
$str+ 8
)8 9
.9 :
Find: >
(> ?
$str? I
)I J
.J K
FindK O
(O P
$strP Y
)Y Z
.Z [
Find[ _
(_ `
$str` u
)u v
.v w
GetComponent	w É
<
É Ñ
Text
Ñ à
>
à â
(
â ä
)
ä ã
.
ã å
text
å ê
=
ë í
clientSender
ì ü
.
ü †
Explanation
† ´
;
´ ¨
if 
( 
clientSender 
. 

clientType '
==( *

GameMaster+ 5
.5 6

ClientType6 @
.@ A
FarmerA G
)G H
{ 

gameObject 
. 
	transform $
.$ %
Find% )
() *
$str* 9
)9 :
.: ;
Find; ?
(? @
$str@ L
)L M
.M N

gameObjectN X
.X Y
	SetActiveY b
(b c
truec g
)g h
;h i

gameObject 
. 
	transform $
.$ %
Find% )
() *
$str* 9
)9 :
.: ;
Find; ?
(? @
$str@ R
)R S
.S T

gameObjectT ^
.^ _
	SetActive_ h
(h i
falsei n
)n o
;o p
} 
else 
{ 

gameObject 
. 
	transform $
.$ %
Find% )
() *
$str* 9
)9 :
.: ;
Find; ?
(? @
$str@ L
)L M
.M N

gameObjectN X
.X Y
	SetActiveY b
(b c
falsec h
)h i
;i j

gameObject 
. 
	transform $
.$ %
Find% )
() *
$str* 9
)9 :
.: ;
Find; ?
(? @
$str@ R
)R S
.S T

gameObjectT ^
.^ _
	SetActive_ h
(h i
truei m
)m n
;n o
} 

gameObject 
. 
	transform  
.  !
Find! %
(% &
$str& 5
)5 6
.6 7
Find7 ;
(; <
$str< K
)K L
.L M
GetComponentM Y
<Y Z
ImageZ _
>_ `
(` a
)a b
.b c
spritec i
=j k
clientSenderl x
.x y
GetComponent	y Ö
<
Ö Ü
SpriteRenderer
Ü î
>
î ï
(
ï ñ
)
ñ ó
.
ó ò
sprite
ò û
;
û ü

gameObject!! 
.!! 
	SetActive!!  
(!!  !
true!!! %
)!!% &
;!!& '
}"" 	
}## 
public)) 

void)) #
ScaleExplanationContent)) '
())' (
)))( )
{** 
Canvas++ 
.++ 
ForceUpdateCanvases++ "
(++" #
)++# $
;++$ %
this.. 
... 

gameObject.. 
... 
	transform.. !
...! "
Find.." &
(..& '
$str..' 4
)..4 5
...5 6
Find..6 :
(..: ;
$str..; E
)..E F
...F G
Find..G K
(..K L
$str..L U
)..U V
...V W
GetComponent..W c
<..c d
RectTransform..d q
>..q r
(..r s
)..s t
...t u
	sizeDelta..u ~
=	.. Ä
new// 
Vector2// 
(// 
this// 
.// 

gameObject// '
.//' (
	transform//( 1
.//1 2
Find//2 6
(//6 7
$str//7 D
)//D E
.//E F
Find//F J
(//J K
$str//K U
)//U V
.//V W
Find//W [
(//[ \
$str//\ e
)//e f
.//f g
GetComponent//g s
<//s t
RectTransform	//t Å
>
//Å Ç
(
//Ç É
)
//É Ñ
.
//Ñ Ö
	sizeDelta
//Ö é
.
//é è
x
//è ê
,
//ê ë
this00 
.00 

gameObject00 
.00 
	transform00 %
.00% &
Find00& *
(00* +
$str00+ 8
)008 9
.009 :
Find00: >
(00> ?
$str00? I
)00I J
.00J K
Find00K O
(00O P
$str00P Y
)00Y Z
.00Z [
Find00[ _
(00_ `
$str00` u
)00u v
.00v w
GetComponent	00w É
<
00É Ñ
RectTransform
00Ñ ë
>
00ë í
(
00í ì
)
00ì î
.
00î ï
	sizeDelta
00ï û
.
00û ü
y
00ü †
)
00† °
;
00° ¢
}11 
public44 

void44 
DeactivatePanel44 
(44  
)44  !
{55 

gameObject66 
.66 
	SetActive66 
(66 
false66 "
)66" #
;66# $
}77 
public99 

void99 
AcceptFarmer99 
(99 
)99 
{:: 
if;; 

(;; 
clientSender;; 
!=;; 
null;;  
);;  !
{<< 	

GameObject== 
.== !
FindGameObjectWithTag== ,
(==, -
$str==- :
)==: ;
.==; <
GetComponent==< H
<==H I

GameMaster==I S
>==S T
(==T U
)==U V
.==V W
CurrentClient==W d
===e f
clientSender==g s
.==s t

gameObject==t ~
;==~ 
DeactivatePanel>> 
(>> 
)>> 
;>> 
}?? 	
}@@ 
publicAA 

voidAA "
AcceptRestaurantClientAA &
(AA' (
)AA( )
{BB 
ItemCC 
wineCC 
=CC 

GameObjectCC 
.CC !
FindGameObjectWithTagCC 4
(CC4 5
$strCC5 B
)CCB C
.CCC D
GetComponentCCD P
<CCP Q
	InventoryCCQ Z
>CCZ [
(CC[ \
)CC\ ]
.CC] ^
itemsCC^ c
[CCc d
$strCCd l
]CCl m
;CCm n
ifEE 

(EE 
wineEE 
.EE 
	itemCountEE 
>EE 
$numEE 
)EE 
{FF 	
wineGG 
.GG 
PopItemGG 
(GG 
)GG 
;GG 
DebugHH 
.HH 
LogHH 
(HH 
$strHH !
)HH! "
;HH" #
}II 	
}JJ 
}KK ˆP
^C:\Users\Administrator\Desktop\git_wine\wine-game\Assets\AA_Rami\CustomerSystem\TestWineOne.cs
public 
class 
TestWineOne 
: 
MonoBehaviour (
{) *
Wine		 
wineTest			 
;		 
public 


GameObject 
go 
; 
Wine 
wineTwo	 
; 
void 
Start	 
( 
) 
{ 
wineTwo 
= 
go 
. 
GetComponent !
<! "
TestWineTwo" -
>- .
(. /
)/ 0
.0 1
wineTest1 9
;9 :
wineTest 
= 
new 
Wine 
( 
) 
; 
wineTest 
. 
AClarity 
= 
Wine  
.  !
AppearanceClarity! 2
.2 3
Clear3 8
;8 9
wineTest 
. 

AIntensity 
= 
Wine "
." #
AppearanceIntensity# 6
.6 7
Deep7 ;
;; <
wineTest 
. 
Color 
( 
Wine 
. %
AppearanceColorGategories 5
.5 6
RedWineColour6 C
,C D
(E F
intF I
)I J
WineJ N
.N O"
AppearanceRedWineColorO e
.e f
Purplef l
)l m
;m n
wineTest 
. 

NCondition 
= 
Wine "
." #
NoseCondition# 0
.0 1
Clean1 6
;6 7
wineTest 
. 

NIntensity 
= 
Wine "
." #
NoseIntensity# 0
.0 1
Deep1 5
;5 6
wineTest 
. 
Aromas 
[ 
$num 
] 
= 
wineTest %
.% &
Aroma& +
(+ ,
(, -
int- 0
)0 1
Wine1 5
.5 6
MainGategories6 D
.D E
NoseE I
,I J
(K L
intL O
)O P
WineP T
.T U
NoseGategoriesU c
.c d
Aromad i
,i j
(k l
intl o
)o p
Winep t
.t u&
AromaAndFlavourGategories	u é
.
é è
FloralFruit
è ö
,
ö õ
(
† °
int
° §
)
§ •
Wine
• ©
.
© ™#
FloralFruitGategories
™ ø
.
ø ¿
CitrusFruit
¿ À
,
À Ã
(
‘ ’
int
’ ÿ
)
ÿ Ÿ
Wine
Ÿ ›
.
› ﬁ(
AromaAndFlavourCitrusFruit
ﬁ ¯
.
¯ ˘

Grapefruit
˘ É
)
É Ñ
;
Ñ Ö
wineTest 
. 
Aromas 
[ 
$num 
] 
= 
wineTest %
.% &
Aroma& +
(+ ,
(, -
int- 0
)0 1
Wine1 5
.5 6
MainGategories6 D
.D E
NoseE I
,I J
(K L
intL O
)O P
WineP T
.T U
NoseGategoriesU c
.c d
Aromad i
,i j
(k l
intl o
)o p
Winep t
.t u&
AromaAndFlavourGategories	u é
.
é è
OakOther
è ó
,
ó ò
(
† °
int
° §
)
§ •
Wine
• ©
.
© ™ 
OakOtherGategories
™ º
.
º Ω
Kernel
Ω √
,
√ ƒ
(
‘ ’
int
’ ÿ
)
ÿ Ÿ
Wine
Ÿ ›
.
› ﬁ#
AromaAndFlavourKernel
ﬁ Û
.
Û Ù
Almond
Ù ˙
)
˙ ˚
;
˚ ¸
wineTest 
. 
Aromas 
[ 
$num 
] 
= 
wineTest %
.% &
Aroma& +
(+ ,
(, -
int- 0
)0 1
Wine1 5
.5 6
MainGategories6 D
.D E
NoseE I
,I J
(K L
intL O
)O P
WineP T
.T U
NoseGategoriesU c
.c d
Aromad i
,i j
(k l
intl o
)o p
Winep t
.t u&
AromaAndFlavourGategories	u é
.
é è
SpiceVegetable
è ù
,
ù û
(
† °
int
° §
)
§ •
Wine
• ©
.
© ™&
SpiceVegetableGategories
™ ¬
.
¬ √
PungentSpice
√ œ
,
œ –
(
‘ ’
int
’ ÿ
)
ÿ Ÿ
Wine
Ÿ ›
.
› ﬁ)
AromaAndFlavourPungentSpice
ﬁ ˘
.
˘ ˙
BlackPepper
˙ Ö
)
Ö Ü
;
Ü á
wineTest!! 
.!! 

PSweetness!! 
=!! 
Wine!! "
.!!" #
PalateSweetness!!# 2
.!!2 3
Dry!!3 6
;!!6 7
wineTest"" 
."" 
PAcidity"" 
="" 
Wine""  
.""  !
PalateAcidity""! .
."". /
Medium""/ 5
;""5 6
wineTest## 
.## 
PTannin## 
=## 
Wine## 
.##  
PalateTannin##  ,
.##, -
Low##- 0
;##0 1
wineTest$$ 
.$$ 
PBody$$ 
=$$ 
Wine$$ 
.$$ 

PalateBody$$ (
.$$( )
Full$$) -
;$$- .
wineTest&& 
.&& 
Flavours&& 
[&& 
$num&& 
]&& 
=&& 
wineTest&& '
.&&' (
Aroma&&( -
(&&- .
(&&. /
int&&/ 2
)&&2 3
Wine&&3 7
.&&7 8
MainGategories&&8 F
.&&F G
Palate&&G M
,&&M N
(&&O P
int&&P S
)&&S T
Wine&&T X
.&&X Y
PalateGategories&&Y i
.&&i j#
FlavourCharasteristics	&&j Ä
,
&&Ä Å
(
&&Ç É
int
&&É Ü
)
&&Ü á
Wine
&&á ã
.
&&ã å'
AromaAndFlavourGategories
&&å •
.
&&• ¶
FloralFruit
&&¶ ±
,
&&± ≤
(
&&∏ π
int
&&π º
)
&&º Ω
Wine
&&Ω ¡
.
&&¡ ¬#
FloralFruitGategories
&&¬ ◊
.
&&◊ ÿ
CitrusFruit
&&ÿ „
,
&&„ ‰
(
&&Ë È
int
&&È Ï
)
&&Ï Ì
Wine
&&Ì Ò
.
&&Ò Ú(
AromaAndFlavourCitrusFruit
&&Ú å
.
&&å ç

Grapefruit
&&ç ó
)
&&ó ò
;
&&ò ô
wineTest'' 
.'' 
Flavours'' 
['' 
$num'' 
]'' 
='' 
wineTest'' '
.''' (
Aroma''( -
(''- .
(''. /
int''/ 2
)''2 3
Wine''3 7
.''7 8
MainGategories''8 F
.''F G
Palate''G M
,''M N
(''O P
int''P S
)''S T
Wine''T X
.''X Y
PalateGategories''Y i
.''i j#
FlavourCharasteristics	''j Ä
,
''Ä Å
(
''Ç É
int
''É Ü
)
''Ü á
Wine
''á ã
.
''ã å'
AromaAndFlavourGategories
''å •
.
''• ¶
OakOther
''¶ Æ
,
''Æ Ø
(
''∏ π
int
''π º
)
''º Ω
Wine
''Ω ¡
.
''¡ ¬ 
OakOtherGategories
''¬ ‘
.
''‘ ’
Maturity
''’ ›
,
''› ﬁ
(
''Ë È
int
''È Ï
)
''Ï Ì
Wine
''Ì Ò
.
''Ò Ú%
AromaAndFlavourMaturity
''Ú â
.
''â ä
Cedar
''ä è
)
''è ê
;
''ê ë
wineTest(( 
.(( 
Flavours(( 
[(( 
$num(( 
](( 
=(( 
wineTest(( '
.((' (
Aroma((( -
(((- .
(((. /
int((/ 2
)((2 3
Wine((3 7
.((7 8
MainGategories((8 F
.((F G
Palate((G M
,((M N
(((O P
int((P S
)((S T
Wine((T X
.((X Y
PalateGategories((Y i
.((i j#
FlavourCharasteristics	((j Ä
,
((Ä Å
(
((Ç É
int
((É Ü
)
((Ü á
Wine
((á ã
.
((ã å'
AromaAndFlavourGategories
((å •
.
((• ¶
SpiceVegetable
((¶ ¥
,
((¥ µ
(
((∏ π
int
((π º
)
((º Ω
Wine
((Ω ¡
.
((¡ ¬&
SpiceVegetableGategories
((¬ ⁄
.
((⁄ €
Herbal
((€ ·
,
((· ‚
(
((Ë È
int
((È Ï
)
((Ï Ì
Wine
((Ì Ò
.
((Ò Ú#
AromaAndFlavourHerbal
((Ú á
.
((á à
Dill
((à å
)
((å ç
;
((ç é
wineTest** 
.** 
PFinish** 
=** 
Wine** 
.**  
PalateFinish**  ,
.**, -
Medium**- 3
;**3 4
wineTest,, 
.,, 
WineQuality,, 
=,, 
Wine,, #
.,,# $
Quality,,$ +
.,,+ ,

Acceptable,,, 6
;,,6 7
wineTest.. 
... 
readyMatrix.. 
=.. 
wineTest.. '
...' (
GetMatrixes..( 3
(..3 4
)..4 5
;..5 6
wineTwo// 
.// 
readyMatrix// 
=// 
wineTwo// %
.//% &
GetMatrixes//& 1
(//1 2
)//2 3
;//3 4
int00 
i00 
=00 
wineTest00 
.00 
CompareWines00 %
(00% &
wineTwo00& -
)00- .
;00. /
Debug22 
.22 
Log22 
(22 
$str22 
+22  
i22! "
+22# $
$str22% 5
)225 6
;226 7
}33 
}66 øH
^C:\Users\Administrator\Desktop\git_wine\wine-game\Assets\AA_Rami\CustomerSystem\TestWineTwo.cs
public 
class 
TestWineTwo 
: 
MonoBehaviour (
{ 
public 

Wine 
wineTest 
; 
void 
Start	 
( 
) 
{ 
wineTest 
= 
new 
Wine 
( 
) 
; 
wineTest 
. 
AClarity 
= 
Wine  
.  !
AppearanceClarity! 2
.2 3
Clear3 8
;8 9
wineTest 
. 

AIntensity 
= 
Wine "
." #
AppearanceIntensity# 6
.6 7
Pale7 ;
;; <
wineTest 
. 
Color 
( 
Wine 
. %
AppearanceColorGategories 5
.5 6
WhiteWineColour6 E
,E F
(G H
intH K
)K L
WineL P
.P Q$
AppearanceWhiteWineColorQ i
.i j
Amberj o
)o p
;p q
wineTest 
. 

NCondition 
= 
Wine "
." #
NoseCondition# 0
.0 1
Clean1 6
;6 7
wineTest 
. 

NIntensity 
= 
Wine "
." #
NoseIntensity# 0
.0 1
Light1 6
;6 7
wineTest 
. 
Aromas 
[ 
$num 
] 
= 
wineTest %
.% &
Aroma& +
(+ ,
(, -
int- 0
)0 1
Wine1 5
.5 6
MainGategories6 D
.D E
NoseE I
,I J
(K L
intL O
)O P
WineP T
.T U
NoseGategoriesU c
.c d
Aromad i
,i j
(k l
intl o
)o p
Winep t
.t u&
AromaAndFlavourGategories	u é
.
é è
FloralFruit
è ö
,
ö õ
(
ú ù
int
ù †
)
† °
Wine
° •
.
• ¶#
FloralFruitGategories
¶ ª
.
ª º

GreenFruit
º ∆
,
∆ «
(
» …
int
… Ã
)
Ã Õ
Wine
Õ —
.
— “'
AromaAndFlavourGreenFruit
“ Î
.
Î Ï

GreenApple
Ï ˆ
)
ˆ ˜
;
˜ ¯
wineTest 
. 
Aromas 
[ 
$num 
] 
= 
wineTest %
.% &
Aroma& +
(+ ,
(, -
int- 0
)0 1
Wine1 5
.5 6
MainGategories6 D
.D E
NoseE I
,I J
(K L
intL O
)O P
WineP T
.T U
NoseGategoriesU c
.c d
Aromad i
,i j
(k l
intl o
)o p
Winep t
.t u&
AromaAndFlavourGategories	u é
.
é è
OakOther
è ó
,
ó ò
(
ô ö
int
ö ù
)
ù û
Wine
û ¢
.
¢ £ 
OakOtherGategories
£ µ
.
µ ∂
Oak
∂ π
,
π ∫
(
ª º
int
º ø
)
ø ¿
Wine
¿ ƒ
.
ƒ ≈ 
AromaAndFlavourOak
≈ ◊
.
◊ ÿ
Vanilla
ÿ ﬂ
)
ﬂ ‡
;
‡ ·
wineTest 
. 
Aromas 
[ 
$num 
] 
= 
wineTest %
.% &
Aroma& +
(+ ,
(, -
int- 0
)0 1
Wine1 5
.5 6
MainGategories6 D
.D E
NoseE I
,I J
(K L
intL O
)O P
WineP T
.T U
NoseGategoriesU c
.c d
Aromad i
,i j
(k l
intl o
)o p
Winep t
.t u&
AromaAndFlavourGategories	u é
.
é è
FloralFruit
è ö
,
ö õ
(
ú ù
int
ù †
)
† °
Wine
° •
.
• ¶#
FloralFruitGategories
¶ ª
.
ª º
TropicalFruit
º …
,
…  
(
À Ã
int
Ã œ
)
œ –
Wine
– ‘
.
‘ ’*
AromaAndFlavourTropicalFruit
’ Ò
.
Ò Ú
Banana
Ú ¯
)
¯ ˘
;
˘ ˙
wineTest 
. 

PSweetness 
= 
Wine "
." #
PalateSweetness# 2
.2 3
Sweet3 8
;8 9
wineTest 
. 
PAcidity 
= 
Wine  
.  !
PalateAcidity! .
.. /
Low/ 2
;2 3
wineTest 
. 
PTannin 
= 
Wine 
.  
PalateTannin  ,
., -
Low- 0
;0 1
wineTest   
.   
PBody   
=   
Wine   
.   

PalateBody   (
.  ( )
Light  ) .
;  . /
wineTest"" 
."" 
Flavours"" 
["" 
$num"" 
]"" 
="" 
wineTest"" '
.""' (
Aroma""( -
(""- .
("". /
int""/ 2
)""2 3
Wine""3 7
.""7 8
MainGategories""8 F
.""F G
Palate""G M
,""M N
(""O P
int""P S
)""S T
Wine""T X
.""X Y
PalateGategories""Y i
.""i j#
FlavourCharasteristics	""j Ä
,
""Ä Å
(
""Ç É
int
""É Ü
)
""Ü á
Wine
""á ã
.
""ã å'
AromaAndFlavourGategories
""å •
.
""• ¶
FloralFruit
""¶ ±
,
""± ≤
(
""≥ ¥
int
""¥ ∑
)
""∑ ∏
Wine
""∏ º
.
""º Ω#
FloralFruitGategories
""Ω “
.
""“ ”

GreenFruit
""” ›
,
""› ﬁ
(
""ﬂ ‡
int
""‡ „
)
""„ ‰
Wine
""‰ Ë
.
""Ë È'
AromaAndFlavourGreenFruit
""È Ç
.
""Ç É

GreenApple
""É ç
)
""ç é
;
""é è
wineTest## 
.## 
Flavours## 
[## 
$num## 
]## 
=## 
wineTest## '
.##' (
Aroma##( -
(##- .
(##. /
int##/ 2
)##2 3
Wine##3 7
.##7 8
MainGategories##8 F
.##F G
Palate##G M
,##M N
(##O P
int##P S
)##S T
Wine##T X
.##X Y
PalateGategories##Y i
.##i j#
FlavourCharasteristics	##j Ä
,
##Ä Å
(
##Ç É
int
##É Ü
)
##Ü á
Wine
##á ã
.
##ã å'
AromaAndFlavourGategories
##å •
.
##• ¶
FloralFruit
##¶ ±
,
##± ≤
(
##≥ ¥
int
##¥ ∑
)
##∑ ∏
Wine
##∏ º
.
##º Ω#
FloralFruitGategories
##Ω “
.
##“ ”

DriedFruit
##” ›
,
##› ﬁ
(
##ﬂ ‡
int
##‡ „
)
##„ ‰
Wine
##‰ Ë
.
##Ë È'
AromaAndFlavourDriedFruit
##È Ç
.
##Ç É
Baked
##É à
)
##à â
;
##â ä
wineTest$$ 
.$$ 
Flavours$$ 
[$$ 
$num$$ 
]$$ 
=$$ 
wineTest$$ '
.$$' (
Aroma$$( -
($$- .
($$. /
int$$/ 2
)$$2 3
Wine$$3 7
.$$7 8
MainGategories$$8 F
.$$F G
Palate$$G M
,$$M N
($$O P
int$$P S
)$$S T
Wine$$T X
.$$X Y
PalateGategories$$Y i
.$$i j#
FlavourCharasteristics	$$j Ä
,
$$Ä Å
(
$$Ç É
int
$$É Ü
)
$$Ü á
Wine
$$á ã
.
$$ã å'
AromaAndFlavourGategories
$$å •
.
$$• ¶
OakOther
$$¶ Æ
,
$$Æ Ø
(
$$∞ ±
int
$$± ¥
)
$$¥ µ
Wine
$$µ π
.
$$π ∫ 
OakOtherGategories
$$∫ Ã
.
$$Ã Õ
Oak
$$Õ –
,
$$– —
(
$$“ ”
int
$$” ÷
)
$$÷ ◊
Wine
$$◊ €
.
$$€ ‹ 
AromaAndFlavourOak
$$‹ Ó
.
$$Ó Ô
Vanilla
$$Ô ˆ
)
$$ˆ ˜
;
$$˜ ¯
wineTest&& 
.&& 
PFinish&& 
=&& 
Wine&& 
.&&  
PalateFinish&&  ,
.&&, -
Short&&- 2
;&&2 3
wineTest(( 
.(( 
WineQuality(( 
=(( 
Wine(( #
.((# $
Quality(($ +
.((+ ,
Outstanding((, 7
;((7 8
})) 
}** Ôπ
WC:\Users\Administrator\Desktop\git_wine\wine-game\Assets\AA_Rami\CustomerSystem\Wine.cs
public 
class 
Wine 
{		 
public

 

int

 
[

 
]

 
[

 
]

 
readyMatrix

 
;

 
public 

static 
int "
MaximumTastesAndScents ,
=- .
$num/ 0
;0 1
public 

int 
[ 
] 
[ 
] 
Aromas 
= 
new 
int  #
[# $"
MaximumTastesAndScents$ :
]: ;
[; <
]< =
;= >
public 

int 
[ 
] 
[ 
] 
Flavours 
= 
new !
int" %
[% &"
MaximumTastesAndScents& <
]< =
[= >
]> ?
;? @
public 

AppearanceClarity 
AClarity %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
public 

AppearanceIntensity 

AIntensity )
{* +
get, /
;/ 0
set1 4
;4 5
}6 7
public 
%
AppearanceColorGategories $
AColorGategory% 3
{4 5
get6 9
;9 :
set; >
;> ?
}@ A
public 
$
AppearanceWhiteWineColor #
AWhiteWineColor$ 3
{4 5
get6 9
;9 :
set; >
;> ?
}@ A
public 
#
AppearanceRoseWineColor "
ARoseWineColor# 1
{2 3
get4 7
;7 8
set9 <
;< =
}> ?
public 
"
AppearanceRedWineColor !
ARedWineColor" /
{0 1
get2 5
;5 6
set7 :
;: ;
}< =
public 

NoseCondition 

NCondition #
{$ %
get& )
;) *
set+ .
;. /
}0 1
public   

NoseIntensity   

NIntensity   #
{  $ %
get  & )
;  ) *
set  + .
;  . /
}  0 1
public"" 

PalateSweetness"" 

PSweetness"" %
{""& '
get""( +
;""+ ,
set""- 0
;""0 1
}""2 3
public$$ 

PalateAcidity$$ 
PAcidity$$ !
{$$" #
get$$$ '
;$$' (
set$$) ,
;$$, -
}$$. /
public&& 

PalateTannin&& 
PTannin&& 
{&&  !
get&&" %
;&&% &
set&&' *
;&&* +
}&&, -
public(( 


PalateBody(( 
PBody(( 
{(( 
get(( !
;((! "
set((# &
;((& '
}((( )
public** 

PalateFinish** 
PFinish** 
{**  !
get**" %
;**% &
set**' *
;*** +
}**, -
public,, 

Quality,, 
WineQuality,, 
{,,  
get,,  #
;,,# $
set,,$ '
;,,' (
},,( )
public11 

enum11 
MainGategories11 
{22 

Appearance33 
,33 
Nose44 
,44 
Palate55 
,55 
Conclusions66 
}77 
;77 
public99 

enum99  
AppearanceGategories99 $
{:: 
Clarity;; 
,;; 
	Intensity<< 
,<< 
Color== 
}>> 
public@@ 

enum@@ 
AppearanceClarity@@ !
{AA 
ClearBB 
,BB 
HazyCC 
}DD 
;DD 
publicEE 

enumEE 
AppearanceIntensityEE #
{FF 
PaleGG 
,GG 
MediumHH 
,HH 
DeepII 
}JJ 
;JJ 
publicLL 

enumLL %
AppearanceColorGategoriesLL )
{MM 
WhiteWineColourNN 
,NN 
RoseWineColourOO 
,OO 
RedWineColourPP 
}QQ 
;QQ 
publicRR 

enumRR $
AppearanceWhiteWineColorRR (
{SS 
LemonTT 
,TT 
GoldUU 
,UU 
AmberVV 
}WW 
;WW 
publicYY 

enumYY #
AppearanceRoseWineColorYY '
{ZZ 
Pink[[ 
,[[ 
Salmon\\ 
,\\ 
Orange]] 
}^^ 
;^^ 
public`` 

enum`` "
AppearanceRedWineColor`` &
{aa 
Purplebb 
,bb 
Rubycc 
,cc 
Garnetdd 
,dd 
Tawnyee 
}ff 
;ff 
publichh 

enumhh 
NoseGategorieshh 
{ii 
	Conditionjj 
,jj 
	Intensitykk 
,kk 
Aromall 
}mm 
;mm 
publicoo 

enumoo 
NoseConditionoo 
{pp 
Cleanqq 
,qq 
Uncleanrr 
}ss 
;ss 
publicuu 

enumuu 
NoseIntensityuu 
{vv 
Lightww 
,ww 
Mediumxx 
,xx 
Deepyy 
}zz 
;zz 
public}} 

enum}} %
AromaAndFlavourGategories}} )
{~~ 
FloralFruit 
, 
SpiceVegetable
ÄÄ 
,
ÄÄ 
OakOther
ÅÅ 
}
ÇÇ 
;
ÇÇ 
public
ÑÑ 

enum
ÑÑ #
FloralFruitGategories
ÑÑ %
{
ÖÖ 
Floral
ÜÜ 
,
ÜÜ 

GreenFruit
áá 
,
áá 
CitrusFruit
àà 
,
àà 

StoneFruit
ââ 
,
ââ 
TropicalFruit
ää 
,
ää 
RedFruit
ãã 
,
ãã 

BlackFruit
åå 
,
åå 

DriedFruit
çç 
}
éé 
;
éé 
public
êê 

enum
êê &
SpiceVegetableGategories
êê (
{
ëë 
Underripeness
íí 
,
íí 

Herbaceous
ìì 
,
ìì 
Herbal
îî 
,
îî 
	Vegetable
ïï 
,
ïï 

SweetSpice
ññ 
,
ññ 
PungentSpice
óó 
}
òò 
;
òò 
public
öö 

enum
öö  
OakOtherGategories
öö "
{
õõ "
SimplicityNeutrality
úú 
,
úú 
	Autolytic
ùù 
,
ùù 
Dairy
ûû 
,
ûû 
Oak
üü 
,
üü 
Kernel
†† 
,
†† 
Animal
°° 
,
°° 
Maturity
¢¢ 
,
¢¢ 
Mineral
££ 
}
§§ 
;
§§ 
public
¶¶ 

enum
¶¶ #
AromaAndFlavourFloral
¶¶ %
{
ßß 
Blossom
®® 
,
®® 
Rose
©© 
,
©© 
Violet
™™ 
}
´´ 
;
´´ 
public
≠≠ 

enum
≠≠ '
AromaAndFlavourGreenFruit
≠≠ )
{
ÆÆ 

GreenApple
ØØ 
,
ØØ 
RedApple
∞∞ 
,
∞∞ 

Gooseberry
±± 
,
±± 
Pear
≤≤ 
,
≤≤ 
Grape
≥≥ 
}
¥¥ 
;
¥¥ 
public
∂∂ 

enum
∂∂ (
AromaAndFlavourCitrusFruit
∂∂ *
{
∑∑ 

Grapefruit
∏∏ 
,
∏∏ 
Lemon
ππ 
,
ππ 
	LimeJuice
∫∫ 
,
∫∫ 
LimeZest
ªª 
}
ºº 
;
ºº 
public
ææ 

enum
ææ '
AromaAndFlavourStoneFruit
ææ )
{
øø 
Peach
¿¿ 
,
¿¿ 
Apricot
¡¡ 
,
¡¡ 
	Nectarine
¬¬ 
}
√√ 
;
√√ 
public
≈≈ 

enum
≈≈ *
AromaAndFlavourTropicalFruit
≈≈ ,
{
∆∆ 
Banana
«« 
,
«« 
Lychee
»» 
,
»» 
Mango
…… 
,
…… 
Melon
   
,
   
PassionFruit
ÀÀ 
,
ÀÀ 
	Pineapple
ÃÃ 
}
ÕÕ 
;
ÕÕ 
public
œœ 

enum
œœ %
AromaAndFlavourRedFruit
œœ '
{
–– 

Redcurrant
—— 
,
—— 
	Cranberry
““ 
,
““ 
	Raspberry
”” 
,
”” 

Strawberry
‘‘ 
,
‘‘ 
	RedCherry
’’ 
,
’’ 
Plum
÷÷ 
}
◊◊ 
;
◊◊ 
public
ŸŸ 

enum
ŸŸ '
AromaAndFlavourBlackFruit
ŸŸ )
{
⁄⁄ 
Blackcurrant
€€ 
,
€€ 

Blackberry
‹‹ 
,
‹‹ 
	Blueberry
›› 
,
›› 
BlackCherry
ﬁﬁ 
}
ﬂﬂ 
;
ﬂﬂ 
public
·· 

enum
·· '
AromaAndFlavourDriedFruit
·· )
{
‚‚ 
Fig
„„ 
,
„„ 
Prune
‰‰ 
,
‰‰ 
Raisin
ÂÂ 
,
ÂÂ 
Sultana
ÊÊ 
,
ÊÊ 
Kirsch
ÁÁ 
,
ÁÁ 
	Jamminess
ËË 
,
ËË 
Cooked
ÈÈ 
,
ÈÈ 
Baked
ÍÍ 
,
ÍÍ 
StewedFruits
ÎÎ 
,
ÎÎ 
PreservedFruits
ÏÏ 
}
ÌÌ 
;
ÌÌ 
public
ÔÔ 

enum
ÔÔ *
AromaAndFlavourUnderripeness
ÔÔ ,
{
 
GreenBellPepper
ÒÒ 
,
ÒÒ 
Grass
ÚÚ 
,
ÚÚ 
WhitePepper
ÛÛ 
,
ÛÛ 
	Leafiness
ÙÙ 
,
ÙÙ 
Tomato
ıı 
,
ıı 
Potato
ˆˆ 
}
˜˜ 
;
˜˜ 
public
˘˘ 

enum
˘˘ '
AromaAndFlavourHerbaceous
˘˘ )
{
˙˙ 
Grass
˚˚ 
,
˚˚ 
	Asparagus
¸¸ 
,
¸¸ 
BlackcurrantLeaf
˝˝ 
}
˛˛ 
;
˛˛ 
public
ÄÄ 

enum
ÄÄ #
AromaAndFlavourHerbal
ÄÄ %
{
ÅÅ 

Eucalyptus
ÇÇ 
,
ÇÇ 
Mint
ÉÉ 
,
ÉÉ 
	Medicinal
ÑÑ 
,
ÑÑ 
Lavender
ÖÖ 
,
ÖÖ 
Fennel
ÜÜ 
,
ÜÜ 
Dill
áá 
}
àà 
;
àà 
public
ää 

enum
ää &
AromaAndFlavourVegetable
ää (
{
ãã 
Cabbage
åå 
,
åå 
Peas
çç 
,
çç 
Beans
éé 
,
éé 

BlackOlive
èè 
,
èè 

GreenOlive
êê 
}
ëë 
;
ëë 
public
ìì 

enum
ìì '
AromaAndFlavourSweetSpice
ìì )
{
îî 
Cinnamon
ïï 
,
ïï 
Cloves
ññ 
,
ññ 
Ginger
óó 
,
óó 
Nutmeg
òò 
,
òò 
Vanilla
ôô 
}
öö 
;
öö 
public
úú 

enum
úú )
AromaAndFlavourPungentSpice
úú +
{
ùù 
BlackPepper
ûû 
,
ûû 
WhitePepper
üü 
,
üü 
	Liquorice
†† 
,
†† 
Juniper
°° 
}
¢¢ 
;
¢¢ 
public
§§ 

enum
§§ 1
#AromaAndFlavourSimplicityNeutrality
§§ 3
{
•• 
Simple
¶¶ 
,
¶¶ 
Neutral
ßß 
,
ßß 

Indistinct
®® 
}
©© 
;
©© 
public
´´ 

enum
´´ &
AromaAndFlavourAutolytic
´´ (
{
¨¨ 
Yeast
≠≠ 
,
≠≠ 
Biscuit
ÆÆ 
,
ÆÆ 
Bread
ØØ 
,
ØØ 
Toast
∞∞ 
,
∞∞ 
Pastry
±± 
,
±± 
Lees
≤≤ 
}
≥≥ 
;
≥≥ 
public
µµ 

enum
µµ "
AromaAndFlavourDairy
µµ $
{
∂∂ 
Butter
∑∑ 
,
∑∑ 
Cheese
∏∏ 
,
∏∏ 
Cream
ππ 
,
ππ 
Yoghurt
∫∫ 
}
ªª 
;
ªª 
public
ΩΩ 

enum
ΩΩ  
AromaAndFlavourOak
ΩΩ "
{
ææ 
Vanilla
øø 
,
øø 
Toast
¿¿ 
,
¿¿ 
Cedar
¡¡ 
,
¡¡ 
CharredWood
¬¬ 
,
¬¬ 
Smoke
√√ 
,
√√ 
Resinous
ƒƒ 
}
≈≈ 
;
≈≈ 
public
«« 

enum
«« #
AromaAndFlavourKernel
«« %
{
»» 
Almond
…… 
,
…… 
Coconut
   
,
   
HazelNut
ÀÀ 
,
ÀÀ 
Walnut
ÃÃ 
,
ÃÃ 

Chocholate
ÕÕ 
,
ÕÕ 
Coffee
ŒŒ 
}
œœ 
;
œœ 
public
—— 

enum
—— #
AromaAndFlavourAnimal
—— %
{
““ 
Leather
”” 
,
”” 
Meaty
‘‘ 
,
‘‘ 
Farmyard
’’ 
}
÷÷ 
;
÷÷ 
public
ÿÿ 

enum
ÿÿ %
AromaAndFlavourMaturity
ÿÿ '
{
ŸŸ 
Vegetal
⁄⁄ 
,
⁄⁄ 
Mushroom
€€ 
,
€€ 
Hay
‹‹ 
,
‹‹ 
	WetLeaves
›› 
,
›› 
ForestFloot
ﬁﬁ 
,
ﬁﬁ 
Game
ﬂﬂ 
,
ﬂﬂ 
Savory
‡‡ 
,
‡‡ 
Tobacco
·· 
,
·· 
Cedar
‚‚ 
,
‚‚ 
Honey
„„ 
,
„„ 
Cereal
‰‰ 
}
ÂÂ 
;
ÂÂ 
public
ÁÁ 

enum
ÁÁ $
AromaAndFlavourMineral
ÁÁ &
{
ËË 
Earth
ÈÈ 
,
ÈÈ 
Petrol
ÍÍ 
,
ÍÍ 
Rubber
ÎÎ 
,
ÎÎ 
Tar
ÏÏ 
,
ÏÏ 
Stony
ÌÌ 
,
ÌÌ 
Steely
ÓÓ 
,
ÓÓ 
WetWool
ÔÔ 
}
 
;
 
public
ÚÚ 

enum
ÚÚ 
PalateGategories
ÚÚ  
{
ÛÛ 
	Sweetness
ÙÙ 
,
ÙÙ 
Acidity
ıı 
,
ıı 
Tannin
ˆˆ 
,
ˆˆ 
Body
˜˜ 
,
˜˜ $
FlavourCharasteristics
¯¯ 
,
¯¯ 
Finish
˘˘ 
,
˘˘ 
}
˙˙ 
;
˙˙ 
public
¸¸ 

enum
¸¸ 
PalateSweetness
¸¸ 
{
˝˝ 
Dry
˛˛ 
,
˛˛ 
OffDry
ˇˇ 
,
ˇˇ 
Medium
ÄÄ 
,
ÄÄ 
Sweet
ÅÅ 
}
ÇÇ 
;
ÇÇ 
public
ÑÑ 

enum
ÑÑ 
PalateAcidity
ÑÑ 
{
ÖÖ 
Low
ÜÜ 
,
ÜÜ 
Medium
áá 
,
áá 
High
àà 
}
ââ 
;
ââ 
public
ãã 

enum
ãã 
PalateTannin
ãã 
{
åå 
Low
çç 
,
çç 
Medium
çç 
,
çç 
High
çç 
}
éé 
;
éé 
public
êê 

enum
êê 

PalateBody
êê 
{
ëë 
Light
íí 
,
íí 
Medium
íí 
,
íí 
Full
íí 
}
ìì 
;
ìì 
public
ïï 

enum
ïï 
PalateFinish
ïï 
{
ññ 
Short
óó 
,
óó 
Medium
òò 
,
òò 
Long
ôô 
}
öö 
;
öö 
public
úú 

enum
úú 
Quality
úú 
{
ùù 
Faulty
ûû 
,
ûû 
Poor
üü 
,
üü 

Acceptable
†† 
,
†† 
Good
°° 
,
°° 
VeryGood
¢¢ 
,
¢¢ 
Outstanding
££ 
}
§§ 
;
§§ 
public
©© 

int
©© 
[
©© 
]
©© 
[
©© 
]
©© 
GetMatrixes
©© 
(
©©  
)
©©  !
{
™™ 
int
´´ 
[
´´ 
]
´´ 
[
´´ 
]
´´ 
ComparisonMatrix
´´  
=
´´! "
new
´´# &
int
´´' *
[
´´* +
$num
´´+ -
]
´´- .
[
´´. /
]
´´/ 0
;
´´0 1
ComparisonMatrix
ÆÆ 
[
ÆÆ 
$num
ÆÆ 
]
ÆÆ 
=
ÆÆ 
new
ÆÆ !
int
ÆÆ" %
[
ÆÆ% &
$num
ÆÆ& '
]
ÆÆ' (
;
ÆÆ( )
ComparisonMatrix
ØØ 
[
ØØ 
$num
ØØ 
]
ØØ 
[
ØØ 
$num
ØØ 
]
ØØ 
=
ØØ  
(
ØØ! "
int
ØØ" %
)
ØØ% &
MainGategories
ØØ& 4
.
ØØ4 5

Appearance
ØØ5 ?
;
ØØ? @
ComparisonMatrix
∞∞ 
[
∞∞ 
$num
∞∞ 
]
∞∞ 
[
∞∞ 
$num
∞∞ 
]
∞∞ 
=
∞∞  
(
∞∞! "
int
∞∞" %
)
∞∞% &"
AppearanceGategories
∞∞& :
.
∞∞: ;
Clarity
∞∞; B
;
∞∞B C
ComparisonMatrix
±± 
[
±± 
$num
±± 
]
±± 
[
±± 
$num
±± 
]
±± 
=
±±  
(
±±! "
int
±±" %
)
±±% &
AClarity
±±& .
;
±±. /
ComparisonMatrix
¥¥ 
[
¥¥ 
$num
¥¥ 
]
¥¥ 
=
¥¥ 
new
¥¥ !
int
¥¥" %
[
¥¥% &
$num
¥¥& '
]
¥¥' (
;
¥¥( )
ComparisonMatrix
µµ 
[
µµ 
$num
µµ 
]
µµ 
[
µµ 
$num
µµ 
]
µµ 
=
µµ  
(
µµ! "
int
µµ" %
)
µµ% &
MainGategories
µµ& 4
.
µµ4 5

Appearance
µµ5 ?
;
µµ? @
ComparisonMatrix
∂∂ 
[
∂∂ 
$num
∂∂ 
]
∂∂ 
[
∂∂ 
$num
∂∂ 
]
∂∂ 
=
∂∂  
(
∂∂! "
int
∂∂" %
)
∂∂% &"
AppearanceGategories
∂∂& :
.
∂∂: ;
	Intensity
∂∂; D
;
∂∂D E
ComparisonMatrix
∑∑ 
[
∑∑ 
$num
∑∑ 
]
∑∑ 
[
∑∑ 
$num
∑∑ 
]
∑∑ 
=
∑∑  
(
∑∑! "
int
∑∑" %
)
∑∑% &

AIntensity
∑∑& 0
;
∑∑0 1
ComparisonMatrix
∫∫ 
[
∫∫ 
$num
∫∫ 
]
∫∫ 
=
∫∫ 
new
∫∫ !
int
∫∫" %
[
∫∫% &
$num
∫∫& '
]
∫∫' (
;
∫∫( )
switch
ªª 
(
ªª 
AColorGategory
ªª 
)
ªª 
{
ºº 	
case
ΩΩ '
AppearanceColorGategories
ΩΩ *
.
ΩΩ* +
WhiteWineColour
ΩΩ+ :
:
ΩΩ: ;
ComparisonMatrix
ææ  
[
ææ  !
$num
ææ! "
]
ææ" #
[
ææ# $
$num
ææ$ %
]
ææ% &
=
ææ' (
(
ææ) *
int
ææ* -
)
ææ- .
MainGategories
ææ. <
.
ææ< =

Appearance
ææ= G
;
ææG H
ComparisonMatrix
øø  
[
øø  !
$num
øø! "
]
øø" #
[
øø# $
$num
øø$ %
]
øø% &
=
øø' (
(
øø) *
int
øø* -
)
øø- ."
AppearanceGategories
øø. B
.
øøB C
Color
øøC H
;
øøH I
ComparisonMatrix
¿¿  
[
¿¿  !
$num
¿¿! "
]
¿¿" #
[
¿¿# $
$num
¿¿$ %
]
¿¿% &
=
¿¿' (
(
¿¿) *
int
¿¿* -
)
¿¿- .'
AppearanceColorGategories
¿¿. G
.
¿¿G H
WhiteWineColour
¿¿H W
;
¿¿W X
ComparisonMatrix
¡¡  
[
¡¡  !
$num
¡¡! "
]
¡¡" #
[
¡¡# $
$num
¡¡$ %
]
¡¡% &
=
¡¡' (
(
¡¡) *
int
¡¡* -
)
¡¡- .
AWhiteWineColor
¡¡. =
;
¡¡= >
break
¬¬ 
;
¬¬ 
case
√√ '
AppearanceColorGategories
√√ *
.
√√* +
RoseWineColour
√√+ 9
:
√√9 :
ComparisonMatrix
ƒƒ  
[
ƒƒ  !
$num
ƒƒ! "
]
ƒƒ" #
[
ƒƒ# $
$num
ƒƒ$ %
]
ƒƒ% &
=
ƒƒ' (
(
ƒƒ) *
int
ƒƒ* -
)
ƒƒ- .
MainGategories
ƒƒ. <
.
ƒƒ< =

Appearance
ƒƒ= G
;
ƒƒG H
ComparisonMatrix
≈≈  
[
≈≈  !
$num
≈≈! "
]
≈≈" #
[
≈≈# $
$num
≈≈$ %
]
≈≈% &
=
≈≈' (
(
≈≈) *
int
≈≈* -
)
≈≈- ."
AppearanceGategories
≈≈. B
.
≈≈B C
Color
≈≈C H
;
≈≈H I
ComparisonMatrix
∆∆  
[
∆∆  !
$num
∆∆! "
]
∆∆" #
[
∆∆# $
$num
∆∆$ %
]
∆∆% &
=
∆∆' (
(
∆∆) *
int
∆∆* -
)
∆∆- .'
AppearanceColorGategories
∆∆. G
.
∆∆G H
RoseWineColour
∆∆H V
;
∆∆V W
ComparisonMatrix
««  
[
««  !
$num
««! "
]
««" #
[
««# $
$num
««$ %
]
««% &
=
««' (
(
««) *
int
««* -
)
««- .
ARoseWineColor
««. <
;
««< =
break
»» 
;
»» 
case
…… '
AppearanceColorGategories
…… *
.
……* +
RedWineColour
……+ 8
:
……8 9
ComparisonMatrix
    
[
    !
$num
  ! "
]
  " #
[
  # $
$num
  $ %
]
  % &
=
  ' (
(
  ) *
int
  * -
)
  - .
MainGategories
  . <
.
  < =

Appearance
  = G
;
  G H
ComparisonMatrix
ÀÀ  
[
ÀÀ  !
$num
ÀÀ! "
]
ÀÀ" #
[
ÀÀ# $
$num
ÀÀ$ %
]
ÀÀ% &
=
ÀÀ' (
(
ÀÀ) *
int
ÀÀ* -
)
ÀÀ- ."
AppearanceGategories
ÀÀ. B
.
ÀÀB C
Color
ÀÀC H
;
ÀÀH I
ComparisonMatrix
ÃÃ  
[
ÃÃ  !
$num
ÃÃ! "
]
ÃÃ" #
[
ÃÃ# $
$num
ÃÃ$ %
]
ÃÃ% &
=
ÃÃ' (
(
ÃÃ) *
int
ÃÃ* -
)
ÃÃ- .'
AppearanceColorGategories
ÃÃ. G
.
ÃÃG H
RedWineColour
ÃÃH U
;
ÃÃU V
ComparisonMatrix
ÕÕ  
[
ÕÕ  !
$num
ÕÕ! "
]
ÕÕ" #
[
ÕÕ# $
$num
ÕÕ$ %
]
ÕÕ% &
=
ÕÕ' (
(
ÕÕ) *
int
ÕÕ* -
)
ÕÕ- .
ARedWineColor
ÕÕ. ;
;
ÕÕ; <
break
ŒŒ 
;
ŒŒ 
}
œœ 	
ComparisonMatrix
““ 
[
““ 
$num
““ 
]
““ 
=
““ 
new
““ !
int
““" %
[
““% &
$num
““& '
]
““' (
;
““( )
ComparisonMatrix
”” 
[
”” 
$num
”” 
]
”” 
[
”” 
$num
”” 
]
”” 
=
””  
(
””! "
int
””" %
)
””% &
MainGategories
””& 4
.
””4 5
Nose
””5 9
;
””9 :
ComparisonMatrix
‘‘ 
[
‘‘ 
$num
‘‘ 
]
‘‘ 
[
‘‘ 
$num
‘‘ 
]
‘‘ 
=
‘‘  
(
‘‘! "
int
‘‘" %
)
‘‘% &
NoseGategories
‘‘& 4
.
‘‘4 5
	Condition
‘‘5 >
;
‘‘> ?
ComparisonMatrix
’’ 
[
’’ 
$num
’’ 
]
’’ 
[
’’ 
$num
’’ 
]
’’ 
=
’’  
(
’’! "
int
’’" %
)
’’% &

NCondition
’’& 0
;
’’0 1
ComparisonMatrix
ÿÿ 
[
ÿÿ 
$num
ÿÿ 
]
ÿÿ 
=
ÿÿ 
new
ÿÿ !
int
ÿÿ" %
[
ÿÿ% &
$num
ÿÿ& '
]
ÿÿ' (
;
ÿÿ( )
ComparisonMatrix
ŸŸ 
[
ŸŸ 
$num
ŸŸ 
]
ŸŸ 
[
ŸŸ 
$num
ŸŸ 
]
ŸŸ 
=
ŸŸ  
(
ŸŸ! "
int
ŸŸ" %
)
ŸŸ% &
MainGategories
ŸŸ& 4
.
ŸŸ4 5
Nose
ŸŸ5 9
;
ŸŸ9 :
ComparisonMatrix
⁄⁄ 
[
⁄⁄ 
$num
⁄⁄ 
]
⁄⁄ 
[
⁄⁄ 
$num
⁄⁄ 
]
⁄⁄ 
=
⁄⁄  
(
⁄⁄! "
int
⁄⁄" %
)
⁄⁄% &
NoseGategories
⁄⁄& 4
.
⁄⁄4 5
	Intensity
⁄⁄5 >
;
⁄⁄> ?
ComparisonMatrix
€€ 
[
€€ 
$num
€€ 
]
€€ 
[
€€ 
$num
€€ 
]
€€ 
=
€€  
(
€€! "
int
€€" %
)
€€% &

NIntensity
€€& 0
;
€€0 1
ComparisonMatrix
ﬁﬁ 
[
ﬁﬁ 
$num
ﬁﬁ 
]
ﬁﬁ 
=
ﬁﬁ 
Aromas
ﬁﬁ $
[
ﬁﬁ$ %
$num
ﬁﬁ% &
]
ﬁﬁ& '
;
ﬁﬁ' (
ComparisonMatrix
ﬂﬂ 
[
ﬂﬂ 
$num
ﬂﬂ 
]
ﬂﬂ 
=
ﬂﬂ 
Aromas
ﬂﬂ $
[
ﬂﬂ$ %
$num
ﬂﬂ% &
]
ﬂﬂ& '
;
ﬂﬂ' (
ComparisonMatrix
‡‡ 
[
‡‡ 
$num
‡‡ 
]
‡‡ 
=
‡‡ 
Aromas
‡‡ $
[
‡‡$ %
$num
‡‡% &
]
‡‡& '
;
‡‡' (
ComparisonMatrix
„„ 
[
„„ 
$num
„„ 
]
„„ 
=
„„ 
new
„„ !
int
„„" %
[
„„% &
$num
„„& '
]
„„' (
;
„„( )
ComparisonMatrix
‰‰ 
[
‰‰ 
$num
‰‰ 
]
‰‰ 
[
‰‰ 
$num
‰‰ 
]
‰‰ 
=
‰‰  
(
‰‰! "
int
‰‰" %
)
‰‰% &
MainGategories
‰‰& 4
.
‰‰4 5
Palate
‰‰5 ;
;
‰‰; <
ComparisonMatrix
ÂÂ 
[
ÂÂ 
$num
ÂÂ 
]
ÂÂ 
[
ÂÂ 
$num
ÂÂ 
]
ÂÂ 
=
ÂÂ  
(
ÂÂ! "
int
ÂÂ" %
)
ÂÂ% &
PalateGategories
ÂÂ& 6
.
ÂÂ6 7
	Sweetness
ÂÂ7 @
;
ÂÂ@ A
ComparisonMatrix
ÊÊ 
[
ÊÊ 
$num
ÊÊ 
]
ÊÊ 
[
ÊÊ 
$num
ÊÊ 
]
ÊÊ 
=
ÊÊ  
(
ÊÊ! "
int
ÊÊ" %
)
ÊÊ% &

PSweetness
ÊÊ& 0
;
ÊÊ0 1
ComparisonMatrix
ËË 
[
ËË 
$num
ËË 
]
ËË 
=
ËË 
new
ËË !
int
ËË" %
[
ËË% &
$num
ËË& '
]
ËË' (
;
ËË( )
ComparisonMatrix
ÈÈ 
[
ÈÈ 
$num
ÈÈ 
]
ÈÈ 
[
ÈÈ 
$num
ÈÈ 
]
ÈÈ 
=
ÈÈ  
(
ÈÈ! "
int
ÈÈ" %
)
ÈÈ% &
MainGategories
ÈÈ& 4
.
ÈÈ4 5
Palate
ÈÈ5 ;
;
ÈÈ; <
ComparisonMatrix
ÍÍ 
[
ÍÍ 
$num
ÍÍ 
]
ÍÍ 
[
ÍÍ 
$num
ÍÍ 
]
ÍÍ 
=
ÍÍ  
(
ÍÍ! "
int
ÍÍ" %
)
ÍÍ% &
PalateGategories
ÍÍ& 6
.
ÍÍ6 7
Acidity
ÍÍ7 >
;
ÍÍ> ?
ComparisonMatrix
ÎÎ 
[
ÎÎ 
$num
ÎÎ 
]
ÎÎ 
[
ÎÎ 
$num
ÎÎ 
]
ÎÎ 
=
ÎÎ  
(
ÎÎ! "
int
ÎÎ" %
)
ÎÎ% &
PAcidity
ÎÎ& .
;
ÎÎ. /
ComparisonMatrix
ÌÌ 
[
ÌÌ 
$num
ÌÌ 
]
ÌÌ 
=
ÌÌ 
new
ÌÌ "
int
ÌÌ# &
[
ÌÌ& '
$num
ÌÌ' (
]
ÌÌ( )
;
ÌÌ) *
ComparisonMatrix
ÓÓ 
[
ÓÓ 
$num
ÓÓ 
]
ÓÓ 
[
ÓÓ 
$num
ÓÓ 
]
ÓÓ 
=
ÓÓ  !
(
ÓÓ" #
int
ÓÓ# &
)
ÓÓ& '
MainGategories
ÓÓ' 5
.
ÓÓ5 6
Palate
ÓÓ6 <
;
ÓÓ< =
ComparisonMatrix
ÔÔ 
[
ÔÔ 
$num
ÔÔ 
]
ÔÔ 
[
ÔÔ 
$num
ÔÔ 
]
ÔÔ 
=
ÔÔ  !
(
ÔÔ" #
int
ÔÔ# &
)
ÔÔ& '
PalateGategories
ÔÔ' 7
.
ÔÔ7 8
Tannin
ÔÔ8 >
;
ÔÔ> ?
ComparisonMatrix
 
[
 
$num
 
]
 
[
 
$num
 
]
 
=
  !
(
" #
int
# &
)
& '
PTannin
' .
;
. /
ComparisonMatrix
ÚÚ 
[
ÚÚ 
$num
ÚÚ 
]
ÚÚ 
=
ÚÚ 
new
ÚÚ "
int
ÚÚ# &
[
ÚÚ& '
$num
ÚÚ' (
]
ÚÚ( )
;
ÚÚ) *
ComparisonMatrix
ÛÛ 
[
ÛÛ 
$num
ÛÛ 
]
ÛÛ 
[
ÛÛ 
$num
ÛÛ 
]
ÛÛ 
=
ÛÛ  !
(
ÛÛ" #
int
ÛÛ# &
)
ÛÛ& '
MainGategories
ÛÛ' 5
.
ÛÛ5 6
Palate
ÛÛ6 <
;
ÛÛ< =
ComparisonMatrix
ÙÙ 
[
ÙÙ 
$num
ÙÙ 
]
ÙÙ 
[
ÙÙ 
$num
ÙÙ 
]
ÙÙ 
=
ÙÙ  !
(
ÙÙ" #
int
ÙÙ# &
)
ÙÙ& '
PalateGategories
ÙÙ' 7
.
ÙÙ7 8
Body
ÙÙ8 <
;
ÙÙ< =
ComparisonMatrix
ıı 
[
ıı 
$num
ıı 
]
ıı 
[
ıı 
$num
ıı 
]
ıı 
=
ıı  !
(
ıı" #
int
ıı# &
)
ıı& '
PBody
ıı' ,
;
ıı, -
ComparisonMatrix
¯¯ 
[
¯¯ 
$num
¯¯ 
]
¯¯ 
=
¯¯ 
Flavours
¯¯ '
[
¯¯' (
$num
¯¯( )
]
¯¯) *
;
¯¯* +
ComparisonMatrix
˘˘ 
[
˘˘ 
$num
˘˘ 
]
˘˘ 
=
˘˘ 
Flavours
˘˘ '
[
˘˘' (
$num
˘˘( )
]
˘˘) *
;
˘˘* +
ComparisonMatrix
˙˙ 
[
˙˙ 
$num
˙˙ 
]
˙˙ 
=
˙˙ 
Flavours
˙˙ '
[
˙˙' (
$num
˙˙( )
]
˙˙) *
;
˙˙* +
ComparisonMatrix
¸¸ 
[
¸¸ 
$num
¸¸ 
]
¸¸ 
=
¸¸ 
new
¸¸ "
int
¸¸# &
[
¸¸& '
$num
¸¸' (
]
¸¸( )
;
¸¸) *
ComparisonMatrix
˝˝ 
[
˝˝ 
$num
˝˝ 
]
˝˝ 
[
˝˝ 
$num
˝˝ 
]
˝˝ 
=
˝˝  !
(
˝˝" #
int
˝˝# &
)
˝˝& '
MainGategories
˝˝' 5
.
˝˝5 6
Palate
˝˝6 <
;
˝˝< =
ComparisonMatrix
˛˛ 
[
˛˛ 
$num
˛˛ 
]
˛˛ 
[
˛˛ 
$num
˛˛ 
]
˛˛ 
=
˛˛  !
(
˛˛" #
int
˛˛# &
)
˛˛& '
PalateGategories
˛˛' 7
.
˛˛7 8
Finish
˛˛8 >
;
˛˛> ?
ComparisonMatrix
ˇˇ 
[
ˇˇ 
$num
ˇˇ 
]
ˇˇ 
[
ˇˇ 
$num
ˇˇ 
]
ˇˇ 
=
ˇˇ  !
(
ˇˇ" #
int
ˇˇ# &
)
ˇˇ& '
PFinish
ˇˇ' .
;
ˇˇ. /
ComparisonMatrix
ÇÇ 
[
ÇÇ 
$num
ÇÇ 
]
ÇÇ 
=
ÇÇ 
new
ÇÇ "
int
ÇÇ# &
[
ÇÇ& '
$num
ÇÇ' (
]
ÇÇ( )
;
ÇÇ) *
ComparisonMatrix
ÉÉ 
[
ÉÉ 
$num
ÉÉ 
]
ÉÉ 
[
ÉÉ 
$num
ÉÉ 
]
ÉÉ 
=
ÉÉ  !
(
ÉÉ" #
int
ÉÉ# &
)
ÉÉ& '
MainGategories
ÉÉ' 5
.
ÉÉ5 6
Conclusions
ÉÉ6 A
;
ÉÉA B
ComparisonMatrix
ÑÑ 
[
ÑÑ 
$num
ÑÑ 
]
ÑÑ 
[
ÑÑ 
$num
ÑÑ 
]
ÑÑ 
=
ÑÑ  !
$num
ÑÑ" #
;
ÑÑ# $
ComparisonMatrix
ÖÖ 
[
ÖÖ 
$num
ÖÖ 
]
ÖÖ 
[
ÖÖ 
$num
ÖÖ 
]
ÖÖ 
=
ÖÖ  !
(
ÖÖ" #
int
ÖÖ# &
)
ÖÖ& '
WineQuality
ÖÖ' 2
;
ÖÖ2 3
return
áá 
ComparisonMatrix
áá 
;
áá  
}
àà 
public
åå 

int
åå 
[
åå 
]
åå 
Aroma
åå 
(
åå 
int
åå 
MainGategory
åå (
,
åå( )
int
åå* -
SecondaryGategory
åå. ?
,
åå? @
int
ååA D!
AromaFlavorGategory
ååE X
,
ååX Y
int
ååZ ]$
AromaFlavorSubGategory
åå^ t
,
ååt u
int
ååv y

FinalValueååz Ñ
)ååÑ Ö
{
çç 
int
éé 
[
éé 
]
éé 
temp
éé 
=
éé 
new
éé 
int
éé 
[
éé 
$num
éé 
]
éé 
;
éé  
if
êê 

(
êê 
MainGategory
êê 
==
êê 
(
êê 
int
êê  
)
êê  !
MainGategories
êê! /
.
êê/ 0
Nose
êê0 4
||
êê5 7
MainGategory
êê8 D
==
êêE G
(
êêH I
int
êêI L
)
êêL M
MainGategories
êêM [
.
êê[ \
Palate
êê\ b
)
êêb c
temp
ëë 
[
ëë 
$num
ëë 
]
ëë 
=
ëë 
MainGategory
ëë "
;
ëë" #
if
ìì 

(
ìì 
SecondaryGategory
ìì 
==
ìì  
(
ìì! "
int
ìì" %
)
ìì% &
NoseGategories
ìì& 4
.
ìì4 5
Aroma
ìì5 :
||
ìì; =
SecondaryGategory
ìì> O
==
ììP R
(
ììS T
int
ììT W
)
ììW X
PalateGategories
ììX h
.
ììh i$
FlavourCharasteristics
ììi 
)ìì Ä
temp
îî 
[
îî 
$num
îî 
]
îî 
=
îî 
SecondaryGategory
îî '
;
îî' (
if
ññ 

(
ññ 
Enum
ññ 
.
ññ 
	GetValues
ññ 
(
ññ 
typeof
ññ !
(
ññ! "'
AromaAndFlavourGategories
ññ" ;
)
ññ; <
)
ññ< =
.
ññ= >
Length
ññ> D
>
ññE F!
AromaFlavorGategory
ññG Z
)
ññZ [
temp
óó 
[
óó 
$num
óó 
]
óó 
=
óó !
AromaFlavorGategory
óó )
;
óó) *
switch
ôô 
(
ôô 
temp
ôô 
[
ôô 
$num
ôô 
]
ôô 
)
ôô 
{
öö 	
case
õõ 
(
õõ 
int
õõ 
)
õõ '
AromaAndFlavourGategories
õõ /
.
õõ/ 0
FloralFruit
õõ0 ;
:
õõ; <
if
úú 
(
úú 
Enum
úú 
.
úú 
	GetValues
úú "
(
úú" #
typeof
úú# )
(
úú) *#
FloralFruitGategories
úú* ?
)
úú? @
)
úú@ A
.
úúA B
Length
úúB H
>
úúI J$
AromaFlavorSubGategory
úúK a
)
úúa b
temp
ùù 
[
ùù 
$num
ùù 
]
ùù 
=
ùù $
AromaFlavorSubGategory
ùù 4
;
ùù4 5
switch
üü 
(
üü 
temp
üü 
[
üü 
$num
üü 
]
üü 
)
üü  
{
†† 
case
°° 
(
°° 
int
°° 
)
°° #
FloralFruitGategories
°° 3
.
°°3 4
Floral
°°4 :
:
°°: ;
if
¢¢ 
(
¢¢ 
Enum
¢¢  
.
¢¢  !
	GetValues
¢¢! *
(
¢¢* +
typeof
¢¢+ 1
(
¢¢1 2#
AromaAndFlavourFloral
¢¢2 G
)
¢¢G H
)
¢¢H I
.
¢¢I J
Length
¢¢J P
>
¢¢Q R

FinalValue
¢¢S ]
)
¢¢] ^
temp
££  
[
££  !
$num
££! "
]
££" #
=
££$ %

FinalValue
££& 0
;
££0 1
break
§§ 
;
§§ 
case
•• 
(
•• 
int
•• 
)
•• #
FloralFruitGategories
•• 3
.
••3 4

GreenFruit
••4 >
:
••> ?
if
¶¶ 
(
¶¶ 
Enum
¶¶  
.
¶¶  !
	GetValues
¶¶! *
(
¶¶* +
typeof
¶¶+ 1
(
¶¶1 2'
AromaAndFlavourGreenFruit
¶¶2 K
)
¶¶K L
)
¶¶L M
.
¶¶M N
Length
¶¶N T
>
¶¶U V

FinalValue
¶¶W a
)
¶¶a b
temp
ßß  
[
ßß  !
$num
ßß! "
]
ßß" #
=
ßß$ %

FinalValue
ßß& 0
;
ßß0 1
break
®® 
;
®® 
case
©© 
(
©© 
int
©© 
)
©© #
FloralFruitGategories
©© 3
.
©©3 4
CitrusFruit
©©4 ?
:
©©? @
if
™™ 
(
™™ 
Enum
™™  
.
™™  !
	GetValues
™™! *
(
™™* +
typeof
™™+ 1
(
™™1 2(
AromaAndFlavourCitrusFruit
™™2 L
)
™™L M
)
™™M N
.
™™N O
Length
™™O U
>
™™V W

FinalValue
™™X b
)
™™b c
temp
´´  
[
´´  !
$num
´´! "
]
´´" #
=
´´$ %

FinalValue
´´& 0
;
´´0 1
break
¨¨ 
;
¨¨ 
case
≠≠ 
(
≠≠ 
int
≠≠ 
)
≠≠ #
FloralFruitGategories
≠≠ 3
.
≠≠3 4

StoneFruit
≠≠4 >
:
≠≠> ?
if
ÆÆ 
(
ÆÆ 
Enum
ÆÆ  
.
ÆÆ  !
	GetValues
ÆÆ! *
(
ÆÆ* +
typeof
ÆÆ+ 1
(
ÆÆ1 2'
AromaAndFlavourStoneFruit
ÆÆ2 K
)
ÆÆK L
)
ÆÆL M
.
ÆÆM N
Length
ÆÆN T
>
ÆÆU V

FinalValue
ÆÆW a
)
ÆÆa b
temp
ØØ  
[
ØØ  !
$num
ØØ! "
]
ØØ" #
=
ØØ$ %

FinalValue
ØØ& 0
;
ØØ0 1
break
∞∞ 
;
∞∞ 
case
±± 
(
±± 
int
±± 
)
±± #
FloralFruitGategories
±± 3
.
±±3 4
TropicalFruit
±±4 A
:
±±A B
if
≤≤ 
(
≤≤ 
Enum
≤≤  
.
≤≤  !
	GetValues
≤≤! *
(
≤≤* +
typeof
≤≤+ 1
(
≤≤1 2*
AromaAndFlavourTropicalFruit
≤≤2 N
)
≤≤N O
)
≤≤O P
.
≤≤P Q
Length
≤≤Q W
>
≤≤X Y

FinalValue
≤≤Z d
)
≤≤d e
temp
≥≥  
[
≥≥  !
$num
≥≥! "
]
≥≥" #
=
≥≥$ %

FinalValue
≥≥& 0
;
≥≥0 1
break
¥¥ 
;
¥¥ 
case
µµ 
(
µµ 
int
µµ 
)
µµ #
FloralFruitGategories
µµ 3
.
µµ3 4
RedFruit
µµ4 <
:
µµ< =
if
∂∂ 
(
∂∂ 
Enum
∂∂  
.
∂∂  !
	GetValues
∂∂! *
(
∂∂* +
typeof
∂∂+ 1
(
∂∂1 2%
AromaAndFlavourRedFruit
∂∂2 I
)
∂∂I J
)
∂∂J K
.
∂∂K L
Length
∂∂L R
>
∂∂S T

FinalValue
∂∂U _
)
∂∂_ `
temp
∑∑  
[
∑∑  !
$num
∑∑! "
]
∑∑" #
=
∑∑$ %

FinalValue
∑∑& 0
;
∑∑0 1
break
∏∏ 
;
∏∏ 
case
ππ 
(
ππ 
int
ππ 
)
ππ #
FloralFruitGategories
ππ 3
.
ππ3 4

BlackFruit
ππ4 >
:
ππ> ?
if
∫∫ 
(
∫∫ 
Enum
∫∫  
.
∫∫  !
	GetValues
∫∫! *
(
∫∫* +
typeof
∫∫+ 1
(
∫∫1 2'
AromaAndFlavourBlackFruit
∫∫2 K
)
∫∫K L
)
∫∫L M
.
∫∫M N
Length
∫∫N T
>
∫∫U V

FinalValue
∫∫W a
)
∫∫a b
temp
ªª  
[
ªª  !
$num
ªª! "
]
ªª" #
=
ªª$ %

FinalValue
ªª& 0
;
ªª0 1
break
ºº 
;
ºº 
case
ΩΩ 
(
ΩΩ 
int
ΩΩ 
)
ΩΩ #
FloralFruitGategories
ΩΩ 3
.
ΩΩ3 4

DriedFruit
ΩΩ4 >
:
ΩΩ> ?
if
ææ 
(
ææ 
Enum
ææ  
.
ææ  !
	GetValues
ææ! *
(
ææ* +
typeof
ææ+ 1
(
ææ1 2'
AromaAndFlavourDriedFruit
ææ2 K
)
ææK L
)
ææL M
.
ææM N
Length
ææN T
>
ææU V

FinalValue
ææW a
)
ææa b
temp
øø  
[
øø  !
$num
øø! "
]
øø" #
=
øø$ %

FinalValue
øø& 0
;
øø0 1
break
¿¿ 
;
¿¿ 
}
¡¡ 
break
¬¬ 
;
¬¬ 
case
√√ 
(
√√ 
int
√√ 
)
√√ '
AromaAndFlavourGategories
√√ /
.
√√/ 0
SpiceVegetable
√√0 >
:
√√> ?
if
ƒƒ 
(
ƒƒ 
Enum
ƒƒ 
.
ƒƒ 
	GetValues
ƒƒ "
(
ƒƒ" #
typeof
ƒƒ# )
(
ƒƒ) *&
SpiceVegetableGategories
ƒƒ* B
)
ƒƒB C
)
ƒƒC D
.
ƒƒD E
Length
ƒƒE K
>
ƒƒL M$
AromaFlavorSubGategory
ƒƒN d
)
ƒƒd e
temp
≈≈ 
[
≈≈ 
$num
≈≈ 
]
≈≈ 
=
≈≈ $
AromaFlavorSubGategory
≈≈ 4
;
≈≈4 5
switch
«« 
(
«« 
temp
«« 
[
«« 
$num
«« 
]
«« 
)
««  
{
»» 
case
…… 
(
…… 
int
…… 
)
…… &
SpiceVegetableGategories
…… 6
.
……6 7
Underripeness
……7 D
:
……D E
if
   
(
   
Enum
    
.
    !
	GetValues
  ! *
(
  * +
typeof
  + 1
(
  1 2*
AromaAndFlavourUnderripeness
  2 N
)
  N O
)
  O P
.
  P Q
Length
  Q W
>
  X Y

FinalValue
  Z d
)
  d e
temp
ÀÀ  
[
ÀÀ  !
$num
ÀÀ! "
]
ÀÀ" #
=
ÀÀ$ %

FinalValue
ÀÀ& 0
;
ÀÀ0 1
break
ÃÃ 
;
ÃÃ 
case
ÕÕ 
(
ÕÕ 
int
ÕÕ 
)
ÕÕ &
SpiceVegetableGategories
ÕÕ 6
.
ÕÕ6 7

Herbaceous
ÕÕ7 A
:
ÕÕA B
if
ŒŒ 
(
ŒŒ 
Enum
ŒŒ  
.
ŒŒ  !
	GetValues
ŒŒ! *
(
ŒŒ* +
typeof
ŒŒ+ 1
(
ŒŒ1 2'
AromaAndFlavourHerbaceous
ŒŒ2 K
)
ŒŒK L
)
ŒŒL M
.
ŒŒM N
Length
ŒŒN T
>
ŒŒU V

FinalValue
ŒŒW a
)
ŒŒa b
temp
œœ  
[
œœ  !
$num
œœ! "
]
œœ" #
=
œœ$ %

FinalValue
œœ& 0
;
œœ0 1
break
–– 
;
–– 
case
—— 
(
—— 
int
—— 
)
—— &
SpiceVegetableGategories
—— 6
.
——6 7
Herbal
——7 =
:
——= >
if
““ 
(
““ 
Enum
““  
.
““  !
	GetValues
““! *
(
““* +
typeof
““+ 1
(
““1 2#
AromaAndFlavourHerbal
““2 G
)
““G H
)
““H I
.
““I J
Length
““J P
>
““Q R

FinalValue
““S ]
)
““] ^
temp
””  
[
””  !
$num
””! "
]
””" #
=
””$ %

FinalValue
””& 0
;
””0 1
break
‘‘ 
;
‘‘ 
case
’’ 
(
’’ 
int
’’ 
)
’’ &
SpiceVegetableGategories
’’ 6
.
’’6 7
	Vegetable
’’7 @
:
’’@ A
if
÷÷ 
(
÷÷ 
Enum
÷÷  
.
÷÷  !
	GetValues
÷÷! *
(
÷÷* +
typeof
÷÷+ 1
(
÷÷1 2&
AromaAndFlavourVegetable
÷÷2 J
)
÷÷J K
)
÷÷K L
.
÷÷L M
Length
÷÷M S
>
÷÷T U

FinalValue
÷÷V `
)
÷÷` a
temp
◊◊  
[
◊◊  !
$num
◊◊! "
]
◊◊" #
=
◊◊$ %

FinalValue
◊◊& 0
;
◊◊0 1
break
ÿÿ 
;
ÿÿ 
case
ŸŸ 
(
ŸŸ 
int
ŸŸ 
)
ŸŸ &
SpiceVegetableGategories
ŸŸ 6
.
ŸŸ6 7

SweetSpice
ŸŸ7 A
:
ŸŸA B
if
⁄⁄ 
(
⁄⁄ 
Enum
⁄⁄  
.
⁄⁄  !
	GetValues
⁄⁄! *
(
⁄⁄* +
typeof
⁄⁄+ 1
(
⁄⁄1 2'
AromaAndFlavourSweetSpice
⁄⁄2 K
)
⁄⁄K L
)
⁄⁄L M
.
⁄⁄M N
Length
⁄⁄N T
>
⁄⁄U V

FinalValue
⁄⁄W a
)
⁄⁄a b
temp
€€  
[
€€  !
$num
€€! "
]
€€" #
=
€€$ %

FinalValue
€€& 0
;
€€0 1
break
‹‹ 
;
‹‹ 
case
›› 
(
›› 
int
›› 
)
›› &
SpiceVegetableGategories
›› 6
.
››6 7
PungentSpice
››7 C
:
››C D
if
ﬁﬁ 
(
ﬁﬁ 
Enum
ﬁﬁ  
.
ﬁﬁ  !
	GetValues
ﬁﬁ! *
(
ﬁﬁ* +
typeof
ﬁﬁ+ 1
(
ﬁﬁ1 2)
AromaAndFlavourPungentSpice
ﬁﬁ2 M
)
ﬁﬁM N
)
ﬁﬁN O
.
ﬁﬁO P
Length
ﬁﬁP V
>
ﬁﬁW X

FinalValue
ﬁﬁY c
)
ﬁﬁc d
temp
ﬂﬂ  
[
ﬂﬂ  !
$num
ﬂﬂ! "
]
ﬂﬂ" #
=
ﬂﬂ$ %

FinalValue
ﬂﬂ& 0
;
ﬂﬂ0 1
break
‡‡ 
;
‡‡ 
}
·· 
break
‚‚ 
;
‚‚ 
case
‰‰ 
(
‰‰ 
int
‰‰ 
)
‰‰ '
AromaAndFlavourGategories
‰‰ /
.
‰‰/ 0
OakOther
‰‰0 8
:
‰‰8 9
if
ÂÂ 
(
ÂÂ 
Enum
ÂÂ 
.
ÂÂ 
	GetValues
ÂÂ "
(
ÂÂ" #
typeof
ÂÂ# )
(
ÂÂ) * 
OakOtherGategories
ÂÂ* <
)
ÂÂ< =
)
ÂÂ= >
.
ÂÂ> ?
Length
ÂÂ? E
>
ÂÂF G$
AromaFlavorSubGategory
ÂÂH ^
)
ÂÂ^ _
temp
ÊÊ 
[
ÊÊ 
$num
ÊÊ 
]
ÊÊ 
=
ÊÊ $
AromaFlavorSubGategory
ÊÊ 4
;
ÊÊ4 5
switch
ËË 
(
ËË 
temp
ËË 
[
ËË 
$num
ËË 
]
ËË 
)
ËË  
{
ÈÈ 
case
ÍÍ 
(
ÍÍ 
int
ÍÍ 
)
ÍÍ  
OakOtherGategories
ÍÍ 0
.
ÍÍ0 1"
SimplicityNeutrality
ÍÍ1 E
:
ÍÍE F
if
ÎÎ 
(
ÎÎ 
Enum
ÎÎ  
.
ÎÎ  !
	GetValues
ÎÎ! *
(
ÎÎ* +
typeof
ÎÎ+ 1
(
ÎÎ1 21
#AromaAndFlavourSimplicityNeutrality
ÎÎ2 U
)
ÎÎU V
)
ÎÎV W
.
ÎÎW X
Length
ÎÎX ^
>
ÎÎ_ `

FinalValue
ÎÎa k
)
ÎÎk l
temp
ÏÏ  
[
ÏÏ  !
$num
ÏÏ! "
]
ÏÏ" #
=
ÏÏ$ %

FinalValue
ÏÏ& 0
;
ÏÏ0 1
break
ÌÌ 
;
ÌÌ 
case
ÓÓ 
(
ÓÓ 
int
ÓÓ 
)
ÓÓ  
OakOtherGategories
ÓÓ 0
.
ÓÓ0 1
	Autolytic
ÓÓ1 :
:
ÓÓ: ;
if
ÔÔ 
(
ÔÔ 
Enum
ÔÔ  
.
ÔÔ  !
	GetValues
ÔÔ! *
(
ÔÔ* +
typeof
ÔÔ+ 1
(
ÔÔ1 2&
AromaAndFlavourAutolytic
ÔÔ2 J
)
ÔÔJ K
)
ÔÔK L
.
ÔÔL M
Length
ÔÔM S
>
ÔÔT U

FinalValue
ÔÔV `
)
ÔÔ` a
temp
  
[
  !
$num
! "
]
" #
=
$ %

FinalValue
& 0
;
0 1
break
ÒÒ 
;
ÒÒ 
case
ÚÚ 
(
ÚÚ 
int
ÚÚ 
)
ÚÚ  
OakOtherGategories
ÚÚ 0
.
ÚÚ0 1
Dairy
ÚÚ1 6
:
ÚÚ6 7
if
ÛÛ 
(
ÛÛ 
Enum
ÛÛ  
.
ÛÛ  !
	GetValues
ÛÛ! *
(
ÛÛ* +
typeof
ÛÛ+ 1
(
ÛÛ1 2"
AromaAndFlavourDairy
ÛÛ2 F
)
ÛÛF G
)
ÛÛG H
.
ÛÛH I
Length
ÛÛI O
>
ÛÛP Q

FinalValue
ÛÛR \
)
ÛÛ\ ]
temp
ÙÙ  
[
ÙÙ  !
$num
ÙÙ! "
]
ÙÙ" #
=
ÙÙ$ %

FinalValue
ÙÙ& 0
;
ÙÙ0 1
break
ıı 
;
ıı 
case
ˆˆ 
(
ˆˆ 
int
ˆˆ 
)
ˆˆ  
OakOtherGategories
ˆˆ 0
.
ˆˆ0 1
Oak
ˆˆ1 4
:
ˆˆ4 5
if
˜˜ 
(
˜˜ 
Enum
˜˜  
.
˜˜  !
	GetValues
˜˜! *
(
˜˜* +
typeof
˜˜+ 1
(
˜˜1 2 
AromaAndFlavourOak
˜˜2 D
)
˜˜D E
)
˜˜E F
.
˜˜F G
Length
˜˜G M
>
˜˜N O

FinalValue
˜˜P Z
)
˜˜Z [
temp
¯¯  
[
¯¯  !
$num
¯¯! "
]
¯¯" #
=
¯¯$ %

FinalValue
¯¯& 0
;
¯¯0 1
break
˘˘ 
;
˘˘ 
case
˙˙ 
(
˙˙ 
int
˙˙ 
)
˙˙  
OakOtherGategories
˙˙ 0
.
˙˙0 1
Kernel
˙˙1 7
:
˙˙7 8
if
˚˚ 
(
˚˚ 
Enum
˚˚  
.
˚˚  !
	GetValues
˚˚! *
(
˚˚* +
typeof
˚˚+ 1
(
˚˚1 2#
AromaAndFlavourKernel
˚˚2 G
)
˚˚G H
)
˚˚H I
.
˚˚I J
Length
˚˚J P
>
˚˚Q R

FinalValue
˚˚S ]
)
˚˚] ^
temp
¸¸  
[
¸¸  !
$num
¸¸! "
]
¸¸" #
=
¸¸$ %

FinalValue
¸¸& 0
;
¸¸0 1
break
˝˝ 
;
˝˝ 
case
˛˛ 
(
˛˛ 
int
˛˛ 
)
˛˛  
OakOtherGategories
˛˛ 0
.
˛˛0 1
Animal
˛˛1 7
:
˛˛7 8
if
ˇˇ 
(
ˇˇ 
Enum
ˇˇ  
.
ˇˇ  !
	GetValues
ˇˇ! *
(
ˇˇ* +
typeof
ˇˇ+ 1
(
ˇˇ1 2#
AromaAndFlavourAnimal
ˇˇ2 G
)
ˇˇG H
)
ˇˇH I
.
ˇˇI J
Length
ˇˇJ P
>
ˇˇQ R

FinalValue
ˇˇS ]
)
ˇˇ] ^
temp
ÄÄ  
[
ÄÄ  !
$num
ÄÄ! "
]
ÄÄ" #
=
ÄÄ$ %

FinalValue
ÄÄ& 0
;
ÄÄ0 1
break
ÅÅ 
;
ÅÅ 
case
ÇÇ 
(
ÇÇ 
int
ÇÇ 
)
ÇÇ  
OakOtherGategories
ÇÇ 0
.
ÇÇ0 1
Maturity
ÇÇ1 9
:
ÇÇ9 :
if
ÉÉ 
(
ÉÉ 
Enum
ÉÉ  
.
ÉÉ  !
	GetValues
ÉÉ! *
(
ÉÉ* +
typeof
ÉÉ+ 1
(
ÉÉ1 2%
AromaAndFlavourMaturity
ÉÉ2 I
)
ÉÉI J
)
ÉÉJ K
.
ÉÉK L
Length
ÉÉL R
>
ÉÉS T

FinalValue
ÉÉU _
)
ÉÉ_ `
temp
ÑÑ  
[
ÑÑ  !
$num
ÑÑ! "
]
ÑÑ" #
=
ÑÑ$ %

FinalValue
ÑÑ& 0
;
ÑÑ0 1
break
ÖÖ 
;
ÖÖ 
case
ÜÜ 
(
ÜÜ 
int
ÜÜ 
)
ÜÜ  
OakOtherGategories
ÜÜ 0
.
ÜÜ0 1
Mineral
ÜÜ1 8
:
ÜÜ8 9
if
áá 
(
áá 
Enum
áá  
.
áá  !
	GetValues
áá! *
(
áá* +
typeof
áá+ 1
(
áá1 2$
AromaAndFlavourMineral
áá2 H
)
ááH I
)
ááI J
.
ááJ K
Length
ááK Q
>
ááR S

FinalValue
ááT ^
)
áá^ _
temp
àà  
[
àà  !
$num
àà! "
]
àà" #
=
àà$ %

FinalValue
àà& 0
;
àà0 1
break
ââ 
;
ââ 
}
ää 
break
ãã 
;
ãã 
}
åå 	
return
çç 
temp
çç 
;
çç 
}
éé 
public
êê 

void
êê 
Color
êê 
(
êê '
AppearanceColorGategories
êê /
acg
êê0 3
,
êê3 4
int
êê5 8%
ColorGatecoryColorAsInt
êê9 P
)
êêP Q
{
ëë 
AColorGategory
íí 
=
íí 
acg
íí 
;
íí 
switch
ìì 
(
ìì 
acg
ìì 
)
ìì 
{
îî 	
case
ïï '
AppearanceColorGategories
ïï *
.
ïï* +
WhiteWineColour
ïï+ :
:
ïï: ;
if
ññ 
(
ññ 
Enum
ññ 
.
ññ 
	GetValues
ññ "
(
ññ" #
typeof
ññ# )
(
ññ) *&
AppearanceWhiteWineColor
ññ* B
)
ññB C
)
ññC D
.
ññD E
Length
ññE K
>
ññL M%
ColorGatecoryColorAsInt
ññN e
)
ññe f
AWhiteWineColor
óó #
=
óó$ %
(
óó& '&
AppearanceWhiteWineColor
óó' ?
)
óó? @%
ColorGatecoryColorAsInt
óó@ W
;
óóW X
break
òò 
;
òò 
case
ôô '
AppearanceColorGategories
ôô *
.
ôô* +
RoseWineColour
ôô+ 9
:
ôô9 :
if
öö 
(
öö 
Enum
öö 
.
öö 
	GetValues
öö "
(
öö" #
typeof
öö# )
(
öö) *%
AppearanceRoseWineColor
öö* A
)
ööA B
)
ööB C
.
ööC D
Length
ööD J
>
ööK L%
ColorGatecoryColorAsInt
ööM d
)
ööd e
ARoseWineColor
õõ "
=
õõ# $
(
õõ% &%
AppearanceRoseWineColor
õõ& =
)
õõ= >%
ColorGatecoryColorAsInt
õõ> U
;
õõU V
break
úú 
;
úú 
case
ùù '
AppearanceColorGategories
ùù *
.
ùù* +
RedWineColour
ùù+ 8
:
ùù8 9
if
ûû 
(
ûû 
Enum
ûû 
.
ûû 
	GetValues
ûû "
(
ûû" #
typeof
ûû# )
(
ûû) *$
AppearanceRedWineColor
ûû* @
)
ûû@ A
)
ûûA B
.
ûûB C
Length
ûûC I
>
ûûJ K%
ColorGatecoryColorAsInt
ûûL c
)
ûûc d
ARedWineColor
üü !
=
üü" #
(
üü$ %$
AppearanceRedWineColor
üü% ;
)
üü; <%
ColorGatecoryColorAsInt
üü< S
;
üüS T
break
†† 
;
†† 
}
°° 	
}
¢¢ 
public
•• 

int
•• 
CompareWines
•• 
(
•• 
Wine
••  
wine
••! %
)
••% &
{
¶¶ 
int
ßß 
comparisons
ßß 
=
ßß 
$num
ßß 
;
ßß 
for
´´ 
(
´´ 
int
´´ 
i
´´ 
=
´´ 
$num
´´ 
;
´´ 
i
´´ 
<
´´ 
readyMatrix
´´ '
.
´´' (
Length
´´( .
;
´´. /
i
´´0 1
++
´´1 3
)
´´3 4
{
¨¨ 	
for
≠≠ 
(
≠≠ 
int
≠≠ 
x
≠≠ 
=
≠≠ 
$num
≠≠ 
;
≠≠ 
x
≠≠ 
<
≠≠ 
wine
≠≠  $
.
≠≠$ %
readyMatrix
≠≠% 0
.
≠≠0 1
Length
≠≠1 7
;
≠≠7 8
x
≠≠9 :
++
≠≠: <
)
≠≠< =
{
ÆÆ 
if
ØØ 
(
ØØ 
System
ØØ 
.
ØØ 
Linq
ØØ 
.
ØØ  

Enumerable
ØØ  *
.
ØØ* +
SequenceEqual
ØØ+ 8
(
ØØ8 9
readyMatrix
ØØ9 D
[
ØØD E
i
ØØE F
]
ØØF G
,
ØØG H
wine
ØØI M
.
ØØM N
readyMatrix
ØØN Y
[
ØØY Z
x
ØØZ [
]
ØØ[ \
)
ØØ\ ]
)
ØØ] ^
comparisons
∞∞ 
++
∞∞ !
;
∞∞! "
}
±± 
}
≤≤ 	
return
¥¥ 
comparisons
¥¥ 
;
¥¥ 
}
µµ 
}∂∂ ‚
]C:\Users\Administrator\Desktop\git_wine\wine-game\Assets\AA_Rami\CustomerSystem\WinePrefab.cs
public 
class 

WinePrefab 
: 
MonoBehaviour '
{ 
public		 

Wine		 
.		 
AppearanceClarity		 !
appearanceClarity		" 3
;		3 4
public

 

Wine

 
.

 
AppearanceIntensity

 #
appearanceIntensity

$ 7
;

7 8
public 

Wine 
. %
AppearanceColorGategories )
colorGategory* 7
;7 8
public 

Wine 
. 
NoseCondition 
noseCondition +
;+ ,
public 

Wine 
. 
NoseIntensity 
noseIntensity +
;+ ,
} ÷
_C:\Users\Administrator\Desktop\git_wine\wine-game\Assets\AA_Rami\CustomerSystem\cpExitButton.cs
public 
class 
cpExitButton 
: 
MonoBehaviour )
,) * 
IPointerClickHandler+ ?
{ 
CustomerPanel 
cp 
; 
void 
Start	 
( 
) 
{ 
cp 

= 

gameObject 
. 
	transform !
.! "
parent" (
.( )
GetComponent) 5
<5 6
CustomerPanel6 C
>C D
(D E
)E F
;F G
} 
public 

void 
OnPointerClick 
( 
PointerEventData /
data0 4
)4 5
{ 
cp 

.
 
DeactivatePanel 
( 
) 
; 
} 
} ˆ
_C:\Users\Administrator\Desktop\git_wine\wine-game\Assets\AA_Rami\CustomerSystem\cpFarmButton.cs
public 
class 
cpFarmButton 
: 
MonoBehaviour )
,) * 
IPointerClickHandler+ ?
{ 
CustomerPanel 
cp 
; 
void		 
Start			 
(		 
)		 
{

 
cp 

= 

gameObject 
. 
	transform !
.! "
parent" (
.( )
parent) /
./ 0
GetComponent0 <
<< =
CustomerPanel= J
>J K
(K L
)L M
;M N
} 
public 

void 
OnPointerClick 
( 
PointerEventData /
data0 4
)4 5
{ 
cp 

.
 
AcceptFarmer 
( 
) 
; 
} 
} å
eC:\Users\Administrator\Desktop\git_wine\wine-game\Assets\AA_Rami\CustomerSystem\cpRestaurantButton.cs
public 
class 
cpRestaurantButton 
:  !
MonoBehaviour" /
,/ 0 
IPointerClickHandler1 E
{ 
CustomerPanel 
cp 
; 
void 
Start	 
( 
) 
{ 
cp 

= 

gameObject 
. 
	transform !
.! "
parent" (
.( )
parent) /
./ 0
GetComponent0 <
<< =
CustomerPanel= J
>J K
(K L
)L M
;M N
} 
public 

void 
OnPointerClick 
( 
PointerEventData /
data0 4
)4 5
{ 
cp 

.
 "
AcceptRestaurantClient !
(! "
)" #
;# $
} 
} Œ
\C:\Users\Administrator\Desktop\git_wine\wine-game\Assets\AA_Rami\CustomerSystem\tempTouch.cs
public 
class 
	tempTouch 
: 
MonoBehaviour &
{ 
public 

static 
bool 
hitDetected "
;" #
public 

static 

GameObject 
parentGameObject -
;- .
RuntimePlatform		 
platform		 
=		 
Application		 *
.		* +
platform		+ 3
;		3 4
void 
Update	 
( 
) 
{ 
if 

( 
platform 
== 
RuntimePlatform '
.' (
Android( /
||0 2
platform3 ;
==< >
RuntimePlatform? N
.N O
IPhonePlayerO [
)[ \
{ 	
if 
( 
Input 
. 

touchCount  
>! "
$num# $
)$ %
{ 
if 
( 
Input 
. 
GetTouch "
(" #
$num# $
)$ %
.% &
phase& +
==, .

TouchPhase/ 9
.9 :
Began: ?
)? @
{ 

checkTouch 
( 
Input $
.$ %
GetTouch% -
(- .
$num. /
)/ 0
.0 1
position1 9
)9 :
;: ;
} 
} 
} 	
else 
if 
( 
platform 
== 
RuntimePlatform ,
., -
WindowsEditor- :
): ;
{ 	
if 
( 
Input 
. 
GetMouseButtonUp &
(& '
$num' (
)( )
)) *
{ 

checkTouch 
( 
Input  
.  !
mousePosition! .
). /
;/ 0
} 
} 	
} 
void!! 

checkTouch!!	 
(!! 
Vector2!! 
pos!! 
)!!  
{"" 
Vector3## 
wp## 
=## 
Camera## 
.## 
main##  
.##  !
ScreenToWorldPoint##! 3
(##3 4
pos##4 7
)##7 8
;##8 9
Vector2$$ 
touchPos$$ 
=$$ 
new$$ 
Vector2$$ &
($$& '
wp$$' )
.$$) *
x$$* +
,$$+ ,
wp$$- /
.$$/ 0
y$$0 1
)$$1 2
;$$2 3

Collider2D%% 
hit%% 
=%% 
	Physics2D%% "
.%%" #
OverlapPoint%%# /
(%%/ 0
touchPos%%0 8
)%%8 9
;%%9 :
if'' 

('' 
hit'' 
)'' 
{(( 	
parentGameObject)) 
=)) 
hit)) "
.))" #

gameObject))# -
;))- .
MethodCallerHandler** 
mch**  #
;**# $
mch++ 
=++ 
parentGameObject++ "
.++" #
GetComponent++# /
<++/ 0
MethodCallerHandler++0 C
>++C D
(++D E
)++E F
;++F G
mch,, 
.,, 

CallMethod,, 
(,, 
),, 
;,, 
}.. 	
}// 
}00 ‡'
pC:\Users\Administrator\Desktop\git_wine\wine-game\Assets\AA_Rami\Scene transitionit ja kamera\CurtainControls.cs
public 
class 
CurtainControls 
: 
MonoBehaviour ,
{- .
bool 
IsClear	 
= 
true 
; 
public 

bool 

transition 
= 
true !
;! "
Color 	
curtainColor
 
; 
Camera 


fromCamera 
, 
toCamera 
;  
public 

float 
transitionSpeed  
=! "
$num# %
;% &
void 
Start	 
( 
) 
{ 

fromCamera 
= 
Camera 
. 
current #
;# $
curtainColor 
= 

gameObject !
.! "
GetComponent" .
<. /
SpriteRenderer/ =
>= >
(> ?
)? @
.@ A
colorA F
;F G
} 
public 

void 
FadeToBlack 
( 
Camera #
from$ (
,( )
Camera* 0
to1 3
)3 4
{ 

fromCamera 
= 
from 
; 
toCamera   
=   
to   
;   
IsClear!! 
=!! 
false!! 
;!! 

transition"" 
="" 
true"" 
;"" 
}## 
public(( 

void(( 
FadeToClear(( 
((( 
)(( 
{)) 
IsClear** 
=** 
true** 
;** 

transition++ 
=++ 
true++ 
;++ 
},, 
void11 
transitionToBlack11	 
(11 
)11 
{22 
if33 

(33 
curtainColor33 
.33 
a33 
<33 
$num33 
)33 
{44 	
curtainColor55 
.55 
a55 
+=55 
transitionSpeed55 -
*55. /
Time550 4
.554 5
	deltaTime555 >
;55> ?

gameObject66 
.66 
GetComponent66 #
<66# $
SpriteRenderer66$ 2
>662 3
(663 4
)664 5
.665 6
color666 ;
=66< =
curtainColor66> J
;66J K
}77 	
else88 
{99 	

transition:: 
=:: 
false:: 
;:: 
cameraADisable<< 
(<< 
)<< 
;<< 
cameraBEnable== 
(== 
)== 
;== 
FadeToClear>> 
(>> 
)>> 
;>> 
}?? 	
}@@ 
voidEE 
transitionToClearEE	 
(EE 
)EE 
{FF 
ifGG 

(GG 
curtainColorGG 
.GG 
aGG 
>GG 
$numGG 
)GG 
{HH 	
curtainColorII 
.II 
aII 
-=II 
transitionSpeedII -
*II. /
TimeII0 4
.II4 5
	deltaTimeII5 >
;II> ?

gameObjectJJ 
.JJ 
GetComponentJJ #
<JJ# $
SpriteRendererJJ$ 2
>JJ2 3
(JJ3 4
)JJ4 5
.JJ5 6
colorJJ6 ;
=JJ< =
curtainColorJJ> J
;JJJ K
}KK 	
elseLL 
{MM 	

transitionNN 
=NN 
falseNN 
;NN 
}OO 	
}PP 
voidVV 
UpdateVV	 
(VV 
)VV 
{VV 
ifWW 

(WW 

transitionWW 
)WW 
{XX 	
switchYY 
(YY 
IsClearYY 
)YY 
{ZZ 
case[[ 
true[[ 
:[[ 
transitionToClear\\ %
(\\% &
)\\& '
;\\' (
break]] 
;]] 
case^^ 
false^^ 
:^^ 
transitionToBlack__ %
(__% &
)__& '
;__' (
break`` 
;`` 
}aa 
}bb 	
}cc 
privateee 
voidee 
cameraADisableee 
(ee  !
)ee! "
{ff 
ifgg 

(gg 

fromCameragg 
!=gg 
nullgg 
)gg 

fromCameraii 
.ii 
enabledii 
=ii  
falseii! &
;ii& '
}jj 
privatell 
voidll 
cameraBEnablell 
(ll 
)ll  
{mm 
ifnn 

(nn 
toCamerann 
!=nn 
nullnn 
)nn 
toCamerapp 
.pp 
enabledpp 
=pp 
truepp #
;pp# $
}qq 
}rr ã
pC:\Users\Administrator\Desktop\git_wine\wine-game\Assets\AA_Rami\Scene transitionit ja kamera\kameracontrolli.cs
public 
class 
kameracontrolli 
: 
MonoBehaviour ,
{- .
public 

Camera 

farmCamera 
, 
breweryCamera +
,+ ,

townCamera- 7
;7 8

GameObject		 
go		 
;		 
void 
Start	 
( 
) 
{ 
go 

= 

GameObject 
. !
FindGameObjectWithTag -
(- .
$str. 7
)7 8
;8 9
} 
private 
void 
OnGUI 
( 
) 
{ 
	GUILayout 
. 
	BeginArea 
( 
new 
Rect  $
($ %
Screen% +
.+ ,
width, 1
-1 2
$num2 5
,5 6
$num7 9
,9 :
$num; >
,> ?
$num@ C
)C D
)D E
;E F
if 

( 
	GUILayout 
. 
Button 
( 
$str '
)' (
)( )
{ 	
go 
. 
GetComponent 
< 
CurtainControls +
>+ ,
(, -
)- .
.. /
FadeToBlack/ :
(: ;
Camera; A
.A B
mainB F
,F G

farmCameraH R
)R S
;S T
} 	
if 

( 
	GUILayout 
. 
Button 
( 
$str *
)* +
)+ ,
{ 	
go 
. 
GetComponent 
< 
CurtainControls +
>+ ,
(, -
)- .
.. /
FadeToBlack/ :
(: ;
Camera; A
.A B
mainB F
,F G
breweryCameraH U
)U V
;V W
} 	
if 

( 
	GUILayout 
. 
Button 
( 
$str '
)' (
)( )
{ 	
go 
. 
GetComponent 
< 
CurtainControls +
>+ ,
(, -
)- .
.. /
FadeToBlack/ :
(: ;
Camera; A
.A B
mainB F
,F G

townCameraH R
)R S
;S T
}   	
	GUILayout"" 
."" 
EndArea"" 
("" 
)"" 
;"" 
}## 
}$$ ÃM
SC:\Users\Administrator\Desktop\git_wine\wine-game\Assets\AA_Rami\ShopSystem\Shop.cs
public		 
class		 
Shop		 
:		 
MonoBehaviour		 !
{		" #
public 


GameObject 
shop 
; 
public 


GameObject 
ShopSlot 
; 
public 


SortedList 
< 
string 
, 
Item "
>" #
items$ )
=* +
new, /

SortedList0 :
<: ;
string; A
,A B
ItemC G
>G H
(H I
)I J
;J K
public 

List 
< 

GameObject 
> 
slots !
=" #
new$ '
List( ,
<, -

GameObject- 7
>7 8
(8 9
)9 :
;: ;
private 

GameObject 
ContentPanel #
;# $
private 

GameObject 
	InfoPanel  
;  !
private 
GridLayoutGroup 
glg 
;  
private 
Item !
currentlySelectedItem &
;& '
private 
void 
Start 
( 
) 
{ 
items 
= 

gameObject 
. 
GetComponent '
<' (
	Inventory( 1
>1 2
(2 3
)3 4
.4 5
items5 :
;: ;
	InfoPanel 
= 
shop 
. 
	transform "
." #
Find# '
(' (
$str( .
). /
./ 0

gameObject0 :
;: ;
ContentPanel 
= 
shop 
. 
	transform %
.% &
Find& *
(* +
$str+ 8
)8 9
.9 :
Find: >
(> ?
$str? I
)I J
.J K
FindK O
(O P
$strP Y
)Y Z
.Z [

gameObject[ e
;e f
for 
( 
int 
i 
= 
$num 
; 
i 
< 
items !
.! "
Count" '
;' (
i) *
++* ,
), -
{ 	

GameObject   
temp   
=   
Instantiate   )
(  ) *
ShopSlot  * 2
)  2 3
;  3 4
temp!! 
.!! 
	transform!! 
.!! 
	SetParent!! $
(!!$ %
ContentPanel!!% 1
.!!1 2
	transform!!2 ;
)!!; <
;!!< =
temp"" 
."" 
name"" 
="" 
items"" 
."" 
Keys"" "
[""" #
i""# $
]""$ %
;""% &
temp## 
.## 
GetComponent## 
<## 
Image## #
>### $
(##$ %
)##% &
.##& '
sprite##' -
=##. /
items##0 5
[##5 6
temp##6 :
.##: ;
name##; ?
]##? @
.##@ A

ItemSprite##A K
;##K L
slots$$ 
.$$ 
Add$$ 
($$ 
temp$$ 
)$$ 
;$$ 
}%% 	

SelectItem(( 
((( 
items(( 
.(( 
Keys(( 
[(( 
$num(( 
]((  
)((  !
;((! "
refreshInfo)) 
()) 
))) 
;)) 
glg,, 
=,, 
ContentPanel,, 
.,, 
GetComponent,, '
<,,' (
GridLayoutGroup,,( 7
>,,7 8
(,,8 9
),,9 :
;,,: ;
scaleContent-- 
(-- 
)-- 
;-- 
}.. 
private33 
void33 
scaleContent33 
(33 
)33  
{44 
float55 
y55 
=55 
(55 
ContentPanel55 
.55  
	transform55  )
.55) *

childCount55* 4
+554 5
$num555 6
)556 7
/558 9
glg55: =
.55= >
constraintCount55> M
*55N O
glg55P S
.55S T
cellSize55T \
.55\ ]
y55] ^
+55_ `
(55a b
glg55b e
.55e f
cellSize55f n
.55n o
y55o p
*55p q
$num55q r
)55r s
;55s t
ContentPanel66 
.66 
GetComponent66 !
<66! "
RectTransform66" /
>66/ 0
(660 1
)661 2
.662 3
	sizeDelta663 <
=66= >
new66? B
Vector266C J
(66J K
ContentPanel66K W
.66W X
GetComponent66X d
<66d e
RectTransform66e r
>66r s
(66s t
)66t u
.66u v
	sizeDelta66v 
.	66 Ä
x
66Ä Å
,
66Å Ç
y
66É Ñ
)
66Ñ Ö
;
66Ö Ü
}77 
public== 

void== 

SelectItem== 
(== 
string== !
key==" %
)==% &
{>> !
currentlySelectedItem@@ 
=@@ 
items@@  %
[@@% &
key@@& )
]@@) *
;@@* +
refreshInfoBB 
(BB 
)BB 
;BB 
}CC 
privateHH 
voidHH 
refreshInfoHH 
(HH 
)HH 
{II 

GameObjectJJ 
go1JJ 
=JJ 
	InfoPanelJJ "
.JJ" #
	transformJJ# ,
.JJ, -
FindJJ- 1
(JJ1 2
$strJJ2 D
)JJD E
.JJE F

gameObjectJJF P
;JJP Q

GameObjectKK 
go2KK 
=KK 
	InfoPanelKK "
.KK" #
	transformKK# ,
.KK, -
FindKK- 1
(KK1 2
$strKK2 E
)KKE F
.KKF G

gameObjectKKG Q
;KKQ R

GameObjectLL 
go3LL 
=LL 
	InfoPanelLL "
.LL" #
	transformLL# ,
.LL, -
FindLL- 1
(LL1 2
$strLL2 E
)LLE F
.LLF G

gameObjectLLG Q
;LLQ R
go1NN 
.NN 
GetComponentNN 
<NN 
TextNN 
>NN 
(NN 
)NN  
.NN  !
textNN! %
=NN& '!
currentlySelectedItemNN( =
.NN= >

returnNameNN> H
(NNH I
)NNI J
;NNJ K
go2OO 
.OO 
GetComponentOO 
<OO 
TextOO 
>OO 
(OO 
)OO  
.OO  !
textOO! %
=OO& '!
currentlySelectedItemOO( =
.OO= >
ItemDescOO> F
;OOF G
go3PP 
.PP 
GetComponentPP 
<PP 
ImagePP 
>PP 
(PP  
)PP  !
.PP! "
spritePP" (
=PP) *!
currentlySelectedItemPP+ @
.PP@ A

ItemSpritePPA K
;PPK L
}QQ 
publicVV 

voidVV 
BuyItemVV 
(VV 
)VV 
{WW !
currentlySelectedItemXX 
.XX 
AddItemXX %
(XX% &
)XX& '
;XX' (
}YY 
public^^ 

void^^ 
OpenShop^^ 
(^^ 
)^^ 
{__ 

GameObject`` 
.`` !
FindGameObjectWithTag`` (
(``( )
$str``) 6
)``6 7
.``7 8
GetComponent``8 D
<``D E

GameMaster``E O
>``O P
(``P Q
)``Q R
.``R S
IsInventoryOpen``S b
=``c d
true``e i
;``i j
shopaa 
.aa 
	SetActiveaa 
(aa 
trueaa 
)aa 
;aa 
}bb 
publicgg 

voidgg 
	CloseShopgg 
(gg 
)gg 
{hh 

GameObjectii 
.ii !
FindGameObjectWithTagii (
(ii( )
$strii) 6
)ii6 7
.ii7 8
GetComponentii8 D
<iiD E

GameMasteriiE O
>iiO P
(iiP Q
)iiQ R
.iiR S
IsInventoryOpeniiS b
=iic d
falseiie j
;iij k
shopjj 
.jj 
	SetActivejj 
(jj 
falsejj 
)jj 
;jj 
}kk 
privateoo 
voidoo 
OnGUIoo 
(oo 
)oo 
{pp 
	GUILayoutqq 
.qq 
	BeginAreaqq 
(qq 
newqq 
Rectqq  $
(qq$ %
Screenqq% +
.qq+ ,
widthqq, 1
-qq1 2
$numqq2 5
,qq5 6
Screenqq6 <
.qq< =
heightqq= C
-qqD E
$numqqF I
,qqI J
$numqqJ M
,qqM N
$numqqN Q
)qqQ R
)qqR S
;qqS T
ifrr 

(rr 
	GUILayoutrr 
.rr 
Buttonrr 
(rr 
$strrr (
)rr( )
)rr) *
{ss 	
OpenShoptt 
(tt 
)tt 
;tt 
}uu 	
ifvv 

(vv 
	GUILayoutvv 
.vv 
Buttonvv 
(vv 
$strvv )
)vv) *
)vv* +
{ww 	
	CloseShopxx 
(xx 
)xx 
;xx 
}yy 	
	GUILayoutzz 
.zz 
EndAreazz 
(zz 
)zz 
;zz 
}{{ 
}|| —
WC:\Users\Administrator\Desktop\git_wine\wine-game\Assets\AA_Rami\ShopSystem\ShopExit.cs
public 
class 
ShopExit 
: 
MonoBehaviour %
,% & 
IPointerClickHandler' ;
{ 
Shop 
shop	 
; 
void		 
Start			 
(		 
)		 
{

 
shop 
= 

GameObject 
. !
FindGameObjectWithTag /
(/ 0
$str0 =
)= >
.> ?
GetComponent? K
<K L
ShopL P
>P Q
(Q R
)R S
;S T
} 
public 

void 
OnPointerClick 
( 
PointerEventData /
data0 4
)4 5
{ 
shop 
. 
	CloseShop 
( 
) 
; 
} 
} ô

WC:\Users\Administrator\Desktop\git_wine\wine-game\Assets\AA_Rami\ShopSystem\ShopSlot.cs
public 
class 
ShopSlot 
: 
MonoBehaviour %
,% & 
IPointerClickHandler' ;
{ 
private 
Shop 
shop 
; 
void 
Start	 
( 
) 
{ 
shop 
= 

GameObject 
. !
FindGameObjectWithTag /
(/ 0
$str0 =
)= >
.> ?
GetComponent? K
<K L
ShopL P
>P Q
(Q R
)R S
;S T
} 
public 

void 
OnPointerClick 
( 
PointerEventData /
data0 4
)4 5
{ 
if 

( 
shop 
. 
items 
[ 

gameObject !
.! "
name" &
]& '
!=( *
null+ /
)/ 0
{ 	
shop 
. 

SelectItem 
( 

gameObject &
.& '
name' +
)+ ,
;, -
} 	
} 
} —
XC:\Users\Administrator\Desktop\git_wine\wine-game\Assets\AA_Rami\ShopSystem\buyButton.cs
public 
class 
	buyButton 
: 
MonoBehaviour &
,& ' 
IPointerClickHandler( <
{ 
Shop 
shop	 
; 
void 
Start	 
( 
) 
{ 
shop 
= 

GameObject 
. !
FindGameObjectWithTag /
(/ 0
$str0 =
)= >
.> ?
GetComponent? K
<K L
ShopL P
>P Q
(Q R
)R S
;S T
} 
public 

void 
OnPointerClick 
( 
PointerEventData /
data0 4
)4 5
{ 
shop 
. 
BuyItem 
( 
) 
; 
} 
} €#
gC:\Users\Administrator\Desktop\git_wine\wine-game\Assets\AA_Rami\testi scriptej√§\MainAltCamControls.cs
public

 
class

 
MainAltCamControls

 
:

  !
MonoBehaviour

" /
{

0 1
public 

Camera 
Camera 
; 
public 

	Transform 
CamPos1 
, 
CamPos2 %
;% &
public 

bool 

transition 
= 
false "
;" #
private 
bool 
cam1 
= 
true 
; 
float 	
transitionTime
 
= 
$num  
;  !
private 
void 
Start 
( 
) 
{ 
Camera 
. 
	transform 
. 
position !
=" #
CamPos1$ +
.+ ,
position, 4
;4 5
} 
public 

void 
Update 
( 
) 
{ 
if 

( 

transition 
== 
true 
) 
{ 	
	ChangePos 
( 
) 
; 
} 	
} 
public## 

void## 
	ChangePos## 
(## 
)## 
{$$ 
if%% 

(%% 
cam1%% 
!=%% 
true%% 
)%% 
{&& 	
Camera'' 
.'' 
	transform'' 
.'' 
position'' %
=''& '
new''( +
Vector3'', 3
(''3 4
Mathf''4 9
.''9 :
Lerp'': >
(''> ?
Camera''? E
.''E F
	transform''F O
.''O P
position''P X
.''X Y
x''Y Z
,''Z [
CamPos1''\ c
.''c d
position''d l
.''l m
x''m n
,''n o
transitionTime''p ~
)''~ 
,	'' Ä
Camera
''Å á
.
''á à
	transform
''à ë
.
''ë í
position
''í ö
.
''ö õ
y
''õ ú
,
''ú ù
Camera
''û §
.
''§ •
	transform
''• Æ
.
''Æ Ø
position
''Ø ∑
.
''∑ ∏
z
''∏ π
)
''π ∫
;
''∫ ª
if)) 
()) 
()) 
int)) 
))) 
Camera)) 
.)) 
	transform)) %
.))% &
position))& .
.)). /
x))/ 0
<=))1 3
())4 5
int))5 8
)))8 9
CamPos1))9 @
.))@ A
	transform))A J
.))J K
position))K S
.))S T
x))T U
)))U V
{** 

transition++ 
=++ 
false++ "
;++" #
cam1,, 
=,, 
true,, 
;,, 
}-- 
}.. 	
else// 
{00 	
Camera11 
.11 
	transform11 
.11 
position11 %
=11& '
new11( +
Vector311, 3
(113 4
Mathf114 9
.119 :
Lerp11: >
(11> ?
Camera11? E
.11E F
	transform11F O
.11O P
position11P X
.11X Y
x11Y Z
,11Z [
CamPos211\ c
.11c d
position11d l
.11l m
x11m n
,11n o
transitionTime11p ~
)11~ 
,	11 Ä
Camera
11Å á
.
11á à
	transform
11à ë
.
11ë í
position
11í ö
.
11ö õ
y
11õ ú
,
11ú ù
Camera
11û §
.
11§ •
	transform
11• Æ
.
11Æ Ø
position
11Ø ∑
.
11∑ ∏
z
11∏ π
)
11π ∫
;
11∫ ª
if33 
(33 
(33 
int33 
)33 
Camera33 
.33 
	transform33 %
.33% &
position33& .
.33. /
x33/ 0
+331 2
$num333 4
>=335 7
(338 9
int339 <
)33< =
CamPos233= D
.33D E
	transform33E N
.33N O
position33O W
.33W X
x33X Y
)33Y Z
{44 

transition55 
=55 
false55 "
;55" #
cam166 
=66 
false66 
;66 
}77 
}88 	
}99 
}:: ˆ
RC:\Users\Administrator\Desktop\git_wine\wine-game\Assets\Scripts\BottlingScript.cs
public 
class 
BottlingScript 
: 
MonoBehaviour +
{ 
public

 


GameMaster

 
.

 
BottlingState

 #
bottlingState

$ 1
;

1 2
private 
float 
timer 
; 
public 

string 
niceTime 
; 
public 

string 
wineName 
; 
private 
int 
bottlingTimeMinutes #
;# $
private 
int 
bottlingTimeSeconds #
;# $
public 

float 
Timer 
{ 
get 
{ 	
return 
timer 
; 
} 	
set 
{ 	
timer 
= 
value 
; 
} 	
} 
void   
Update  	 
(   
)   
{!! 
if## 

(## 
bottlingState## 
!=## 

GameMaster## '
.##' (
BottlingState##( 5
.##5 6
NotBottling##6 A
&&##B D
bottlingState##E R
!=##S U

GameMaster##V `
.##` a
BottlingState##a n
.##n o
Bottled##o v
)##v w
{$$ 	
if%% 
(%% 
timer%% 
>=%% 
$num%% 
)%% 
{&& 
timer'' 
-='' 
Time'' 
.'' 
	deltaTime'' '
;''' (
bottlingTimeMinutes(( #
=(($ %
Mathf((& +
.((+ ,

FloorToInt((, 6
(((6 7
timer((7 <
/((= >
$num((? B
)((B C
;((C D
bottlingTimeSeconds)) #
=))$ %
Mathf))& +
.))+ ,

FloorToInt)), 6
())6 7
timer))7 <
-))= >
bottlingTimeMinutes))? R
*))S T
$num))U W
)))W X
;))X Y
niceTime** 
=** 
string** !
.**! "
Format**" (
(**( )
$str**) 7
,**7 8
bottlingTimeMinutes**9 L
,**L M
bottlingTimeSeconds**N a
)**a b
;**b c
}++ 
if-- 
(-- 
timer-- 
<=-- 
$num-- 
)-- 
{.. 
bottlingState// 
=// 

GameMaster//  *
.//* +
BottlingState//+ 8
.//8 9
Bottled//9 @
;//@ A
}00 
}11 	
else22 
niceTime33 
=33 
string33 
.33 
Format33 $
(33$ %
$str33% +
)33+ ,
;33, -
}44 
}55 ·
WC:\Users\Administrator\Desktop\git_wine\wine-game\Assets\Scripts\ClarificationScript.cs
public 
class 
ClarificationScript  
:! "
MonoBehaviour# 0
{ 
public 


GameMaster 
. 
ClarificationState (
clarificationState) ;
;; <
private		 
float		 
timer		 
;		 
public

 

string

 
niceTime

 
;

 
public 

string 
wineName 
; 
private 
int $
clarificationTimeMinutes (
;( )
private 
int $
clarificationTimeSeconds (
;( )
public 

float 
Timer 
{ 
get 
{ 	
return 
timer 
; 
} 	
set 
{ 	
timer 
= 
value 
; 
} 	
} 
void 
Update	 
( 
) 
{   
if"" 

("" 
clarificationState"" 
!="" !

GameMaster""" ,
."", -
ClarificationState""- ?
.""? @
NotClarificating""@ P
&&""Q S
clarificationState""T f
!=""g i

GameMaster""j t
.""t u
ClarificationState	""u á
.
""á à
Clarificated
""à î
)
""î ï
{## 	
if%% 
(%% 
timer%% 
>=%% 
$num%% 
)%% 
{&& 
timer'' 
-='' 
Time'' 
.'' 
	deltaTime'' '
;''' ($
clarificationTimeMinutes(( (
=(() *
Mathf((+ 0
.((0 1

FloorToInt((1 ;
(((; <
timer((< A
/((B C
$num((D G
)((G H
;((H I$
clarificationTimeSeconds)) (
=))) *
Mathf))+ 0
.))0 1

FloorToInt))1 ;
()); <
timer))< A
-))B C$
clarificationTimeMinutes))D \
*))] ^
$num))_ a
)))a b
;))b c
niceTime** 
=** 
string** !
.**! "
Format**" (
(**( )
$str**) 7
,**7 8$
clarificationTimeMinutes**9 Q
,**Q R$
clarificationTimeSeconds**S k
)**k l
;**l m
}++ 
if.. 
(.. 
timer.. 
<=.. 
$num.. 
).. 
{// 
clarificationState00 "
=00# $

GameMaster00% /
.00/ 0
ClarificationState000 B
.00B C
Clarificated00C O
;00O P
}11 
}22 	
else33 
niceTime44 
=44 
string44 
.44 
Format44 $
(44$ %
$str44% +
)44+ ,
;44, -
}55 
}66 ﬂ5
SC:\Users\Administrator\Desktop\git_wine\wine-game\Assets\Scripts\ColliderHandler.cs
public 
class 
ColliderHandler 
: 
MonoBehaviour ,
{ 
public 

static 
bool 
hitDetected "
;" #
public		 


GameObject		 

gameMaster		  
;		  !
public

 

static

 

GameObject

 
parentGameObject

 -
;

- .
private 

GameMaster 
gm 
; 
private 
	LayerMask 
	layerMask 
=  !
$num" #
;# $
RuntimePlatform 
platform 
= 
Application *
.* +
platform+ 3
;3 4
void 
Awake	 
( 
) 
{ 
gm 

= 

gameMaster 
. 
GetComponent $
<$ %

GameMaster% /
>/ 0
(0 1
)1 2
;2 3
} 
void 
Update	 
( 
) 
{ 
if 

( 
platform 
== 
RuntimePlatform '
.' (
Android( /
||0 2
platform3 ;
==< >
RuntimePlatform? N
.N O
IPhonePlayerO [
)[ \
{ 	
if 
( 
Input 
. 

touchCount  
>! "
$num# $
)$ %
{ 
if 
( 
Input 
. 
GetTouch "
(" #
$num# $
)$ %
.% &
phase& +
==, .

TouchPhase/ 9
.9 :
Began: ?
)? @
{ 

checkTouch   
(   
Input   $
.  $ %
GetTouch  % -
(  - .
$num  . /
)  / 0
.  0 1
position  1 9
)  9 :
;  : ;
}!! 
}"" 
}## 	
else$$ 
if$$ 
($$ 
platform$$ 
==$$ 
RuntimePlatform$$ ,
.$$, -
WindowsEditor$$- :
)$$: ;
{%% 	
if&& 
(&& 
Input&& 
.&& 
GetMouseButtonUp&& &
(&&& '
$num&&' (
)&&( )
)&&) *
{'' 

checkTouch(( 
((( 
Input((  
.((  !
mousePosition((! .
)((. /
;((/ 0
})) 
}** 	
if,, 

(,, 
gm,, 
.,, 
IsInventoryOpen,, 
==,, !
true,," &
),,& '
	layerMask-- 
.-- 
value-- 
=-- 
$num-- 
;--  
else.. 
if.. 
(.. 
gm.. 
... 
State.. 
==.. 

GameMaster.. '
...' (
	GameState..( 1
...1 2
Farm..2 6
)..6 7
{// 	
	layerMask00 
.00 
value00 
=00 
$num00 !
;00! "
}11 	
else22 
if22 
(22 
gm22 
.22 
State22 
==22 

GameMaster22 '
.22' (
	GameState22( 1
.221 2
Brewery222 9
)229 :
{33 	
	layerMask44 
.44 
value44 
=44 
$num44 !
;44! "
}55 	
else66 
if66 
(66 
gm66 
.66 
State66 
==66 

GameMaster66 '
.66' (
	GameState66( 1
.661 2
Town662 6
)666 7
{77 	
	layerMask88 
.88 
value88 
=88 
$num88 "
;88" #
}99 	
else:: 
if:: 
(:: 
gm:: 
.:: 
State:: 
==:: 

GameMaster:: '
.::' (
	GameState::( 1
.::1 2

GrapeCrush::2 <
)::< =
{;; 	
	layerMask<< 
.<< 
value<< 
=<< 
$num<< "
;<<" #
}== 	
else>> 
	layerMask?? 
.?? 
value?? 
=?? 
$num?? 
;??  
}BB 
voidDD 

checkTouchDD	 
(DD 
Vector2DD 
posDD 
)DD  
{EE 
ifGG 

(GG 
	layerMaskGG 
.GG 
valueGG 
==GG 
$numGG "
)GG" #
{HH 	
hitterMethodII 
(II 
posII 
)II 
;II 
}JJ 	
ifKK 

(KK 
	layerMaskKK 
.KK 
valueKK 
==KK 
$numKK "
)KK" #
{LL 	
hitterMethodMM 
(MM 
posMM 
)MM 
;MM 
}NN 	
ifOO 

(OO 
	layerMaskOO 
.OO 
valueOO 
==OO 
$numOO #
)OO# $
{PP 	
hitterMethodQQ 
(QQ 
posQQ 
)QQ 
;QQ 
}RR 	
}WW 
publicYY 

voidYY 
hitterMethodYY 
(YY 
Vector2YY $
posYY% (
)YY( )
{ZZ 
Vector3[[ 
wp[[ 
=[[ 
Camera[[ 
.[[ 
main[[  
.[[  !
ScreenToWorldPoint[[! 3
([[3 4
pos[[4 7
)[[7 8
;[[8 9
Vector2\\ 
touchPos\\ 
=\\ 
new\\ 
Vector2\\ &
(\\& '
wp\\' )
.\\) *
x\\* +
,\\+ ,
wp\\- /
.\\/ 0
y\\0 1
)\\1 2
;\\2 3

Collider2D]] 
hit]] 
=]] 
	Physics2D]] "
.]]" #
OverlapPoint]]# /
(]]/ 0
touchPos]]0 8
,]]8 9
	layerMask]]: C
)]]C D
;]]D E
if__ 

(__ 
hit__ 
)__ 
{`` 	
parentGameObjectaa 
=aa 
hitaa "
.aa" #

gameObjectaa# -
;aa- .
MethodCallerHandlerbb 
mchbb  #
;bb# $
mchcc 
=cc 
parentGameObjectcc "
.cc" #
GetComponentcc# /
<cc/ 0
MethodCallerHandlercc0 C
>ccC D
(ccD E
)ccE F
;ccF G
mchdd 
.dd 

CallMethoddd 
(dd 
)dd 
;dd 
}ff 	
}gg 
}hh ∑l
OC:\Users\Administrator\Desktop\git_wine\wine-game\Assets\Scripts\CrushScript.cs
public

 
class

 
CrushScript

 
:

 
MonoBehaviour

 (
{ 
public 

Camera 

farmCamera 
; 
public 


GameObject 
grape 
; 
public 

	LayerMask 
	layerMask 
; 
public 

float 

grapeScore 
; 
public 

int 
missedGrapes 
; 
public 

Image 
fillBar 
; 
public 

Text 
fillText 
; 
public 

Text 
gameOverText 
; 
public 

Text 

missedText 
; 
public 

static 
bool 
didWin 
; 
private 
const 
int 
maxMissedGrapes %
=& '
$num( *
;* +
private 

GameObject 
temp 
; 
private 
float 
	startTime 
, 
refire #
=$ %
$num& *
;* +
private 

GameObject 
grapeSplash "
;" #
private 
MethodCallerHandler 
mch  #
;# $
private 
bool 
	isStarted 
; 
private 

SlotScript 

slotScript !
;! "
private 
	Inventory 
	inventory 
;  

GameObject   
[   
]   

spawnpoint   
;   
RuntimePlatform"" 
platform"" 
="" 
Application"" *
.""* +
platform""+ 3
;""3 4
void%% 
Awake%%	 
(%% 
)%% 
{&& 
mch(( 
=(( 
GetComponent(( 
<(( 
MethodCallerHandler(( .
>((. /
(((/ 0
)((0 1
;((1 2

slotScript)) 
=)) 

GameObject)) 
.))  !
FindGameObjectWithTag))  5
())5 6
$str))6 C
)))C D
.))D E
GetComponent))E Q
<))Q R

SlotScript))R \
>))\ ]
())] ^
)))^ _
;))_ `
	inventory** 
=** 

GameObject** 
.** !
FindGameObjectWithTag** 4
(**4 5
$str**5 B
)**B C
.**C D
GetComponent**D P
<**P Q
	Inventory**Q Z
>**Z [
(**[ \
)**\ ]
;**] ^
grapeSplash++ 
=++ 
	Resources++ 
.++  
Load++  $
<++$ %

GameObject++% /
>++/ 0
(++0 1
$str++1 @
)++@ A
;++A B

spawnpoint,, 
=,, 

GameObject,, 
.,,  "
FindGameObjectsWithTag,,  6
(,,6 7
$str,,7 @
),,@ A
;,,A B
mch-- 
=-- 
GetComponent-- 
<-- 
MethodCallerHandler-- .
>--. /
(--/ 0
)--0 1
;--1 2
}.. 
void00 
Start00	 
(00 
)00 
{11 
didWin33 
=33 
false33 
;33 
	isStarted44 
=44 
false44 
;44 
fillBar55 
.55 

fillAmount55 
=55 
$num55 
;55 
fillText66 
.66 
text66 
=66 
$str66 
;66 
gameOverText77 
.77 
text77 
=77 
$str77 
;77 

missedText88 
.88 
text88 
=88 
$str88  
;88  !
	startTime99 
=99 
Time99 
.99 
time99 
;99 
}:: 
void>> 
Update>>	 
(>> 
)>> 
{?? 
handleUIAA 
(AA 
)AA 
;AA 
ifCC 

(CC 
platformCC 
==CC 
RuntimePlatformCC '
.CC' (
AndroidCC( /
||CC0 2
platformCC3 ;
==CC< >
RuntimePlatformCC? N
.CCN O
IPhonePlayerCCO [
)CC[ \
{DD 	
ifEE 
(EE 
InputEE 
.EE 

touchCountEE  
>EE! "
$numEE# $
)EE$ %
{FF 
ifGG 
(GG 
InputGG 
.GG 
GetTouchGG "
(GG" #
$numGG# $
)GG$ %
.GG% &
phaseGG& +
==GG, .

TouchPhaseGG/ 9
.GG9 :
BeganGG: ?
)GG? @
{HH 

checkTouchII 
(II 
InputII $
.II$ %
GetTouchII% -
(II- .
$numII. /
)II/ 0
.II0 1
positionII1 9
)II9 :
;II: ;
}JJ 
}KK 
}LL 	
elseMM 
ifMM 
(MM 
platformMM 
==MM 
RuntimePlatformMM ,
.MM, -
WindowsEditorMM- :
)MM: ;
{NN 	
ifOO 
(OO 
InputOO 
.OO 
GetMouseButtonUpOO &
(OO& '
$numOO' (
)OO( )
)OO) *
{PP 

checkTouchQQ 
(QQ 
InputQQ  
.QQ  !
mousePositionQQ! .
)QQ. /
;QQ/ 0
}RR 
}SS 	
ifVV 

(VV 
	startTimeVV 
+VV 
refireVV 
<=VV !
TimeVV" &
.VV& '
timeVV' +
)VV+ ,
{WW 	
tempXX 
=XX 
InstantiateXX 
(XX 
grapeXX $
)XX$ %
;XX% &
tempYY 
.YY 
	transformYY 
.YY 
	SetParentYY $
(YY$ %

gameObjectYY% /
.YY/ 0
	transformYY0 9
)YY9 :
;YY: ;
tempZZ 
.ZZ 
	transformZZ 
.ZZ 
positionZZ #
=ZZ$ %

spawnpointZZ& 0
[ZZ0 1
RandomZZ1 7
.ZZ7 8
RangeZZ8 =
(ZZ= >
$numZZ> ?
,ZZ? @

spawnpointZZA K
.ZZK L
LengthZZL R
)ZZR S
]ZZS T
.ZZT U
	transformZZU ^
.ZZ^ _
positionZZ_ g
;ZZg h
	startTime[[ 
=[[ 
Time[[ 
.[[ 
time[[ !
;[[! "
}\\ 	
if__ 

(__ 
fillBar__ 
.__ 

fillAmount__ 
==__ !
$num__" #
)__# $
{`` 	
didWinaa 
=aa 
trueaa 
;aa 
gameOverTextbb 
.bb 
textbb 
=bb 
$strbb  +
;bb+ ,
gameOverTextcc 
.cc 
textcc 
+=cc  
$strcc! @
;cc@ A
gameOverdd 
(dd 
)dd 
;dd 
}ee 	
elseff 
ifff 
(ff 
missedGrapesff 
==ff  
maxMissedGrapesff! 0
)ff0 1
{gg 	
didWinhh 
=hh 
falsehh 
;hh 
gameOverTextii 
.ii 
textii 
=ii 
$strii  7
;ii7 8
gameOverjj 
(jj 
)jj 
;jj 
}kk 	
}ll 
voidoo 

checkTouchoo	 
(oo 
Vector2oo 
posoo 
)oo  
{pp 
ifqq 

(qq 
	layerMaskqq 
.qq 
valueqq 
==qq 
$numqq #
)qq# $
{rr 	
Vector3ss 
wpss 
=ss 
Camerass 
.ss  
mainss  $
.ss$ %
ScreenToWorldPointss% 7
(ss7 8
posss8 ;
)ss; <
;ss< =
Vector2uu 
touchPosuu 
=uu 
newuu "
Vector2uu# *
(uu* +
wpuu+ -
.uu- .
xuu. /
,uu/ 0
wpuu1 3
.uu3 4
yuu4 5
)uu5 6
;uu6 7

Collider2Dww 
hitww 
=ww 
	Physics2Dww &
.ww& '
OverlapPointww' 3
(ww3 4
touchPosww4 <
,ww< =
	layerMaskww> G
)wwG H
;wwH I
ifyy 
(yy 
hityy 
&&yy 
hityy 
.yy 
tagyy 
==yy !
$stryy" )
)yy) *
{zz 
Destroy{{ 
({{ 
hit{{ 
.{{ 

gameObject{{ &
){{& '
;{{' (
Instantiate|| 
(|| 
grapeSplash|| '
,||' (
touchPos||) 1
,||1 2

Quaternion||3 =
.||= >
identity||> F
)||F G
;||G H

grapeScore}} 
++}} 
;}} 
}~~ 
} 	
}
ÄÄ 
void
ÉÉ 
handleUI
ÉÉ	 
(
ÉÉ 
)
ÉÉ 
{
ÑÑ 
fillText
ÖÖ 
.
ÖÖ 
text
ÖÖ 
=
ÖÖ 
Mathf
ÖÖ 
.
ÖÖ 

FloorToInt
ÖÖ (
(
ÖÖ( )

grapeScore
ÖÖ) 3
*
ÖÖ4 5
$num
ÖÖ6 :
)
ÖÖ: ;
+
ÖÖ< =
$str
ÖÖ> A
;
ÖÖA B
fillBar
ÜÜ 
.
ÜÜ 

fillAmount
ÜÜ 
=
ÜÜ 
(
ÜÜ 

grapeScore
ÜÜ (
*
ÜÜ) *
$num
ÜÜ+ /
)
ÜÜ/ 0
;
ÜÜ0 1

missedText
áá 
.
áá 
text
áá 
=
áá 
missedGrapes
áá &
+
áá' (
$str
áá) ,
+
áá- .
maxMissedGrapes
áá/ >
;
áá> ?
}
àà 
void
ãã 
gameOver
ãã	 
(
ãã 
)
ãã 
{
åå 

GameObject
çç 
[
çç 
]
çç 

grapesLeft
çç 
=
çç  !

GameObject
çç" ,
.
çç, -$
FindGameObjectsWithTag
çç- C
(
ççC D
$str
ççD K
)
ççK L
;
ççL M

GameObject
éé 
[
éé 
]
éé 
grapeSplashLeft
éé $
=
éé% &

GameObject
éé' 1
.
éé1 2$
FindGameObjectsWithTag
éé2 H
(
ééH I
$str
ééI V
)
ééV W
;
ééW X
foreach
èè 
(
èè 

GameObject
èè 
grapes
èè "
in
èè# %

grapesLeft
èè& 0
)
èè0 1
{
êê 	
Destroy
ëë 
(
ëë 
grapes
ëë 
)
ëë 
;
ëë 
foreach
íí 
(
íí 

GameObject
íí 
splash
íí  &
in
íí' )
grapeSplashLeft
íí* 9
)
íí9 :
{
ìì 
Destroy
îî 
(
îî 
splash
îî 
)
îî 
;
îî  
}
ïï 
}
ññ 	
gameOverText
óó 
.
óó 
GetComponent
óó !
<
óó! "
Animator
óó" *
>
óó* +
(
óó+ ,
)
óó, -
.
óó- .
SetBool
óó. 5
(
óó5 6
$str
óó6 @
,
óó@ A
true
óóB F
)
óóF G
;
óóG H
if
òò 

(
òò 
!
òò 
	isStarted
òò 
)
òò 
{
ôô 	
	isStarted
öö 
=
öö 
true
öö 
;
öö 
StartCoroutine
õõ 
(
õõ 
$str
õõ !
)
õõ! "
;
õõ" #
}
úú 	
}
ùù 
IEnumerator
†† 
Wait
†† 
(
†† 
)
†† 
{
°° 
didWin
¢¢ 
=
¢¢ 
false
¢¢ 
;
¢¢ 

GameObject
££ 
canvas
££ 
=
££ 

GameObject
££ &
.
££& '
Find
££' +
(
££+ ,
$str
££, 4
)
££4 5
;
££5 6
yield
§§ 
return
§§ 
new
§§ 
WaitForSeconds
§§ '
(
§§' (
$num
§§( )
)
§§) *
;
§§* +
mch
•• 
.
•• 

CallMethod
•• 
(
•• 
)
•• 
;
•• 
yield
¶¶ 
return
¶¶ 
new
¶¶ 
WaitForSeconds
¶¶ '
(
¶¶' (
$num
¶¶( )
)
¶¶) *
;
¶¶* +
canvas
ßß 
.
ßß 
	SetActive
ßß 
(
ßß 
false
ßß 
)
ßß 
;
ßß  

gameObject
®® 
.
®® 
GetComponent
®® 
<
®®  
CrushScript
®®  +
>
®®+ ,
(
®®, -
)
®®- .
.
®®. /
enabled
®®/ 6
=
®®7 8
false
®®9 >
;
®®> ?
yield
©© 
return
©© 
new
©© 
WaitForSeconds
©© '
(
©©' (
$num
©©( )
)
©©) *
;
©©* +
Destroy
™™ 
(
™™ 

gameObject
™™ 
)
™™ 
;
™™ 

GameObject
´´ 
.
´´ 
Find
´´ 
(
´´ 
$str
´´ %
)
´´% &
.
´´& '
GetComponent
´´' 3
<
´´3 4

GameMaster
´´4 >
>
´´> ?
(
´´? @
)
´´@ A
.
´´A B
CrushisActive
´´B O
=
´´P Q
false
´´R W
;
´´W X
}
¨¨ 
}≠≠ º
QC:\Users\Administrator\Desktop\git_wine\wine-game\Assets\Scripts\DestroySplash.cs
public 
class 
DestroySplash 
: 
MonoBehaviour *
{ 
public 

float 
delay 
= 
- 
$num 
; 
void		 
Start			 
(		 
)		 
{

 
Destroy 
( 

gameObject 
, 

gameObject &
.& '
GetComponent' 3
<3 4
Animator4 <
>< =
(= >
)> ?
.? @'
GetCurrentAnimatorStateInfo@ [
([ \
$num\ ]
)] ^
.^ _
length_ e
+f g
delayh m
)m n
;n o
} 
void 
Update	 
( 
) 
{ 
} 
} õ'
SC:\Users\Administrator\Desktop\git_wine\wine-game\Assets\Scripts\FermentorScript.cs
public 
class 
FermentorScript 
: 
MonoBehaviour ,
{ 
public

 

List

 
<

 
Sprite

 
>

 
Sprites

 
=

  !
new

" %
List

& *
<

* +
Sprite

+ 1
>

1 2
(

2 3
)

3 4
;

4 5
public 


GameMaster 
. 
FermentationState '
FermentationState( 9
;9 :
public 


GameMaster 
. 
Winetype 
WineType '
;' (
public 

bool 
isFermenting 
; 
public 

string 
	grapeName 
; 
private 
float 
timer 
; 
public 

string 
niceTime 
; 
private 
int 
fermentTimeMinutes "
;" #
private 
int 
fermentTimeSeconds "
;" #
private 

GameMaster 

gameMaster !
;! "
private 

SlotScript 

slotScript !
;! "
private 
bool 
	isStarted 
; 
private 
void 
Awake 
( 
) 
{ 

gameMaster 
= 

GameObject 
.  
Find  $
($ %
$str% 2
)2 3
.3 4
GetComponent4 @
<@ A

GameMasterA K
>K L
(L M
)M N
;N O

slotScript 
= 

GameObject 
.  
Find  $
($ %
$str% 2
)2 3
.3 4
GetComponent4 @
<@ A

SlotScriptA K
>K L
(L M
)M N
;N O
	isStarted 
= 
false 
; 
} 
public   

float   
Timer   
{!! 
get"" 
{## 	
return$$ 
timer$$ 
;$$ 
}%% 	
set&& 
{'' 	
timer(( 
=(( 
value(( 
;(( 
})) 	
}** 
void.. 
Update..	 
(.. 
).. 
{// 
if00 

(00 

gameMaster00 
.00 
CrushisActive00 $
)00$ %
{11 	
if22 
(22 
	isStarted22 
==22 
false22 "
)22" #
{33 
	isStarted44 
=44 
true44  
;44  !
}55 
if77 
(77 
CrushScript77 
.77 
didWin77 "
)77" #
{88 

slotScript99 
.99 
Ferment99 "
(99" #
)99# $
;99$ %
}:: 
};; 	
if== 

(== 
FermentationState== 
!===  

GameMaster==! +
.==+ ,
FermentationState==, =
.=== >
NotFermentating==> M
&&==N P
FermentationState==Q b
!===c e

GameMaster==f p
.==p q
FermentationState	==q Ç
.
==Ç É
	Fermented
==É å
)
==å ç
{>> 	
if?? 
(?? 
timer?? 
>=?? 
$num?? 
)?? 
{@@ 
timerAA 
-=AA 
TimeAA 
.AA 
	deltaTimeAA '
;AA' (
fermentTimeMinutesBB "
=BB# $
MathfBB% *
.BB* +

FloorToIntBB+ 5
(BB5 6
timerBB6 ;
/BB< =
$numBB> A
)BBA B
;BBB C
fermentTimeSecondsCC "
=CC# $
MathfCC% *
.CC* +

FloorToIntCC+ 5
(CC5 6
timerCC6 ;
-CC< =
fermentTimeMinutesCC> P
*CCQ R
$numCCS U
)CCU V
;CCV W
niceTimeDD 
=DD 
stringDD !
.DD! "
FormatDD" (
(DD( )
$strDD) 7
,DD7 8
fermentTimeMinutesDD9 K
,DDK L
fermentTimeSecondsDDM _
)DD_ `
;DD` a
}EE 
ifGG 
(GG 
timerGG 
<=GG 
$numGG 
)GG 
{HH 
FermentationStateII !
=II" #

GameMasterII$ .
.II. /
FermentationStateII/ @
.II@ A
	FermentedIIA J
;IIJ K
}JJ 
}KK 	
elseLL 
niceTimeMM 
=MM 
stringMM 
.MM 
FormatMM $
(MM$ %
$strMM% +
)MM+ ,
;MM, -
}NN 
}OO ·´
MC:\Users\Administrator\Desktop\git_wine\wine-game\Assets\Scripts\GUIScript.cs
public		 
class		 
	GUIScript		 
:		 
MonoBehaviour		 &
{

 
public 

CanvasGroup 
	inventory  
;  !
public 

CanvasGroup 
	infoPanel  
;  !
public 

Text 
infoPanelText 
; 
public 

Text 
infoPanelTimer 
; 
public 

Button 
harvestButton 
;  
public 

Button 
plantButton 
; 
private 
Animator 
animator 
; 
private 
string 
button 
; 
private 

GameObject 
[ 
] 
temp 
; 
private 

SlotScript 

slotScript !
;! "
private 
PlantGround 
groundScript $
;$ %
private 

GameObject 
parent 
; 
private 
Image 
infoPanelSprite !
;! "
private 
string 
timer 
; 
private 

GameObject 
gameManager "
;" #
private 
FermentorScript 
fermentorScript +
;+ ,
private 

GameMaster 

gameMaster !
;! "
private 
ClarificationScript 
clarificationScript  3
;3 4
private 
BottlingScript 
bottlingScript )
;) *
void## 
Awake##	 
(## 
)## 
{$$ 
gameManager&& 
=&& 

GameObject&&  
.&&  !!
FindGameObjectWithTag&&! 6
(&&6 7
$str&&7 D
)&&D E
;&&E F

gameMaster'' 
='' 
gameManager''  
.''  !
GetComponent''! -
<''- .

GameMaster''. 8
>''8 9
(''9 :
)'': ;
;''; <
infoPanelSprite(( 
=(( 
	infoPanel(( #
.((# $
	transform(($ -
.((- .
Find((. 2
(((2 3
$str((3 A
)((A B
.((B C
GetComponent((C O
<((O P
Image((P U
>((U V
(((V W
)((W X
;((X Y
temp)) 
=)) 

GameObject)) 
.)) "
FindGameObjectsWithTag)) 0
())0 1
$str))1 7
)))7 8
;))8 9

slotScript** 
=** 
gameManager**  
.**  !
GetComponent**! -
<**- .

SlotScript**. 8
>**8 9
(**9 :
)**: ;
;**; <
animator++ 
=++ 
GetComponent++ 
<++  
Animator++  (
>++( )
(++) *
)++* +
;+++ ,
},, 
void// 
Update//	 
(// 
)// 
{00 
if22 

(22 
	infoPanel22 
.22 
alpha22 
==22 
$num22  
)22  !
{33 	
if44 
(44 
parent44 
.44 
tag44 
==44 
$str44 '
)44' (
{55 
timer66 
=66 
groundScript66 $
.66$ %
niceTime66% -
;66- .
infoPanelTimer77 
.77 
text77 #
=77$ %
timer77& +
;77+ ,
if88 
(88 
groundScript88  
.88  !
Timer88! &
<=88' )
$num88* +
)88+ ,
{99 
infoPanelTimer:: "
.::" #
text::# '
=::( )
$str::* 2
;::2 3
};; 
}<< 
else== 
if== 
(== 
parent== 
.== 
tag== 
====  "
$str==# /
)==/ 0
{>> 
timer?? 
=?? 
fermentorScript?? '
.??' (
niceTime??( 0
;??0 1
infoPanelTimer@@ 
.@@ 
text@@ #
=@@$ %
timer@@& +
;@@+ ,
ifAA 
(AA 
fermentorScriptAA #
.AA# $
TimerAA$ )
<=AA* ,
$numAA- .
)AA. /
{BB 
infoPanelTimerCC "
.CC" #
textCC# '
=CC( )
$strCC* 2
;CC2 3
}DD 
}EE 
elseFF 
ifFF 
(FF 
parentFF 
.FF 
tagFF 
==FF  "
$strFF# 2
)FF2 3
{GG 
timerHH 
=HH 
clarificationScriptHH +
.HH+ ,
niceTimeHH, 4
;HH4 5
infoPanelTimerII 
.II 
textII #
=II$ %
timerII& +
;II+ ,
ifJJ 
(JJ 
clarificationScriptJJ '
.JJ' (
TimerJJ( -
<=JJ. 0
$numJJ1 2
)JJ2 3
{KK 
infoPanelTimerLL "
.LL" #
textLL# '
=LL( )
$strLL* 2
;LL2 3
}MM 
}NN 
elseOO 
ifOO 
(OO 
parentOO 
.OO 
tagOO 
==OO  "
$strOO# -
)OO- .
{PP 
timerQQ 
=QQ 
bottlingScriptQQ &
.QQ& '
niceTimeQQ' /
;QQ/ 0
infoPanelTimerRR 
.RR 
textRR #
=RR$ %
timerRR& +
;RR+ ,
ifSS 
(SS 
bottlingScriptSS "
.SS" #
TimerSS# (
<=SS) +
$numSS, -
)SS- .
{TT 
infoPanelTimerUU "
.UU" #
textUU# '
=UU( )
$strUU* 2
;UU2 3
}VV 
}WW 
}XX 	
}YY 
public\\ 

void\\ 
initializeInfoPanel\\ #
(\\# $
string\\$ *
name\\+ /
)\\/ 0
{]] 
if^^ 

(^^ 
parent^^ 
.^^ 
tag^^ 
==^^ 
$str^^ #
)^^# $
{__ 	
infoPanelText`` 
.`` 
text`` 
=``  
name``! %
+``& '
$str``( 6
;``6 7
infoPanelSpriteaa 
.aa 
spriteaa "
=aa# $
	Resourcesaa% .
.aa. /
Loadaa/ 3
<aa3 4
Spriteaa4 :
>aa: ;
(aa; <
$straa< >
+aa? @
nameaaA E
)aaE F
;aaF G
}bb 	
elsedd 
ifdd 
(dd 
parentdd 
.dd 
tagdd 
==dd 
$strdd +
)dd+ ,
{ee 	
infoPanelTextff 
.ff 
textff 
=ff  
nameff! %
+ff& '
$strff( 8
;ff8 9
infoPanelSpritegg 
.gg 
spritegg "
=gg# $
	Resourcesgg% .
.gg. /
Loadgg/ 3
<gg3 4
Spritegg4 :
>gg: ;
(gg; <
$strgg< >
+gg? @
nameggA E
)ggE F
;ggF G
}hh 	
elseii 
ifii 
(ii 
parentii 
.ii 
tagii 
==ii 
$strii .
)ii. /
{jj 	
infoPanelTextkk 
.kk 
textkk 
=kk  
namekk! %
+kk& '
$strkk( @
;kk@ A
infoPanelSpritell 
.ll 
spritell "
=ll# $
	Resourcesll% .
.ll. /
Loadll/ 3
<ll3 4
Spritell4 :
>ll: ;
(ll; <
$strll< >
+ll? @
namellA E
)llE F
;llF G
}mm 	
elsenn 
ifnn 
(nn 
parentnn 
.nn 
tagnn 
==nn 
$strnn )
)nn) *
{oo 	
infoPanelTextpp 
.pp 
textpp 
=pp  
namepp! %
+pp& '
$strpp( ;
;pp; <
infoPanelSpriteqq 
.qq 
spriteqq "
=qq# $
	Resourcesqq% .
.qq. /
Loadqq/ 3
<qq3 4
Spriteqq4 :
>qq: ;
(qq; <
$strqq< >
+qq? @
nameqqA E
)qqE F
;qqF G
}rr 	
}ss 
publicvv 

voidvv 
ButtonClickedvv 
(vv 
)vv 
{ww 
ifxx 

(xx 
gameManagerxx 
.xx 
GetComponentxx $
<xx$ %

GameMasterxx% /
>xx/ 0
(xx0 1
)xx1 2
.xx2 3
IsInventoryOpenxx3 B
==xxC E
truexxF J
)xxJ K
{yy 	
buttonzz 
=zz 
EventSystemzz  
.zz  !
currentzz! (
.zz( )%
currentSelectedGameObjectzz) B
.zzB C
namezzC G
;zzG H
switch{{ 
({{ 
button{{ 
){{ 
{|| 
case}} 
$str}} 
:}} 
	infoPanel~~ 
.~~ 
alpha~~ #
=~~$ %
$num~~& '
;~~' (
animator 
. 
SetBool $
($ %
$str% 4
,4 5
false6 ;
); <
;< =
break
ÄÄ 
;
ÄÄ 
case
ÅÅ 
$str
ÅÅ 
:
ÅÅ 

slotScript
ÇÇ 
.
ÇÇ 
Plant
ÇÇ $
(
ÇÇ$ %
)
ÇÇ% &
;
ÇÇ& '
if
ÉÉ 
(
ÉÉ 

SlotScript
ÉÉ "
.
ÉÉ" #
didPlant
ÉÉ# +
)
ÉÉ+ ,
{
ÑÑ 
animator
ÖÖ  
.
ÖÖ  !
SetBool
ÖÖ! (
(
ÖÖ( )
$str
ÖÖ) 8
,
ÖÖ8 9
false
ÖÖ: ?
)
ÖÖ? @
;
ÖÖ@ A
}
ÜÜ 
else
áá 
return
àà 
;
àà 
break
ââ 
;
ââ 
case
ää 
$str
ää 
:
ää 
if
ãã 
(
ãã 
groundScript
ãã $
.
ãã$ %
Timer
ãã% *
<=
ãã+ -
$num
ãã. /
)
ãã/ 0
{
åå 

slotScript
çç "
.
çç" #
Harvest
çç# *
(
çç* +
)
çç+ ,
;
çç, -
	infoPanel
éé !
.
éé! "
alpha
éé" '
=
éé( )
$num
éé* +
;
éé+ ,
}
èè 
else
êê 
return
ëë 
;
ëë 
break
íí 
;
íí 
case
ìì 
$str
ìì 
:
ìì 

slotScript
îî 
.
îî 
selectGrape
îî *
(
îî* +
)
îî+ ,
;
îî, -
if
ïï 
(
ïï 

SlotScript
ïï "
.
ïï" #
didPlant
ïï# +
)
ïï+ ,
{
ññ 
animator
óó  
.
óó  !
SetBool
óó! (
(
óó( )
$str
óó) 8
,
óó8 9
false
óó: ?
)
óó? @
;
óó@ A
}
òò 
else
ôô 
return
öö 
;
öö 
break
õõ 
;
õõ 
case
úú 
$str
úú "
:
úú" #

slotScript
ùù 
.
ùù 
Clarificate
ùù *
(
ùù* +
)
ùù+ ,
;
ùù, -
if
ûû 
(
ûû 

SlotScript
ûû "
.
ûû" #
didPlant
ûû# +
)
ûû+ ,
{
üü 
animator
††  
.
††  !
SetBool
††! (
(
††( )
$str
††) 8
,
††8 9
false
††: ?
)
††? @
;
††@ A
}
°° 
else
¢¢ 
return
££ 
;
££ 
break
§§ 
;
§§ 
case
•• 
$str
•• 
:
•• 

slotScript
¶¶ 
.
¶¶ 
Bottling
¶¶ '
(
¶¶' (
)
¶¶( )
;
¶¶) *
if
ßß 
(
ßß 

SlotScript
ßß "
.
ßß" #
didPlant
ßß# +
)
ßß+ ,
{
®® 
animator
©©  
.
©©  !
SetBool
©©! (
(
©©( )
$str
©©) 8
,
©©8 9
false
©©: ?
)
©©? @
;
©©@ A
}
™™ 
else
´´ 
return
¨¨ 
;
¨¨ 
break
≠≠ 
;
≠≠ 
case
ÆÆ 
$str
ÆÆ 
:
ÆÆ 
if
ØØ 
(
ØØ 
(
ØØ 
parent
ØØ 
.
ØØ  
tag
ØØ  #
==
ØØ$ &
$str
ØØ' 3
&&
ØØ4 6
fermentorScript
ØØ7 F
.
ØØF G
Timer
ØØG L
<=
ØØM O
$num
ØØP Q
)
ØØQ R
||
ØØS U
(
ØØV W
parent
ØØW ]
.
ØØ] ^
tag
ØØ^ a
==
ØØb d
$str
ØØe t
&&
ØØu w"
clarificationScriptØØx ã
.ØØã å
TimerØØå ë
<=ØØí î
$numØØï ñ
)ØØñ ó
||ØØò ö
(ØØõ ú
parentØØú ¢
.ØØ¢ £
tagØØ£ ¶
==ØØß ©
$strØØ™ ¥
&&ØØµ ∑
bottlingScriptØØ∏ ∆
.ØØ∆ «
TimerØØ« Ã
<=ØØÕ œ
$numØØ– —
)ØØ— “
)ØØ“ ”
{
∞∞ 

slotScript
±± "
.
±±" #
Collect
±±# *
(
±±* +
)
±±+ ,
;
±±, -
	infoPanel
≤≤ !
.
≤≤! "
alpha
≤≤" '
=
≤≤( )
$num
≤≤* +
;
≤≤+ ,
}
≥≥ 
else
¥¥ 
return
µµ 
;
µµ 
break
∂∂ 
;
∂∂ 
}
∑∑ 
plantButton
ππ 
.
ππ 
name
ππ 
=
ππ 
$str
ππ &
;
ππ& '
plantButton
∫∫ 
.
∫∫ $
GetComponentInChildren
∫∫ .
<
∫∫. /
Text
∫∫/ 3
>
∫∫3 4
(
∫∫4 5
)
∫∫5 6
.
∫∫6 7
text
∫∫7 ;
=
∫∫< =
$str
∫∫> E
;
∫∫E F
harvestButton
ªª 
.
ªª 
name
ªª 
=
ªª  
$str
ªª! *
;
ªª* +
harvestButton
ºº 
.
ºº $
GetComponentInChildren
ºº 0
<
ºº0 1
Text
ºº1 5
>
ºº5 6
(
ºº6 7
)
ºº7 8
.
ºº8 9
text
ºº9 =
=
ºº> ?
$str
ºº@ I
;
ººI J

GameObject
ΩΩ 
.
ΩΩ #
FindGameObjectWithTag
ΩΩ ,
(
ΩΩ, -
$str
ΩΩ- :
)
ΩΩ: ;
.
ΩΩ; <
GetComponent
ΩΩ< H
<
ΩΩH I

GameMaster
ΩΩI S
>
ΩΩS T
(
ΩΩT U
)
ΩΩU V
.
ΩΩV W
IsInventoryOpen
ΩΩW f
=
ΩΩg h
false
ΩΩi n
;
ΩΩn o
}
ææ 	
}
øø 
public
¬¬ 

void
¬¬ 
showInventory
¬¬ 
(
¬¬ 
)
¬¬ 
{
√√ 
parent
ƒƒ 
=
ƒƒ 
ColliderHandler
ƒƒ  
.
ƒƒ  !
parentGameObject
ƒƒ! 1
;
ƒƒ1 2
groundScript
≈≈ 
=
≈≈ 
parent
≈≈ 
.
≈≈ 
GetComponent
≈≈ *
<
≈≈* +
PlantGround
≈≈+ 6
>
≈≈6 7
(
≈≈7 8
)
≈≈8 9
;
≈≈9 :
fermentorScript
∆∆ 
=
∆∆ 
parent
∆∆  
.
∆∆  !
GetComponent
∆∆! -
<
∆∆- .
FermentorScript
∆∆. =
>
∆∆= >
(
∆∆> ?
)
∆∆? @
;
∆∆@ A!
clarificationScript
«« 
=
«« 
parent
«« $
.
««$ %
GetComponent
««% 1
<
««1 2!
ClarificationScript
««2 E
>
««E F
(
««F G
)
««G H
;
««H I
bottlingScript
»» 
=
»» 
parent
»» 
.
»»  
GetComponent
»»  ,
<
»», -
BottlingScript
»»- ;
>
»»; <
(
»»< =
)
»»= >
;
»»> ?
switch
   
(
   
parent
   
.
   
tag
   
)
   
{
ÀÀ 	
case
ÃÃ 
$str
ÃÃ 
:
ÃÃ 
	inventory
ÕÕ 
.
ÕÕ 
alpha
ÕÕ 
=
ÕÕ  !
$num
ÕÕ" #
;
ÕÕ# $
animator
ŒŒ 
.
ŒŒ 
SetBool
ŒŒ  
(
ŒŒ  !
$str
ŒŒ! 0
,
ŒŒ0 1
true
ŒŒ2 6
)
ŒŒ6 7
;
ŒŒ7 8
break
œœ 
;
œœ 
case
–– 
$str
–– 
:
–– 
	infoPanel
—— 
.
—— 
alpha
—— 
=
——  !
$num
——" #
;
——# $!
initializeInfoPanel
““ #
(
““# $
groundScript
““$ 0
.
““0 1
	plantName
““1 :
)
““: ;
;
““; <
break
”” 
;
”” 
case
‘‘ 
$str
‘‘  
:
‘‘  !
	inventory
’’ 
.
’’ 
alpha
’’ 
=
’’  !
$num
’’" #
;
’’# $
animator
÷÷ 
.
÷÷ 
SetBool
÷÷  
(
÷÷  !
$str
÷÷! 0
,
÷÷0 1
true
÷÷2 6
)
÷÷6 7
;
÷÷7 8
plantButton
◊◊ 
.
◊◊ 
name
◊◊  
=
◊◊! "
$str
◊◊# *
;
◊◊* +
plantButton
ÿÿ 
.
ÿÿ $
GetComponentInChildren
ÿÿ 2
<
ÿÿ2 3
Text
ÿÿ3 7
>
ÿÿ7 8
(
ÿÿ8 9
)
ÿÿ9 :
.
ÿÿ: ;
text
ÿÿ; ?
=
ÿÿ@ A
$str
ÿÿB I
;
ÿÿI J
break
ŸŸ 
;
ŸŸ 
case
⁄⁄ 
$str
⁄⁄ 
:
⁄⁄ 
	infoPanel
€€ 
.
€€ 
alpha
€€ 
=
€€  !
$num
€€" #
;
€€# $!
initializeInfoPanel
‹‹ #
(
‹‹# $

gameMaster
‹‹$ .
.
‹‹. /
GetDescription
‹‹/ =
(
‹‹= >
fermentorScript
‹‹> M
.
‹‹M N
WineType
‹‹N V
)
‹‹V W
)
‹‹W X
;
‹‹X Y
harvestButton
›› 
.
›› 
name
›› "
=
››# $
$str
››% .
;
››. /
harvestButton
ﬁﬁ 
.
ﬁﬁ $
GetComponentInChildren
ﬁﬁ 4
<
ﬁﬁ4 5
Text
ﬁﬁ5 9
>
ﬁﬁ9 :
(
ﬁﬁ: ;
)
ﬁﬁ; <
.
ﬁﬁ< =
text
ﬁﬁ= A
=
ﬁﬁB C
$str
ﬁﬁD M
;
ﬁﬁM N
break
ﬂﬂ 
;
ﬂﬂ 
case
‡‡ 
$str
‡‡ #
:
‡‡# $
	inventory
·· 
.
·· 
alpha
·· 
=
··  !
$num
··" #
;
··# $
animator
‚‚ 
.
‚‚ 
SetBool
‚‚  
(
‚‚  !
$str
‚‚! 0
,
‚‚0 1
true
‚‚2 6
)
‚‚6 7
;
‚‚7 8
plantButton
„„ 
.
„„ 
name
„„  
=
„„! "
$str
„„# 0
;
„„0 1
plantButton
‰‰ 
.
‰‰ $
GetComponentInChildren
‰‰ 2
<
‰‰2 3
Text
‰‰3 7
>
‰‰7 8
(
‰‰8 9
)
‰‰9 :
.
‰‰: ;
text
‰‰; ?
=
‰‰@ A
$str
‰‰B O
;
‰‰O P
break
ÂÂ 
;
ÂÂ 
case
ÊÊ 
$str
ÊÊ  
:
ÊÊ  !
	infoPanel
ÁÁ 
.
ÁÁ 
alpha
ÁÁ 
=
ÁÁ  !
$num
ÁÁ" #
;
ÁÁ# $!
initializeInfoPanel
ËË #
(
ËË# $!
clarificationScript
ËË$ 7
.
ËË7 8
wineName
ËË8 @
)
ËË@ A
;
ËËA B
harvestButton
ÈÈ 
.
ÈÈ 
name
ÈÈ "
=
ÈÈ# $
$str
ÈÈ% .
;
ÈÈ. /
harvestButton
ÍÍ 
.
ÍÍ $
GetComponentInChildren
ÍÍ 4
<
ÍÍ4 5
Text
ÍÍ5 9
>
ÍÍ9 :
(
ÍÍ: ;
)
ÍÍ; <
.
ÍÍ< =
text
ÍÍ= A
=
ÍÍB C
$str
ÍÍD M
;
ÍÍM N
break
ÎÎ 
;
ÎÎ 
case
ÏÏ 
$str
ÏÏ 
:
ÏÏ 
	inventory
ÌÌ 
.
ÌÌ 
alpha
ÌÌ 
=
ÌÌ  !
$num
ÌÌ" #
;
ÌÌ# $
animator
ÓÓ 
.
ÓÓ 
SetBool
ÓÓ  
(
ÓÓ  !
$str
ÓÓ! 0
,
ÓÓ0 1
true
ÓÓ2 6
)
ÓÓ6 7
;
ÓÓ7 8
plantButton
ÔÔ 
.
ÔÔ 
name
ÔÔ  
=
ÔÔ! "
$str
ÔÔ# +
;
ÔÔ+ ,
plantButton
 
.
 $
GetComponentInChildren
 2
<
2 3
Text
3 7
>
7 8
(
8 9
)
9 :
.
: ;
text
; ?
=
@ A
$str
B J
;
J K
break
ÒÒ 
;
ÒÒ 
case
ÚÚ 
$str
ÚÚ 
:
ÚÚ 
	infoPanel
ÛÛ 
.
ÛÛ 
alpha
ÛÛ 
=
ÛÛ  !
$num
ÛÛ" #
;
ÛÛ# $!
initializeInfoPanel
ÙÙ #
(
ÙÙ# $
bottlingScript
ÙÙ$ 2
.
ÙÙ2 3
wineName
ÙÙ3 ;
)
ÙÙ; <
;
ÙÙ< =
harvestButton
ıı 
.
ıı 
name
ıı "
=
ıı# $
$str
ıı% .
;
ıı. /
harvestButton
ˆˆ 
.
ˆˆ $
GetComponentInChildren
ˆˆ 4
<
ˆˆ4 5
Text
ˆˆ5 9
>
ˆˆ9 :
(
ˆˆ: ;
)
ˆˆ; <
.
ˆˆ< =
text
ˆˆ= A
=
ˆˆB C
$str
ˆˆD M
;
ˆˆM N
break
˜˜ 
;
˜˜ 
}
¯¯ 	
}
˘˘ 
}˙˙ ‰[
NC:\Users\Administrator\Desktop\git_wine\wine-game\Assets\Scripts\GameMaster.cs
public 
class 

GameMaster 
: 
MonoBehaviour '
{		 
public 


GameObject 

townCamera  
,  !

farmCamera" ,
,, -
breweryCamera. ;
;; <
public 

Camera 

grapeCrush 
; 
public 


GameObject 
playGrapeCrush $
;$ %
public 

bool 
CrushisActive 
; 
private 

GameObject 
guiTemp 
; 
private 
	GUIScript 
	guiScript 
;  
private 
CurtainControls 
curtainControls +
;+ ,
public 

	GameState 
State 
= 
	GameState &
.& '
Farm' +
;+ ,
public 

enum 
	GameState 
{ 
Farm 
, 
Town   
,   
Brewery!! 
,!! 

GrapeCrush"" 
}## 
;## 
public%% 

enum%% 

PlantState%% 
{&& 

NotPlanted'' 
,'' 
JustPlanted(( 
,(( 

Overgrowth)) 
,)) 
Trimmed** 
,** 
Grapes++ 
},, 
;,, 
public.. 

enum.. 
FermentationState.. !
{// 
NotFermentating00 
,00 

Fermenting11 
,11 
	Fermented22 
}33 
public55 

enum55 
ClarificationState55 "
{66 
NotClarificating77 
,77 
Clarificating88 
,88 
Clarificated99 
}:: 
public<< 

enum<< 
Winetype<< 
{== 
[>> 	
Description>>	 
(>> 
$str>> !
)>>! "
]>>" #
	WhiteWine?? 
,?? 
[@@ 	
Description@@	 
(@@ 
$str@@  
)@@  !
]@@! "
RoseWineAA 
,AA 
[BB 	
DescriptionBB	 
(BB 
$strBB 
)BB  
]BB  !
RedWineCC 
,CC 
}DD 
publicFF 

enumFF 
BottlingStateFF 
{GG 
NotBottlingHH 
,HH 
BottlingII 
,II 
BottledJJ 
}KK 
publicOO 

boolOO 
IsInventoryOpenOO 
=OO  !
falseOO" '
;OO' (
voidQQ 
AwakeQQ	 
(QQ 
)QQ 
{RR 
curtainControlsSS 
=SS 

GameObjectSS $
.SS$ %!
FindGameObjectWithTagSS% :
(SS: ;
$strSS; D
)SSD E
.SSE F
GetComponentSSF R
<SSR S
CurtainControlsSSS b
>SSb c
(SSc d
)SSd e
;SSe f
guiTempTT 
=TT 

GameObjectTT 
.TT !
FindGameObjectWithTagTT 2
(TT2 3
$strTT3 D
)TTD E
;TTE F
	guiScriptUU 
=UU 
guiTempUU 
.UU 
GetComponentUU (
<UU( )
	GUIScriptUU) 2
>UU2 3
(UU3 4
)UU4 5
;UU5 6
playGrapeCrushVV 
.VV 
	SetActiveVV  
(VV  !
falseVV! &
)VV& '
;VV' (
CrushisActiveWW 
=WW 
falseWW 
;WW 
}XX 
voidYY 
GoToTownYY	 
(YY 
)YY 
{ZZ 
curtainControls[[ 
.[[ 
FadeToBlack[[ #
([[# $
Camera[[$ *
.[[* +
main[[+ /
,[[/ 0

townCamera[[1 ;
.[[; <
	transform[[< E
.[[E F
Find[[F J
([[J K
$str[[K T
)[[T U
.[[U V
GetComponent[[V b
<[[b c
Camera[[c i
>[[i j
([[j k
)[[k l
)[[l m
;[[m n
State\\ 
=\\ 
	GameState\\ 
.\\ 
Town\\ 
;\\ 
}]] 
void^^ 
GoToFarm^^	 
(^^ 
)^^ 
{__ 
curtainControls`` 
.`` 
FadeToBlack`` #
(``# $
Camera``$ *
.``* +
main``+ /
,``/ 0

farmCamera``1 ;
.``; <
	transform``< E
.``E F
Find``F J
(``J K
$str``K T
)``T U
.``U V
GetComponent``V b
<``b c
Camera``c i
>``i j
(``j k
)``k l
)``l m
;``m n
Stateaa 
=aa 
	GameStateaa 
.aa 
Farmaa 
;aa 
}bb 
voidcc 
GoToBrewerycc	 
(cc 
)cc 
{dd 
curtainControlsee 
.ee 
FadeToBlackee #
(ee# $
Cameraee$ *
.ee* +
mainee+ /
,ee/ 0
breweryCameraee1 >
.ee> ?
	transformee? H
.eeH I
FindeeI M
(eeM N
$streeN W
)eeW X
.eeX Y
GetComponenteeY e
<eee f
Cameraeef l
>eel m
(eem n
)een o
)eeo p
;eep q
Stateff 
=ff 
	GameStateff 
.ff 
Breweryff !
;ff! "
}gg 
voidii 
PlayGrapeCrushii	 
(ii 
)ii 
{jj 
curtainControlskk 
.kk 
FadeToBlackkk #
(kk# $
Camerakk$ *
.kk* +
mainkk+ /
,kk/ 0

grapeCrushkk1 ;
)kk; <
;kk< =
Statell 
=ll 
	GameStatell 
.ll 

GrapeCrushll $
;ll$ %
StartCoroutinemm 
(mm 
$strmm 
,mm 
$nummm #
)mm# $
;mm$ %
}nn 
voidpp 
ViewInventorypp	 
(pp 

GameObjectpp !
gopp" $
)pp$ %
{qq 
	guiScriptrr 
.rr 
showInventoryrr 
(rr  
)rr  !
;rr! "
IsInventoryOpenss 
=ss 
truess 
;ss 
}tt 
IEnumeratorvv 
Waitvv 
(vv 
floatvv 
timevv 
)vv  
{ww 
yieldxx 
returnxx 
newxx 
WaitForSecondsxx '
(xx' (
timexx( ,
)xx, -
;xx- .

GameObjectyy 
objyy 
=yy 
Instantiateyy $
(yy$ %
playGrapeCrushyy% 3
)yy3 4
;yy4 5
Statezz 
=zz 
	GameStatezz 
.zz 

GrapeCrushzz $
;zz$ %
obj{{ 
.{{ 
	SetActive{{ 
({{ 
true{{ 
){{ 
;{{ 
CrushisActive|| 
=|| 
true|| 
;|| 
}~~ 
public
ÅÅ 

string
ÅÅ 
GetDescription
ÅÅ  
(
ÅÅ  !
Enum
ÅÅ! %
value
ÅÅ& +
)
ÅÅ+ ,
{
ÇÇ 
	FieldInfo
ÉÉ 
field
ÉÉ 
=
ÉÉ 
value
ÉÉ 
.
ÉÉ  
GetType
ÉÉ  '
(
ÉÉ' (
)
ÉÉ( )
.
ÉÉ) *
GetField
ÉÉ* 2
(
ÉÉ2 3
value
ÉÉ3 8
.
ÉÉ8 9
ToString
ÉÉ9 A
(
ÉÉA B
)
ÉÉB C
)
ÉÉC D
;
ÉÉD E"
DescriptionAttribute
ÖÖ 
	attribute
ÖÖ &
=
ÜÜ 
	Attribute
ÜÜ 
.
ÜÜ  
GetCustomAttribute
ÜÜ .
(
ÜÜ. /
field
ÜÜ/ 4
,
ÜÜ4 5
typeof
ÜÜ6 <
(
ÜÜ< ="
DescriptionAttribute
ÜÜ= Q
)
ÜÜQ R
)
ÜÜR S
as
áá "
DescriptionAttribute
áá +
;
áá+ ,
return
ââ 
	attribute
ââ 
==
ââ 
null
ââ  
?
ââ! "
value
ââ# (
.
ââ( )
ToString
ââ) 1
(
ââ1 2
)
ââ2 3
:
ââ4 5
	attribute
ââ6 ?
.
ââ? @
Description
ââ@ K
;
ââK L
}
ää 
public
çç 


GameObject
çç 
CurrentClient
çç #
;
çç# $
public
éé 


GameObject
éé 
CustomerSystem
éé $
;
éé$ %
void
êê 
ClientClick
êê	 
(
êê 

GameObject
êê 
go
êê  "
)
êê" #
{
ëë 
Debug
íí 
.
íí 
Log
íí 
(
íí 
go
íí 
.
íí 
ToString
íí 
(
íí 
)
íí 
)
íí  
;
íí  !
CustomerSystem
ìì 
.
ìì 
GetComponent
ìì #
<
ìì# $
CustomerPanel
ìì$ 1
>
ìì1 2
(
ìì2 3
)
ìì3 4
.
ìì4 5
clientSender
ìì5 A
=
ììB C
go
ììD F
.
ììF G
GetComponent
ììG S
<
ììS T
Client
ììT Z
>
ììZ [
(
ìì[ \
)
ìì\ ]
;
ìì] ^
CustomerSystem
îî 
.
îî 
GetComponent
îî #
<
îî# $
CustomerPanel
îî$ 1
>
îî1 2
(
îî2 3
)
îî3 4
.
îî4 5
ActivatePanel
îî5 B
(
îîB C
)
îîC D
;
îîD E
CustomerSystem
ïï 
.
ïï 
GetComponent
ïï #
<
ïï# $
CustomerPanel
ïï$ 1
>
ïï1 2
(
ïï2 3
)
ïï3 4
.
ïï4 5%
ScaleExplanationContent
ïï5 L
(
ïïL M
)
ïïM N
;
ïïN O
}
ññ 
public
óó 

enum
óó 

ClientType
óó 
{
òò 
Farmer
ôô 
,
ôô 

Restaurant
öö 
}
õõ 
;
õõ 
public
†† 

void
†† "
FarmCameraTransition
†† $
(
††$ %
)
††% &
{
°° 

farmCamera
¢¢ 
.
¢¢ 
GetComponent
¢¢ 
<
¢¢   
MainAltCamControls
¢¢  2
>
¢¢2 3
(
¢¢3 4
)
¢¢4 5
.
¢¢5 6

transition
¢¢6 @
=
¢¢A B
true
¢¢C G
;
¢¢G H
}
££ 
public
•• 

void
•• "
TownCameraTransition
•• $
(
••$ %
)
••% &
{
¶¶ 

townCamera
ßß 
.
ßß 
GetComponent
ßß 
<
ßß   
MainAltCamControls
ßß  2
>
ßß2 3
(
ßß3 4
)
ßß4 5
.
ßß5 6

transition
ßß6 @
=
ßßA B
true
ßßC G
;
ßßG H
}
®® 
public
™™ 

void
™™ %
BreweryCameraTransition
™™ '
(
™™' (
)
™™( )
{
´´ 
breweryCamera
¨¨ 
.
¨¨ 
GetComponent
¨¨ "
<
¨¨" # 
MainAltCamControls
¨¨# 5
>
¨¨5 6
(
¨¨6 7
)
¨¨7 8
.
¨¨8 9

transition
¨¨9 C
=
¨¨D E
true
¨¨F J
;
¨¨J K
}
≠≠ 
void
≥≥ 
DebugMethod
≥≥	 
(
≥≥ 
)
≥≥ 
{
¥¥ 
Debug
µµ 
.
µµ 
Log
µµ 
(
µµ 
$str
µµ 
)
µµ 
;
µµ  
}
∂∂ 
}∑∑ ÂE
MC:\Users\Administrator\Desktop\git_wine\wine-game\Assets\Scripts\Inventory.cs
public 
class 
	Inventory 
: 
MonoBehaviour &
{		 
public 

List 
< 

GameObject 
> 
slots !
=" #
new$ '
List( ,
<, -

GameObject- 7
>7 8
(8 9
)9 :
;: ;
public 


SortedList 
< 
string 
, 
Item "
>" #
items$ )
=* +
new, /

SortedList0 :
<: ;
string; A
,A B
ItemC G
>G H
(H I
)I J
;J K
public 

Canvas 
canvas 
; 
public 


GameObject 
slot 
; 
private 
const 
int 
maxRows 
= 
$num  !
;! "
private 
const 
int 

maxColumns  
=! "
$num# $
;$ %
private 

GameObject 
InventoryGO "
;" #
void 
Awake	 
( 
) 
{ 
InventoryGO 
= 
canvas 
. 
	transform &
.& '
Find' +
(+ ,
$str, 7
)7 8
.8 9

gameObject9 C
;C D
} 
void 
Start	 
( 
) 
{ 
items 
. 
Add 
( 
$str $
,$ %
new& )
Item* .
(. /
$str/ A
,A B
$numC D
,D E
$strF X
,X Y
ItemZ ^
.^ _
ItemType_ g
.g h
VINEh l
)l m
)m n
;n o
items 
. 
Add 
( 
$str $
,$ %
new& )
Item* .
(. /
$str/ A
,A B
$numC D
,D E
$strF X
,X Y
ItemZ ^
.^ _
ItemType_ g
.g h
VINEh l
)l m
)m n
;n o
items   
.   
Add   
(   
$str   
,    
new  ! $
Item  % )
(  ) *
$str  * 7
,  7 8
$num  9 :
,  : ;
$str  < S
,  S T
Item  U Y
.  Y Z
ItemType  Z b
.  b c
GRAPE  c h
)  h i
)  i j
;  j k
items!! 
.!! 
Add!! 
(!! 
$str!! 
,!!  
new!!! $
Item!!% )
(!!) *
$str!!* 7
,!!7 8
$num!!9 :
,!!: ;
$str!!< S
,!!S T
Item!!U Y
.!!Y Z
ItemType!!Z b
.!!b c
GRAPE!!c h
)!!h i
)!!i j
;!!j k
items"" 
."" 
Add"" 
("" 
$str"" 
,"" 
new""  #
Item""$ (
(""( )
$str"") 5
,""5 6
$num""7 8
,""8 9
$str"": N
,""N O
Item""P T
.""T U
ItemType""U ]
.""] ^
WINE""^ b
)""b c
)""c d
;""d e
items## 
.## 
Add## 
(## 
$str## 
,## 
new## !
Item##" &
(##& '
$str##' 1
,##1 2
$num##3 4
,##4 5
$str##6 H
,##H I
Item##J N
.##N O
ItemType##O W
.##W X
WINE##X \
)##\ ]
)##] ^
;##^ _
items$$ 
.$$ 
Add$$ 
($$ 
$str$$ 
,$$ 
new$$ "
Item$$# '
($$' (
$str$$( 3
,$$3 4
$num$$5 6
,$$6 7
$str$$8 K
,$$K L
Item$$M Q
.$$Q R
ItemType$$R Z
.$$Z [
WINE$$[ _
)$$_ `
)$$` a
;$$a b
items%% 
.%% 
Add%% 
(%% 
$str%% 
,%% 
new%% 
Item%%  $
(%%$ %
$str%%% -
,%%- .
$num%%/ 0
,%%0 1
$str%%2 D
,%%D E
Item%%F J
.%%J K
ItemType%%K S
.%%S T
BOTTLE%%T Z
)%%Z [
)%%[ \
;%%\ ]
for(( 
((( 
int(( 
i(( 
=(( 
$num(( 
;(( 
i(( 
<(( 
items(( !
.((! "
Count((" '
;((' (
i(() *
++((* ,
)((, -
{)) 	

GameObject++ 
temp++ 
=++ 
Instantiate++ )
(++) *
slot++* .
)++. /
;++/ 0
temp,, 
.,, 
	transform,, 
.,, 
	SetParent,, $
(,,$ %
InventoryGO,,% 0
.,,0 1
	transform,,1 :
),,: ;
;,,; <
temp-- 
.-- 
GetComponent-- 
<-- 
Slot-- "
>--" #
(--# $
)--$ %
.--% &

uiItemName--& 0
.--0 1
text--1 5
=--6 7
items--8 =
[--= >
items--> C
.--C D
Keys--D H
[--H I
i--I J
]--J K
]--K L
.--L M

returnName--M W
(--W X
)--X Y
;--Y Z
slots.. 
... 
Add.. 
(.. 
temp.. 
).. 
;.. 
}// 	
for22 
(22 
int22 
i22 
=22 
$num22 
,22 
y22 
=22 
$num22 
;22 
i22  
<22! "
maxRows22# *
;22* +
y22, -
++22- /
)22/ 0
{33 	
for44 
(44 
int44 
x44 
=44 
$num44 
;44 
x44 
<44 

maxColumns44  *
;44* +
x44, -
++44- /
,44/ 0
i441 2
++442 4
)444 5
{55 
if66 
(66 
slots66 
[66 
i66 
]66 
!=66 
null66  $
)66$ %
{77 
slots88 
[88 
i88 
]88 
.88 
	transform88 &
.88& '
localPosition88' 4
=885 6
new887 :
Vector388; B
(88B C
$num88C F
+88G H
$num88I M
/88N O
$num88P Q
*88R S
-88T U
$num88U V
+88W X
$num88Y \
*88] ^
x88_ `
,88` a
(88b c
$num88c f
/88g h
$num88i j
-88k l
$num88m o
)88o p
-88q r
$num88s v
*88w x
y88y z
)88z {
;88{ |
}99 
}:: 
};; 	
}<< 
void?? 
OnGUI??	 
(?? 
)?? 
{@@ 
	GUILayoutAA 
.AA 
	BeginAreaAA 
(AA 
newAA 
RectAA  $
(AA$ %
$numAA% '
,AA' (
$numAA) +
,AA+ ,
$numAA- 0
,AA0 1
$numAA2 5
)AA5 6
)AA6 7
;AA7 8
ifBB 

(BB 
	GUILayoutBB 
.BB 
ButtonBB 
(BB 
$strBB *
)BB* +
)BB+ ,
{CC 	
itemsDD 
[DD 
$strDD $
]DD$ %
.DD% &
AddItemDD& -
(DD- .
)DD. /
;DD/ 0
}EE 	
	GUILayoutFF 
.FF 
EndAreaFF 
(FF 
)FF 
;FF 
	GUILayoutGG 
.GG 
	BeginAreaGG 
(GG 
newGG 
RectGG  $
(GG$ %
$numGG% '
,GG' (
$numGG) +
,GG+ ,
$numGG- 0
,GG0 1
$numGG2 5
)GG5 6
)GG6 7
;GG7 8
ifHH 

(HH 
	GUILayoutHH 
.HH 
ButtonHH 
(HH 
$strHH *
)HH* +
)HH+ ,
{II 	
itemsJJ 
[JJ 
$strJJ $
]JJ$ %
.JJ% &
AddItemJJ& -
(JJ- .
)JJ. /
;JJ/ 0
}KK 	
	GUILayoutLL 
.LL 
EndAreaLL 
(LL 
)LL 
;LL 
}MM 
}NN á
HC:\Users\Administrator\Desktop\git_wine\wine-game\Assets\Scripts\Item.cs
public 
class 
Item 
{ 
private 
string 
itemDesc 
; 
private		 
string		 
itemName		 
;		 
private

 
int

 
itemID

 
;

 
private 
Sprite 

itemSprite 
; 
private 
ItemType 
itemType 
; 
private 
int 
	itemValue 
; 
public 

enum 
ItemType 
{ 
GRAPE 
, 
VINE 
, 
WINE 
, 
BOTTLE 
, 
} 
public 

string 
ItemDesc 
{ 
get 
{ 
return 
itemDesc 
; 
}  
} 
public   

ItemType   
iType   
{!! 
get"" 
{"" 
return"" 
itemType"" 
;"" 
}""  
}## 
public%% 

Sprite%% 

ItemSprite%% 
{&& 
get'' 
{'' 
return'' 

itemSprite'' 
;''  
}''! "
}(( 
public** 

int** 
	itemCount** 
{++ 
get,, 
{-- 	
return.. 
	itemValue.. 
;.. 
}// 	
private00 
set00 
{11 	
if22 
(22 
value22 
<22 
$num22 
)22 
{33 
if44 
(44 
	itemValue44 
-44 
value44  %
<44& '
$num44( )
)44) *
	itemValue55 
=55 
$num55  !
;55! "
else66 
	itemValue77 
-=77  
value77! &
;77& '
}88 
else99 
{:: 
	itemValue;; 
=;; 
value;; !
;;;! "
}<< 
}== 	
}>> 
public@@ 

int@@ 
returnID@@ 
(@@ 
)@@ 
{AA 
returnBB 
itemIDBB 
;BB 
}CC 
publicEE 

ItemEE 
.EE 
ItemTypeEE 
returnItemTypeEE '
(EE' (
)EE( )
{FF 
returnGG 
itemTypeGG 
;GG 
}HH 
publicLL 

voidLL 
PopItemLL 
(LL 
)LL 
{MM 
	itemCountNN 
--NN 
;NN 
}OO 
publicQQ 

voidQQ 
AddItemQQ 
(QQ 
)QQ 
{RR 
	itemCountSS 
++SS 
;SS 
}TT 
publicVV 

stringVV 

returnNameVV 
(VV 
)VV 
{WW 
returnXX 
itemNameXX 
;XX 
}YY 
public]] 

Item]] 
(]] 
string]] 
name]] 
,]] 
int]]  
id]]! #
,]]# $
string]]% +
desc]], 0
,]]0 1
ItemType]]2 :
type]]; ?
)]]? @
{^^ 
itemName__ 
=__ 
name__ 
;__ 
itemID`` 
=`` 
id`` 
;`` 
itemDescaa 
=aa 
descaa 
;aa 
itemTypebb 
=bb 
typebb 
;bb 

itemSpritecc 
=cc 
	Resourcescc 
.cc 
Loadcc #
<cc# $
Spritecc$ *
>cc* +
(cc+ ,
$strcc, .
+cc/ 0
namecc1 5
)cc5 6
;cc6 7
}dd 
}ff ¢
WC:\Users\Administrator\Desktop\git_wine\wine-game\Assets\Scripts\MethodCallerHandler.cs
public 
class 
MethodCallerHandler  
:! "
MonoBehaviour# 0
{ 
private 

GameMaster 
gm 
; 
public 

string 

MethodName 
; 
void 
Awake	 
( 
) 
{ 
gm 

= 

GameObject 
. !
FindGameObjectWithTag -
(- .
$str. ;
); <
.< =
GetComponent= I
<I J

GameMasterJ T
>T U
(U V
)V W
;W X
} 
public 

void 

CallMethod 
( 
) 
{ 
gm 

.
 
SendMessage 
( 

MethodName !
,! "

gameObject# -
)- .
;. /
} 
} …$
OC:\Users\Administrator\Desktop\git_wine\wine-game\Assets\Scripts\PlantGround.cs
public 
class 
PlantGround 
: 
MonoBehaviour (
{ 
public		 

List		 
<		 
Sprite		 
>		 
Sprites		 
=		  !
new		" %
List		& *
<		* +
Sprite		+ 1
>		1 2
(		2 3
)		3 4
;		4 5
public

 


GameMaster

 
.

 

PlantState

  

plantState

! +
=

, -

GameMaster

. 8
.

8 9

PlantState

9 C
.

C D

NotPlanted

D N
;

N O
public 

bool 
	isPlanted 
; 
public 

string 
	plantName 
; 
public 

Sprite 
plantSprite 
; 
public 

string 
niceTime 
; 
private 
float 
timer 
= 
$num 
; 
private 
int 
harvestTimeMinutes "
;" #
private 
int 
harvestTimeSeconds "
;" #
public 

float 
Timer 
{ 
get 
{ 	
return 
timer 
; 
} 	
} 
void 
Update	 
( 
) 
{ 
if   

(   

plantState   
!=   

GameMaster   $
.  $ %

PlantState  % /
.  / 0

NotPlanted  0 :
&&  ; =

plantState  > H
!=  I K

GameMaster  L V
.  V W

PlantState  W a
.  a b
Grapes  b h
)  h i
{!! 	
if"" 
("" 
timer"" 
>="" 
$num"" 
)"" 
{## 
timer$$ 
-=$$ 
Time$$ 
.$$ 
	deltaTime$$ '
;$$' (
harvestTimeMinutes%% "
=%%# $
Mathf%%% *
.%%* +

FloorToInt%%+ 5
(%%5 6
timer%%6 ;
/%%< =
$num%%> A
)%%A B
;%%B C
harvestTimeSeconds&& "
=&&# $
Mathf&&% *
.&&* +

FloorToInt&&+ 5
(&&5 6
timer&&6 ;
-&&< =
harvestTimeMinutes&&> P
*&&Q R
$num&&S U
)&&U V
;&&V W
niceTime'' 
='' 
string'' !
.''! "
Format''" (
(''( )
$str'') 7
,''7 8
harvestTimeMinutes''9 K
,''K L
harvestTimeSeconds''M _
)''_ `
;''` a
}(( 
if++ 
(++ 
timer++ 
<=++ 
$num++ 
)++ 
{,, 

plantState.. 
=.. 

GameMaster.. '
...' (

PlantState..( 2
...2 3
Grapes..3 9
;..9 :
}// 
else00 
if00 
(00 
timer00 
<00 
$num00 
)00  
{11 

plantState33 
=33 

GameMaster33 '
.33' (

PlantState33( 2
.332 3
Trimmed333 :
;33: ;
}44 
else55 
if55 
(55 
timer55 
<55 
$num55  
)55  !
{66 

plantState88 
=88 

GameMaster88 '
.88' (

PlantState88( 2
.882 3

Overgrowth883 =
;88= >
}99 
else:: 
if:: 
(:: 
timer:: 
<:: 
$num::  
)::  !
{;; 
GetComponent<< 
<<< 
SpriteRenderer<< +
><<+ ,
(<<, -
)<<- .
.<<. /
sprite<</ 5
=<<6 7
Sprites<<8 ?
[<<? @
$num<<@ A
]<<A B
;<<B C

plantState== 
=== 

GameMaster== '
.==' (

PlantState==( 2
.==2 3
JustPlanted==3 >
;==> ?
}>> 
}?? 	
else@@ 
niceTimeAA 
=AA 
stringAA 
.AA 
FormatAA $
(AA$ %
$strAA% +
)AA+ ,
;AA, -
}BB 
publicDD 

voidDD 

resetTimerDD 
(DD 
)DD 
{EE 
timerFF 
=FF 
$numFF 
;FF 
}GG 
}HH ô
HC:\Users\Administrator\Desktop\git_wine\wine-game\Assets\Scripts\Slot.cs
public 
class 
Slot 
: 
MonoBehaviour !
,! " 
IPointerClickHandler# 7
{ 
public

 

Text

 
uiItemCount

 
;

 
public 

Text 

uiItemName 
; 
public 

Image 
	itemImage 
; 
private 
int 
	itemCount 
; 
private 
	Inventory 
	inventory 
;  
void 
Start	 
( 
) 
{ 
	inventory 
= 

GameObject 
. !
FindGameObjectWithTag 4
(4 5
$str5 B
)B C
.C D
GetComponentD P
<P Q
	InventoryQ Z
>Z [
([ \
)\ ]
;] ^
} 
void 
Update	 
( 
) 
{ 
	itemCount 
= 
	inventory 
. 
items #
[# $

uiItemName$ .
.. /
text/ 3
]3 4
.4 5
	itemCount5 >
;> ?
uiItemCount 
. 
text 
= 
	inventory $
.$ %
items% *
[* +

uiItemName+ 5
.5 6
text6 :
]: ;
.; <
	itemCount< E
.E F
ToStringF N
(N O
)O P
;P Q
	itemImage 
. 
sprite 
= 
	inventory $
.$ %
items% *
[* +

uiItemName+ 5
.5 6
text6 :
]: ;
.; <

ItemSprite< F
;F G
} 
void   
clearHighlight  	 
(   
)   
{!! 
foreach"" 
("" 

GameObject"" 
asd"" 
in""  "
	inventory""# ,
."", -
slots""- 2
)""2 3
{## 	
asd$$ 
.$$ 
GetComponent$$ 
<$$ 
Image$$ "
>$$" #
($$# $
)$$$ %
.$$% &
sprite$$& ,
=$$- .
	Resources$$/ 8
.$$8 9
Load$$9 =
<$$= >
Sprite$$> D
>$$D E
($$E F
$str$$F _
)$$_ `
;$$` a
}%% 	
}&& 
public)) 

void)) 
OnPointerClick)) 
()) 
PointerEventData)) /
data))0 4
)))4 5
{** 
clearHighlight++ 
(++ 
)++ 
;++ 
if,, 

(,, 
	inventory,, 
.,, 
items,, 
[,, 

uiItemName,, &
.,,& '
text,,' +
],,+ ,
!=,,- /
null,,0 4
),,4 5
{-- 	

gameObject.. 
... 
GetComponent.. #
<..# $
Image..$ )
>..) *
(..* +
)..+ ,
..., -
sprite..- 3
=..4 5
	Resources..6 ?
...? @
Load..@ D
<..D E
Sprite..E K
>..K L
(..L M
$str..M h
)..h i
;..i j

GameObject// 
.// !
FindGameObjectWithTag// ,
(//, -
$str//- :
)//: ;
.//; <
GetComponent//< H
<//H I

SlotScript//I S
>//S T
(//T U
)//U V
.//V W
seedName//W _
=//` a

uiItemName//b l
.//l m
text//m q
;//q r
}00 	
}11 
}22 Ø≥
NC:\Users\Administrator\Desktop\git_wine\wine-game\Assets\Scripts\SlotScript.cs
public		 
class		 

SlotScript		 
:		 
MonoBehaviour		 '
{

 
public 

static 
bool 
didPlant 
;  
public 

string 
seedName 
; 
public 

string !
currentlySelectedName '
;' (
private 
	Inventory 
	inventory 
;  
private 

GameObject 
guiTemp 
; 
private 
	GUIScript 
	guiScript 
;  

GameObject 
parent 
; 
PlantGround 
groundScript 
; 
FermentorScript 
fermentorScript #
;# $
ClarificationScript 
clarificationScript +
;+ ,
BottlingScript 
bottlingScript !
;! "
List 
< 	

GameObject	 
> 
vinePositions "
=# $
new% (
List) -
<- .

GameObject. 8
>8 9
(9 :
): ;
;; <

GameMaster 

gameMaster 
; 
void 
Awake	 
( 
) 
{   
guiTemp!! 
=!! 

GameObject!! 
.!! !
FindGameObjectWithTag!! 2
(!!2 3
$str!!3 D
)!!D E
;!!E F
	guiScript"" 
="" 
guiTemp"" 
."" 
GetComponent"" (
<""( )
	GUIScript"") 2
>""2 3
(""3 4
)""4 5
;""5 6
	inventory## 
=## 

GameObject## 
.## !
FindGameObjectWithTag## 4
(##4 5
$str##5 B
)##B C
.##C D
GetComponent##D P
<##P Q
	Inventory##Q Z
>##Z [
(##[ \
)##\ ]
;##] ^

gameMaster$$ 
=$$ 

GameObject$$ 
.$$  !
FindGameObjectWithTag$$  5
($$5 6
$str$$6 C
)$$C D
.$$D E
GetComponent$$E Q
<$$Q R

GameMaster$$R \
>$$\ ]
($$] ^
)$$^ _
;$$_ `
}%% 
public(( 

void(( 
Plant(( 
((( 
)(( 
{)) 
didPlant** 
=** 
false** 
;** 
parent,, 
=,, 
ColliderHandler,,  
.,,  !
parentGameObject,,! 1
;,,1 2
groundScript.. 
=.. 
parent.. 
... 
GetComponent.. *
<..* +
PlantGround..+ 6
>..6 7
(..7 8
)..8 9
;..9 :
if11 

(11 
	inventory11 
.11 
items11 
[11 
seedName11 $
]11$ %
.11% &
	itemCount11& /
>110 1
$num112 3
)113 4
{22 	
if44 
(44 
	inventory44 
.44 
items44 
[44  
seedName44  (
]44( )
.44) *
returnItemType44* 8
(448 9
)449 :
==44; =
Item44> B
.44B C
ItemType44C K
.44K L
VINE44L P
)44P Q
{55 
parent77 
.77 
tag77 
=77 
$str77 &
;77& '
groundScript88 
.88 

plantState88 '
=88( )

GameMaster88* 4
.884 5

PlantState885 ?
.88? @
JustPlanted88@ K
;88K L
groundScript99 
.99 
	plantName99 &
=99' (
	inventory99) 2
.992 3
items993 8
[998 9
seedName999 A
]99A B
.99B C

returnName99C M
(99M N
)99N O
;99O P
	guiScript:: 
.:: 
initializeInfoPanel:: -
(::- .
groundScript::. :
.::: ;
	plantName::; D
)::D E
;::E F
	inventory;; 
.;; 
items;; 
[;;  
seedName;;  (
];;( )
.;;) *
PopItem;;* 1
(;;1 2
);;2 3
;;;3 4
didPlant<< 
=<< 
true<< 
;<<  
}>> 
else?? 
{@@ 
DebugAA 
.AA 
LogAA 
(AA 
$strAA &
)AA& '
;AA' (
}BB 
}CC 	
elseDD 
{EE 	
DebugFF 
.FF 
LogFF 
(FF 
$strFF (
)FF( )
;FF) *
}GG 	
}HH 
publicKK 

voidKK 
HarvestKK 
(KK 
)KK 
{LL 
parentMM 
=MM 
ColliderHandlerMM  
.MM  !
parentGameObjectMM! 1
;MM1 2
groundScriptNN 
=NN 
parentNN 
.NN 
GetComponentNN *
<NN* +
PlantGroundNN+ 6
>NN6 7
(NN7 8
)NN8 9
;NN9 :
parentPP 
.PP 
tagPP 
=PP 
$strPP !
;PP! "
groundScriptQQ 
.QQ 

plantStateQQ 
=QQ  !

GameMasterQQ" ,
.QQ, -

PlantStateQQ- 7
.QQ7 8

NotPlantedQQ8 B
;QQB C!
currentlySelectedNameRR 
=RR 
groundScriptRR  ,
.RR, -
	plantNameRR- 6
;RR6 7
stringSS 
selectedGrapeSS 
=SS !
currentlySelectedNameSS 4
.SS4 5
SplitSS5 :
(SS: ;
$charSS; >
)SS> ?
[SS? @
$numSS@ A
]SSA B
+SSC D
$strSSE H
+SSI J!
currentlySelectedNameSSK `
.SS` a
SplitSSa f
(SSf g
$charSSg j
)SSj k
[SSk l
$numSSl m
]SSm n
;SSn o!
currentlySelectedNameTT 
=TT 
selectedGrapeTT  -
;TT- .
groundScriptUU 
.UU 
	plantNameUU 
=UU  
nullUU! %
;UU% &
	inventoryVV 
.VV 
itemsVV 
[VV !
currentlySelectedNameVV -
]VV- .
.VV. /
AddItemVV/ 6
(VV6 7
)VV7 8
;VV8 9
groundScriptWW 
.WW 

resetTimerWW 
(WW  
)WW  !
;WW! "
}XX 
public[[ 

void[[ 
selectGrape[[ 
([[ 
)[[ 
{\\ 
if]] 

(]] 
	inventory]] 
.]] 
items]] 
[]] 
seedName]] $
]]]$ %
.]]% &
	itemCount]]& /
>]]0 1
$num]]2 3
)]]3 4
{^^ 	
if__ 
(__ 
	inventory__ 
.__ 
items__ 
[__  
seedName__  (
]__( )
.__) *
iType__* /
==__0 2
Item__3 7
.__7 8
ItemType__8 @
.__@ A
GRAPE__A F
)__F G
{`` 
parentaa 
=aa 
ColliderHandleraa (
.aa( )
parentGameObjectaa) 9
;aa9 :!
currentlySelectedNamecc %
=cc& '
	inventorycc( 1
.cc1 2
itemscc2 7
[cc7 8
seedNamecc8 @
]cc@ A
.ccA B

returnNameccB L
(ccL M
)ccM N
;ccN O
	inventorydd 
.dd 
itemsdd 
[dd  !
currentlySelectedNamedd  5
]dd5 6
.dd6 7
PopItemdd7 >
(dd> ?
)dd? @
;dd@ A

GameObjectee 
grapeee  
=ee! "
	Resourcesee# ,
.ee, -
Loadee- 1
<ee1 2

GameObjectee2 <
>ee< =
(ee= >
$stree> E
)eeE F
;eeF G
grapeff 
.ff 
GetComponentff "
<ff" #
SpriteRendererff# 1
>ff1 2
(ff2 3
)ff3 4
.ff4 5
spriteff5 ;
=ff< =
	Resourcesff> G
.ffG H
LoadffH L
<ffL M
SpriteffM S
>ffS T
(ffT U!
currentlySelectedNameffU j
)ffj k
;ffk l
stringgg 
methodgg 
=gg 
parentgg  &
.gg& '

gameObjectgg' 1
.gg1 2
GetComponentgg2 >
<gg> ?
MethodCallerHandlergg? R
>ggR S
(ggS T
)ggT U
.ggU V

MethodNameggV `
=gga b
$strggc s
;ggs t
parenthh 
.hh 

gameObjecthh !
.hh! "
GetComponenthh" .
<hh. /
MethodCallerHandlerhh/ B
>hhB C
(hhC D
)hhD E
.hhE F

CallMethodhhF P
(hhP Q
)hhQ R
;hhR S
didPlantii 
=ii 
trueii 
;ii  
methodjj 
=jj 
parentjj 
.jj  

gameObjectjj  *
.jj* +
GetComponentjj+ 7
<jj7 8
MethodCallerHandlerjj8 K
>jjK L
(jjL M
)jjM N
.jjN O

MethodNamejjO Y
=jjZ [
$strjj\ k
;jjk l
}kk 
elsell 
{mm 
didPlantnn 
=nn 
falsenn  
;nn  !
Debugoo 
.oo 
Logoo 
(oo 
$stroo %
)oo% &
;oo& '
}pp 
}qq 	
elserr 
{ss 	
didPlanttt 
=tt 
falsett 
;tt 
Debuguu 
.uu 
Loguu 
(uu 
$struu "
)uu" #
;uu# $
}vv 	
}xx 
public{{ 

void{{ 
Ferment{{ 
({{ 
){{ 
{|| 
parent}} 
=}} 
ColliderHandler}}  
.}}  !
parentGameObject}}! 1
;}}1 2
fermentorScript~~ 
=~~ 
parent~~  
.~~  !
GetComponent~~! -
<~~- .
FermentorScript~~. =
>~~= >
(~~> ?
)~~? @
;~~@ A
parent 
. 
tag 
= 
$str !
;! "
fermentorScript
ÄÄ 
.
ÄÄ 
	grapeName
ÄÄ !
=
ÄÄ" ##
currentlySelectedName
ÄÄ$ 9
;
ÄÄ9 :
string
ÅÅ 
selectedGrape
ÅÅ 
=
ÅÅ #
currentlySelectedName
ÅÅ 4
.
ÅÅ4 5
Split
ÅÅ5 :
(
ÅÅ: ;
$char
ÅÅ; >
)
ÅÅ> ?
[
ÅÅ? @
$num
ÅÅ@ A
]
ÅÅA B
+
ÅÅC D
$str
ÅÅE H
+
ÅÅI J#
currentlySelectedName
ÅÅK `
.
ÅÅ` a
Split
ÅÅa f
(
ÅÅf g
$char
ÅÅg j
)
ÅÅj k
[
ÅÅk l
$num
ÅÅl m
]
ÅÅm n
;
ÅÅn o#
currentlySelectedName
ÇÇ 
=
ÇÇ 
selectedGrape
ÇÇ  -
;
ÇÇ- .
if
ÉÉ 

(
ÉÉ #
currentlySelectedName
ÉÉ !
==
ÉÉ" $
$str
ÉÉ% 2
)
ÉÉ2 3
{
ÑÑ 	
fermentorScript
ÖÖ 
.
ÖÖ 
WineType
ÖÖ $
=
ÖÖ% &

GameMaster
ÖÖ' 1
.
ÖÖ1 2
Winetype
ÖÖ2 :
.
ÖÖ: ;
	WhiteWine
ÖÖ; D
;
ÖÖD E
}
ÜÜ 	
else
áá 
fermentorScript
àà 
.
àà 
WineType
àà $
=
àà% &

GameMaster
àà' 1
.
àà1 2
Winetype
àà2 :
.
àà: ;
RedWine
àà; B
;
ààB C
fermentorScript
ââ 
.
ââ 
FermentationState
ââ )
=
ââ* +

GameMaster
ââ, 6
.
ââ6 7
FermentationState
ââ7 H
.
ââH I

Fermenting
ââI S
;
ââS T
fermentorScript
ää 
.
ää 
Timer
ää 
=
ää 
$num
ää  !
;
ää! "
fermentorScript
ãã 
.
ãã 
isFermenting
ãã $
=
ãã% &
true
ãã' +
;
ãã+ ,
}
åå 
public
èè 

void
èè 
Collect
èè 
(
èè 
)
èè 
{
êê 
parent
ëë 
=
ëë 
ColliderHandler
ëë  
.
ëë  !
parentGameObject
ëë! 1
;
ëë1 2
if
íí 

(
íí 
parent
íí 
.
íí 
tag
íí 
==
íí 
$str
íí &
)
íí& '
{
ìì 	
fermentorScript
îî 
=
îî 
parent
îî $
.
îî$ %
GetComponent
îî% 1
<
îî1 2
FermentorScript
îî2 A
>
îîA B
(
îîB C
)
îîC D
;
îîD E
parent
ïï 
.
ïï 
tag
ïï 
=
ïï 
$str
ïï (
;
ïï( )
	inventory
ññ 
.
ññ 
items
ññ 
[
ññ 

gameMaster
ññ &
.
ññ& '
GetDescription
ññ' 5
(
ññ5 6
fermentorScript
ññ6 E
.
ññE F
WineType
ññF N
)
ññN O
]
ññO P
.
ññP Q
AddItem
ññQ X
(
ññX Y
)
ññY Z
;
ññZ [
fermentorScript
óó 
.
óó 
FermentationState
óó -
=
óó. /

GameMaster
óó0 :
.
óó: ;
FermentationState
óó; L
.
óóL M
NotFermentating
óóM \
;
óó\ ]
fermentorScript
òò 
.
òò 
isFermenting
òò (
=
òò) *
false
òò+ 0
;
òò0 1
fermentorScript
ôô 
.
ôô 
	grapeName
ôô %
=
ôô& '
null
ôô( ,
;
ôô, -
fermentorScript
öö 
.
öö 
Timer
öö !
=
öö" #
$num
öö$ %
;
öö% &
}
õõ 	
else
úú 
if
úú 
(
úú 
parent
úú 
.
úú 
tag
úú 
==
úú 
$str
úú .
)
úú. /
{
ùù 	!
clarificationScript
ûû 
=
ûû  !
parent
ûû" (
.
ûû( )
GetComponent
ûû) 5
<
ûû5 6!
ClarificationScript
ûû6 I
>
ûûI J
(
ûûJ K
)
ûûK L
;
ûûL M
parent
üü 
.
üü 
tag
üü 
=
üü 
$str
üü +
;
üü+ ,!
clarificationScript
†† 
.
††   
clarificationState
††  2
=
††3 4

GameMaster
††5 ?
.
††? @ 
ClarificationState
††@ R
.
††R S
NotClarificating
††S c
;
††c d
	inventory
°° 
.
°° 
items
°° 
[
°° !
clarificationScript
°° /
.
°°/ 0
wineName
°°0 8
]
°°8 9
.
°°9 :
AddItem
°°: A
(
°°A B
)
°°B C
;
°°C D!
clarificationScript
¢¢ 
.
¢¢  
wineName
¢¢  (
=
¢¢) *
null
¢¢+ /
;
¢¢/ 0!
clarificationScript
££ 
.
££  
Timer
££  %
=
££& '
$num
££( )
;
££) *
}
§§ 	
else
•• 
if
•• 
(
•• 
parent
•• 
.
•• 
tag
•• 
==
•• 
$str
•• )
)
••) *
{
¶¶ 	
bottlingScript
ßß 
=
ßß 
parent
ßß #
.
ßß# $
GetComponent
ßß$ 0
<
ßß0 1
BottlingScript
ßß1 ?
>
ßß? @
(
ßß@ A
)
ßßA B
;
ßßB C
parent
®® 
.
®® 
tag
®® 
=
®® 
$str
®® &
;
®®& '
bottlingScript
©© 
.
©© 
bottlingState
©© (
=
©©) *

GameMaster
©©+ 5
.
©©5 6
BottlingState
©©6 C
.
©©C D
NotBottling
©©D O
;
©©O P
	inventory
™™ 
.
™™ 
items
™™ 
[
™™ 
$str
™™ $
]
™™$ %
.
™™% &
AddItem
™™& -
(
™™- .
)
™™. /
;
™™/ 0
bottlingScript
´´ 
.
´´ 
wineName
´´ #
=
´´$ %
null
´´& *
;
´´* +
bottlingScript
¨¨ 
.
¨¨ 
Timer
¨¨  
=
¨¨! "
$num
¨¨# $
;
¨¨$ %
}
≠≠ 	
}
ÆÆ 
public
±± 

void
±± 
Clarificate
±± 
(
±± 
)
±± 
{
≤≤ 
parent
≥≥ 
=
≥≥ 
ColliderHandler
≥≥  
.
≥≥  !
parentGameObject
≥≥! 1
;
≥≥1 2!
clarificationScript
¥¥ 
=
¥¥ 
parent
¥¥ $
.
¥¥$ %
GetComponent
¥¥% 1
<
¥¥1 2!
ClarificationScript
¥¥2 E
>
¥¥E F
(
¥¥F G
)
¥¥G H
;
¥¥H I
if
∂∂ 

(
∂∂ 
	inventory
∂∂ 
.
∂∂ 
items
∂∂ 
[
∂∂ 
seedName
∂∂ $
]
∂∂$ %
.
∂∂% &
	itemCount
∂∂& /
>
∂∂0 1
$num
∂∂2 3
)
∂∂3 4
{
∑∑ 	
if
∏∏ 
(
∏∏ 
	inventory
∏∏ 
.
∏∏ 
items
∏∏ 
[
∏∏  
seedName
∏∏  (
]
∏∏( )
.
∏∏) *
iType
∏∏* /
==
∏∏0 2
Item
∏∏3 7
.
∏∏7 8
ItemType
∏∏8 @
.
∏∏@ A
WINE
∏∏A E
)
∏∏E F
{
ππ 
parent
∫∫ 
.
∫∫ 
tag
∫∫ 
=
∫∫ 
$str
∫∫ ,
;
∫∫, -#
currentlySelectedName
ªª %
=
ªª& '
	inventory
ªª( 1
.
ªª1 2
items
ªª2 7
[
ªª7 8
seedName
ªª8 @
]
ªª@ A
.
ªªA B

returnName
ªªB L
(
ªªL M
)
ªªM N
;
ªªN O!
clarificationScript
ºº #
.
ºº# $
wineName
ºº$ ,
=
ºº- .#
currentlySelectedName
ºº/ D
;
ººD E
	inventory
ΩΩ 
.
ΩΩ 
items
ΩΩ 
[
ΩΩ  #
currentlySelectedName
ΩΩ  5
]
ΩΩ5 6
.
ΩΩ6 7
PopItem
ΩΩ7 >
(
ΩΩ> ?
)
ΩΩ? @
;
ΩΩ@ A
	guiScript
ææ 
.
ææ !
initializeInfoPanel
ææ -
(
ææ- .!
clarificationScript
ææ. A
.
ææA B
wineName
ææB J
)
ææJ K
;
ææK L!
clarificationScript
øø #
.
øø# $ 
clarificationState
øø$ 6
=
øø7 8

GameMaster
øø9 C
.
øøC D 
ClarificationState
øøD V
.
øøV W
Clarificating
øøW d
;
øød e!
clarificationScript
¿¿ #
.
¿¿# $
Timer
¿¿$ )
=
¿¿* +
$num
¿¿, .
;
¿¿. /
didPlant
¡¡ 
=
¡¡ 
true
¡¡ 
;
¡¡  
}
¬¬ 
else
√√ 
{
ƒƒ 
didPlant
≈≈ 
=
≈≈ 
false
≈≈  
;
≈≈  !
Debug
∆∆ 
.
∆∆ 
Log
∆∆ 
(
∆∆ 
$str
∆∆ $
)
∆∆$ %
;
∆∆% &
}
«« 
}
»» 	
else
…… 
{
   	
didPlant
ÀÀ 
=
ÀÀ 
false
ÀÀ 
;
ÀÀ 
Debug
ÃÃ 
.
ÃÃ 
Log
ÃÃ 
(
ÃÃ 
$str
ÃÃ "
)
ÃÃ" #
;
ÃÃ# $
}
ÕÕ 	
}
ŒŒ 
public
—— 

void
—— 
Bottling
—— 
(
—— 
)
—— 
{
““ 
parent
”” 
=
”” 
ColliderHandler
””  
.
””  !
parentGameObject
””! 1
;
””1 2
bottlingScript
‘‘ 
=
‘‘ 
parent
‘‘ 
.
‘‘  
GetComponent
‘‘  ,
<
‘‘, -
BottlingScript
‘‘- ;
>
‘‘; <
(
‘‘< =
)
‘‘= >
;
‘‘> ?
if
÷÷ 

(
÷÷ 
	inventory
÷÷ 
.
÷÷ 
items
÷÷ 
[
÷÷ 
seedName
÷÷ $
]
÷÷$ %
.
÷÷% &
	itemCount
÷÷& /
>
÷÷0 1
$num
÷÷2 3
)
÷÷3 4
{
◊◊ 	
if
ÿÿ 
(
ÿÿ 
	inventory
ÿÿ 
.
ÿÿ 
items
ÿÿ 
[
ÿÿ  
seedName
ÿÿ  (
]
ÿÿ( )
.
ÿÿ) *
iType
ÿÿ* /
==
ÿÿ0 2
Item
ÿÿ3 7
.
ÿÿ7 8
ItemType
ÿÿ8 @
.
ÿÿ@ A
WINE
ÿÿA E
)
ÿÿE F
{
ŸŸ 
parent
⁄⁄ 
.
⁄⁄ 
tag
⁄⁄ 
=
⁄⁄ 
$str
⁄⁄ '
;
⁄⁄' (#
currentlySelectedName
€€ %
=
€€& '
	inventory
€€( 1
.
€€1 2
items
€€2 7
[
€€7 8
seedName
€€8 @
]
€€@ A
.
€€A B

returnName
€€B L
(
€€L M
)
€€M N
;
€€N O
bottlingScript
‹‹ 
.
‹‹ 
wineName
‹‹ '
=
‹‹( )#
currentlySelectedName
‹‹* ?
;
‹‹? @
	inventory
›› 
.
›› 
items
›› 
[
››  #
currentlySelectedName
››  5
]
››5 6
.
››6 7
PopItem
››7 >
(
››> ?
)
››? @
;
››@ A
	guiScript
ﬁﬁ 
.
ﬁﬁ !
initializeInfoPanel
ﬁﬁ -
(
ﬁﬁ- .
bottlingScript
ﬁﬁ. <
.
ﬁﬁ< =
wineName
ﬁﬁ= E
)
ﬁﬁE F
;
ﬁﬁF G
bottlingScript
ﬂﬂ 
.
ﬂﬂ 
bottlingState
ﬂﬂ ,
=
ﬂﬂ- .

GameMaster
ﬂﬂ/ 9
.
ﬂﬂ9 :
BottlingState
ﬂﬂ: G
.
ﬂﬂG H
Bottling
ﬂﬂH P
;
ﬂﬂP Q
bottlingScript
‡‡ 
.
‡‡ 
Timer
‡‡ $
=
‡‡% &
$num
‡‡' )
;
‡‡) *
didPlant
·· 
=
·· 
true
·· 
;
··  
}
‚‚ 
else
„„ 
{
‰‰ 
didPlant
ÂÂ 
=
ÂÂ 
false
ÂÂ  
;
ÂÂ  !
Debug
ÊÊ 
.
ÊÊ 
Log
ÊÊ 
(
ÊÊ 
$str
ÊÊ $
)
ÊÊ$ %
;
ÊÊ% &
}
ÁÁ 
}
ËË 	
else
ÈÈ 
{
ÍÍ 	
didPlant
ÎÎ 
=
ÎÎ 
false
ÎÎ 
;
ÎÎ 
Debug
ÏÏ 
.
ÏÏ 
Log
ÏÏ 
(
ÏÏ 
$str
ÏÏ "
)
ÏÏ" #
;
ÏÏ# $
}
ÌÌ 	
}
ÓÓ 
}ÔÔ ˛
OC:\Users\Administrator\Desktop\git_wine\wine-game\Assets\Scripts\grapeScript.cs
public 
class 
grapeScript 
: 
MonoBehaviour (
{		 
private

 

GameObject

 
temp

 
;

 
private 
CrushScript 
crushScript #
;# $
private 
void 
Awake 
( 
) 
{ 
temp 
= 

GameObject 
. 
Find 
( 
$str 1
)1 2
;2 3
} 
private 
void 
Update 
( 
) 
{ 
crushScript 
= 
temp 
. 
GetComponent '
<' (
CrushScript( 3
>3 4
(4 5
)5 6
;6 7
} 
private 
void 
OnCollisionEnter2D #
(# $
Collision2D$ /
	collision0 9
)9 :
{ 
if 

( 
	collision 
. 

gameObject  
.  !
tag! $
==% '
$str( 4
)4 5
{ 	
crushScript 
. 
missedGrapes $
++$ &
;& '
Destroy 
( 

gameObject 
) 
;  
} 	
} 
} í
sC:\Users\Administrator\Desktop\git_wine\wine-game\Assets\Tiled2Unity\Scripts\Editor\CustomTiledImporterAttribute.cs
	namespace		 	
Tiled2Unity		
 
{

 
[ 
AttributeUsage 
( 
System 
. 
AttributeTargets +
.+ ,
Class, 1
,1 2
AllowMultiple3 @
=A B
falseC H
)H I
]I J
public 

class (
CustomTiledImporterAttribute -
:. /
System0 6
.6 7
	Attribute7 @
{ 
public 
int 
Order 
{ 
get 
; 
set  #
;# $
}% &
} 
} ÷
kC:\Users\Administrator\Desktop\git_wine\wine-game\Assets\Tiled2Unity\Scripts\Editor\ICustomTiledImporter.cs
	namespace 	
Tiled2Unity
 
{		 
public

 

	interface

  
ICustomTiledImporter

 )
{ 
void "
HandleCustomProperties #
(# $

GameObject$ .

gameObject/ 9
,9 :
IDictionary; F
<F G
stringG M
,M N
stringO U
>U V
customPropertiesW g
)g h
;h i
void 
CustomizePrefab 
( 

GameObject '
prefab( .
). /
;/ 0
} 
} œu
qC:\Users\Administrator\Desktop\git_wine\wine-game\Assets\Tiled2Unity\Scripts\Editor\ImportTiled2Unity.Material.cs
	namespace 	
Tiled2Unity
 
{ 
partial 
class 
ImportTiled2Unity #
{ 
public 
void 
MaterialImported $
($ %
string% +
materialPath, 8
)8 9
{ 	
string 
asset 
= 
System !
.! "
IO" $
.$ %
Path% )
.) *
GetFileName* 5
(5 6
materialPath6 B
)B C
;C D
foreach 
( 
var 
importComponent (
in) +
ImportBehaviour, ;
.; <6
*EnumerateImportBehaviors_ByWaitingMaterial< f
(f g
assetg l
)l m
)m n
{ 
if 
( 
! 
importComponent $
.$ %$
ImportComplete_Materials% =
.= >
Contains> F
(F G
assetG L
,L M
StringComparerN \
.\ ]
OrdinalIgnoreCase] n
)n o
)o p
{ 
importComponent #
.# $$
ImportComplete_Materials$ <
.< =
Add= @
(@ A
assetA F
)F G
;G H
}   
if## 
(## 
importComponent## #
.### $(
IsMaterialImportingCompleted##$ @
(##@ A
)##A B
)##B C
{$$ 
ImportAllMeshes%% #
(%%# $
importComponent%%$ 3
)%%3 4
;%%4 5
}&& 
}'' 
}(( 	
public,, 
UnityEngine,, 
.,, 
Material,, #&
FixMaterialForMeshRenderer,,$ >
(,,> ?
string,,? E
objName,,F M
,,,M N
Renderer,,O W
renderer,,X `
),,` a
{-- 	
string// 
	assetName// 
=// 
objName// &
+//' (
$str//) /
;/// 0
ImportBehaviour00 
importBehavior00 *
=00+ ,
ImportBehaviour00- <
.00< =,
 FindImportBehavior_ByWaitingMesh00= ]
(00] ^
	assetName00^ g
)00g h
;00h i
string33 
meshName33 
=33 
renderer33 &
.33& '
name33' +
;33+ ,
var66 
assignMaterials66 
=66  !
importBehavior66" 0
.660 1
XmlDocument661 <
.66< =
Root66= A
.66A B
Elements66B J
(66J K
$str66K [
)66[ \
;66\ ]
XElement77 
match77 
=77 
assignMaterials77 ,
.77, -
FirstOrDefault77- ;
(77; <
el77< >
=>77? A
el77B D
.77D E
	Attribute77E N
(77N O
$str77O U
)77U V
.77V W
Value77W \
==77] _
meshName77` h
)77h i
;77i j
if99 
(99 
match99 
==99 
null99 
)99 
{:: 
StringBuilder>> 
builder>> %
=>>& '
new>>( +
StringBuilder>>, 9
(>>9 :
)>>: ;
;>>; <
builder?? 
.?? 
AppendFormat?? $
(??$ %
$str??% ^
,??^ _
renderer??` h
.??h i
name??i m
)??m n
;??n o
string@@ 
choices@@ 
=@@  
String@@! '
.@@' (
Join@@( ,
(@@, -
$str@@- 3
,@@3 4
assignMaterials@@5 D
.@@D E
Select@@E K
(@@K L
m@@L M
=>@@N P
m@@Q R
.@@R S
	Attribute@@S \
(@@\ ]
$str@@] c
)@@c d
.@@d e
Value@@e j
)@@j k
.@@k l
ToArray@@l s
(@@s t
)@@t u
)@@u v
;@@v w
builderAA 
.AA 
AppendFormatAA $
(AA$ %
$strAA% :
,AA: ;
choicesAA< C
)AAC D
;AAD E
importBehaviorCC 
.CC 
RecordErrorCC *
(CC* +
builderCC+ 2
.CC2 3
ToStringCC3 ;
(CC; <
)CC< =
)CC= >
;CC> ?
returnDD 
nullDD 
;DD 
}EE 
stringGG 
materialNameGG 
=GG  !
matchGG" '
.GG' (
	AttributeGG( 1
(GG1 2
$strGG2 <
)GG< =
.GG= >
ValueGG> C
+GGD E
$strGGF L
;GGL M
stringHH 
materialPathHH 
=HH  !(
GetExistingMaterialAssetPathHH" >
(HH> ?
materialNameHH? K
)HHK L
;HHL M
UnityEngineKK 
.KK 
MaterialKK  
materialKK! )
=KK* +
AssetDatabaseKK, 9
.KK9 :
LoadAssetAtPathKK: I
(KKI J
materialPathKKJ V
,KKV W
typeofKKX ^
(KK^ _
UnityEngineKK_ j
.KKj k
MaterialKKk s
)KKs t
)KKt u
asKKv x
UnityEngine	KKy Ñ
.
KKÑ Ö
Material
KKÖ ç
;
KKç é
ifLL 
(LL 
materialLL 
==LL 
nullLL  
)LL  !
{MM 
importBehaviorNN 
.NN 
RecordErrorNN *
(NN* +
$strNN+ I
,NNI J
materialNameNNK W
)NNW X
;NNX Y
}OO 
returnQQ 
materialQQ 
;QQ 
}RR 	
privateTT 
voidTT 
ImportAllMaterialsTT '
(TT' (
Tiled2UnityTT( 3
.TT3 4
ImportBehaviourTT4 C
importComponentTTD S
)TTS T
{UU 	
foreachWW 
(WW 
varWW 

xmlTextureWW #
inWW$ &
importComponentWW' 6
.WW6 7
XmlDocumentWW7 B
.WWB C
RootWWC G
.WWG H
ElementsWWH P
(WWP Q
$strWWQ `
)WW` a
)WWa b
{XX 
boolYY 

isResourceYY 
=YY  !
ImportUtilsYY" -
.YY- .!
GetAttributeAsBooleanYY. C
(YYC D

xmlTextureYYD N
,YYN O
$strYYP \
,YY\ ]
falseYY^ c
)YYc d
;YYd e
string[[ 
textureFile[[ "
=[[# $
ImportUtils[[% 0
.[[0 1 
GetAttributeAsString[[1 E
([[E F

xmlTexture[[F P
,[[P Q
$str[[R \
)[[\ ]
;[[] ^
string\\ 
materialPath\\ #
=\\$ %!
MakeMaterialAssetPath\\& ;
(\\; <
textureFile\\< G
,\\G H

isResource\\I S
)\\S T
;\\T U
string]] 
materialFile]] #
=]]$ %
System]]& ,
.]], -
IO]]- /
.]]/ 0
Path]]0 4
.]]4 5
GetFileName]]5 @
(]]@ A
materialPath]]A M
)]]M N
;]]N O
if`` 
(`` 
!`` 
importComponent`` $
.``$ % 
ImportWait_Materials``% 9
.``9 :
Contains``: B
(``B C
materialFile``C O
,``O P
StringComparer``Q _
.``_ `
OrdinalIgnoreCase``` q
)``q r
)``r s
{aa 
importComponentbb #
.bb# $ 
ImportWait_Materialsbb$ 8
.bb8 9
Addbb9 <
(bb< =
materialFilebb= I
)bbI J
;bbJ K
}cc 
UnityEngineff 
.ff 
Materialff $
materialff% -
=ff. /!
CreateMaterialFromXmlff0 E
(ffE F

xmlTextureffF P
,ffP Q
importComponentffR a
)ffa b
;ffb c
{ii 
stringjj 
textureAssetjj '
=jj( )
GetTextureAssetPathjj* =
(jj= >
textureFilejj> I
)jjI J
;jjJ K(
AssignTextureAssetToMaterialkk 0
(kk0 1
materialkk1 9
,kk9 :
materialFilekk; G
,kkG H
textureAssetkkI U
,kkU V
importComponentkkW f
)kkf g
;kkg h
}ll 
ImportUtilsnn 
.nn 
ReadyToWritenn (
(nn( )
materialPathnn) 5
)nn5 6
;nn6 7
ImportUtilsoo 
.oo  
CreateOrReplaceAssetoo 0
(oo0 1
materialoo1 9
,oo9 :
materialPathoo; G
)ooG H
;ooH I
importComponentpp 
.pp  "
ImportTiled2UnityAssetpp  6
(pp6 7
materialPathpp7 C
)ppC D
;ppD E
}qq 
foreachtt 
(tt 
vartt 
xmlInternaltt $
intt% '
importComponenttt( 7
.tt7 8
XmlDocumenttt8 C
.ttC D
RootttD H
.ttH I
ElementsttI Q
(ttQ R
$strttR c
)ttc d
)ttd e
{uu 
boolvv 

isResourcevv 
=vv  !
ImportUtilsvv" -
.vv- .!
GetAttributeAsBooleanvv. C
(vvC D
xmlInternalvvD O
,vvO P
$strvvQ ]
,vv] ^
falsevv_ d
)vvd e
;vve f
stringxx 
textureAssetxx #
=xx$ %
ImportUtilsxx& 1
.xx1 2 
GetAttributeAsStringxx2 F
(xxF G
xmlInternalxxG R
,xxR S
$strxxT _
)xx_ `
;xx` a
stringyy 
textureFileyy "
=yy# $
Systemyy% +
.yy+ ,
IOyy, .
.yy. /
Pathyy/ 3
.yy3 4
GetFileNameyy4 ?
(yy? @
textureAssetyy@ L
)yyL M
;yyM N
stringzz 
materialPathzz #
=zz$ %!
MakeMaterialAssetPathzz& ;
(zz; <
textureFilezz< G
,zzG H

isResourcezzI S
)zzS T
;zzT U
string}} 
uniqueMaterialName}} )
=}}* +
ImportUtils}}, 7
.}}7 8 
GetAttributeAsString}}8 L
(}}L M
xmlInternal}}M X
,}}X Y
$str}}Z h
,}}h i
$str}}j l
)}}l m
;}}m n
if~~ 
(~~ 
!~~ 
String~~ 
.~~ 
IsNullOrEmpty~~ )
(~~) *
uniqueMaterialName~~* <
)~~< =
)~~= >
{ 
materialPath
ÄÄ  
=
ÄÄ! "
String
ÄÄ# )
.
ÄÄ) *
Format
ÄÄ* 0
(
ÄÄ0 1
$str
ÄÄ1 =
,
ÄÄ= >
Path
ÄÄ? C
.
ÄÄC D
GetDirectoryName
ÄÄD T
(
ÄÄT U
materialPath
ÄÄU a
)
ÄÄa b
,
ÄÄb c 
uniqueMaterialName
ÄÄd v
,
ÄÄv w
Path
ÄÄx |
.
ÄÄ| }
GetExtensionÄÄ} â
(ÄÄâ ä
materialPathÄÄä ñ
)ÄÄñ ó
)ÄÄó ò
;ÄÄò ô
}
ÅÅ 
string
ÉÉ 
materialFile
ÉÉ #
=
ÉÉ$ %
System
ÉÉ& ,
.
ÉÉ, -
IO
ÉÉ- /
.
ÉÉ/ 0
Path
ÉÉ0 4
.
ÉÉ4 5
GetFileName
ÉÉ5 @
(
ÉÉ@ A
materialPath
ÉÉA M
)
ÉÉM N
;
ÉÉN O
if
ÜÜ 
(
ÜÜ 
!
ÜÜ 
importComponent
ÜÜ $
.
ÜÜ$ %"
ImportWait_Materials
ÜÜ% 9
.
ÜÜ9 :
Contains
ÜÜ: B
(
ÜÜB C
materialFile
ÜÜC O
,
ÜÜO P
StringComparer
ÜÜQ _
.
ÜÜ_ `
OrdinalIgnoreCase
ÜÜ` q
)
ÜÜq r
)
ÜÜr s
{
áá 
importComponent
àà #
.
àà# $"
ImportWait_Materials
àà$ 8
.
àà8 9
Add
àà9 <
(
àà< =
materialFile
àà= I
)
ààI J
;
ààJ K
}
ââ 
UnityEngine
åå 
.
åå 
Material
åå $
material
åå% -
=
åå. /#
CreateMaterialFromXml
åå0 E
(
ååE F
xmlInternal
ååF Q
,
ååQ R
importComponent
ååS b
)
ååb c
;
ååc d*
AssignTextureAssetToMaterial
çç ,
(
çç, -
material
çç- 5
,
çç5 6
materialFile
çç7 C
,
ççC D
textureAsset
ççE Q
,
ççQ R
importComponent
ççS b
)
ççb c
;
ççc d
ImportUtils
èè 
.
èè 
ReadyToWrite
èè (
(
èè( )
materialPath
èè) 5
)
èè5 6
;
èè6 7
ImportUtils
êê 
.
êê "
CreateOrReplaceAsset
êê 0
(
êê0 1
material
êê1 9
,
êê9 :
materialPath
êê; G
)
êêG H
;
êêH I
importComponent
ëë 
.
ëë  $
ImportTiled2UnityAsset
ëë  6
(
ëë6 7
materialPath
ëë7 C
)
ëëC D
;
ëëD E
}
íí 
if
ïï 
(
ïï 
importComponent
ïï 
.
ïï  "
ImportWait_Materials
ïï  4
.
ïï4 5
Count
ïï5 :
(
ïï: ;
)
ïï; <
==
ïï= ?
$num
ïï@ A
)
ïïA B
{
ññ 
ImportAllMeshes
óó 
(
óó  
importComponent
óó  /
)
óó/ 0
;
óó0 1
}
òò 
}
ôô 	
private
õõ 
void
õõ *
AssignTextureAssetToMaterial
õõ 1
(
õõ1 2
Material
õõ2 :
material
õõ; C
,
õõC D
string
õõE K
materialFile
õõL X
,
õõX Y
string
õõZ `
textureAsset
õõa m
,
õõm n
ImportBehaviour
õõo ~
importComponentõõ é
)õõé è
{
úú 	
	Texture2D
ùù 
	texture2d
ùù 
=
ùù  !
AssetDatabase
ùù" /
.
ùù/ 0
LoadAssetAtPath
ùù0 ?
(
ùù? @
textureAsset
ùù@ L
,
ùùL M
typeof
ùùN T
(
ùùT U
	Texture2D
ùùU ^
)
ùù^ _
)
ùù_ `
as
ùùa c
	Texture2D
ùùd m
;
ùùm n
if
ûû 
(
ûû 
	texture2d
ûû 
==
ûû 
null
ûû !
)
ûû! "
{
üü 
importComponent
†† 
.
††  
RecordError
††  +
(
††+ ,
$str
††, g
,
††g h
materialFile
††i u
,
††u v
textureAsset††w É
)††É Ñ
;††Ñ Ö
}
°° 
material
¢¢ 
.
¢¢ 

SetTexture
¢¢ 
(
¢¢  
$str
¢¢  *
,
¢¢* +
	texture2d
¢¢, 5
)
¢¢5 6
;
¢¢6 7
}
££ 	
}
§§ 
}•• ≈#
mC:\Users\Administrator\Desktop\git_wine\wine-game\Assets\Tiled2Unity\Scripts\Editor\ImportTiled2Unity.Mesh.cs
	namespace 	
Tiled2Unity
 
{ 
partial 
class 
ImportTiled2Unity #
{ 
public 
void 
MeshImported  
(  !
string! '
objPath( /
)/ 0
{ 	
string 
asset 
= 
System !
.! "
IO" $
.$ %
Path% )
.) *
GetFileName* 5
(5 6
objPath6 =
)= >
;> ?
ImportBehaviour 
importComponent +
=, -
ImportBehaviour. =
.= >,
 FindImportBehavior_ByWaitingMesh> ^
(^ _
asset_ d
)d e
;e f
if 
( 
importComponent 
!=  "
null# '
)' (
{ 
if 
( 
! 
importComponent $
.$ %!
ImportComplete_Meshes% :
.: ;
Contains; C
(C D
assetD I
,I J
StringComparerK Y
.Y Z
OrdinalIgnoreCaseZ k
)k l
)l m
{ 
importComponent #
.# $!
ImportComplete_Meshes$ 9
.9 :
Add: =
(= >
asset> C
)C D
;D E
}   
if## 
(## 
importComponent## #
.### $$
IsMeshImportingCompleted##$ <
(##< =
)##= >
)##> ?
{$$ 
ImportAllPrefabs%% $
(%%$ %
importComponent%%% 4
,%%4 5
objPath%%6 =
)%%= >
;%%> ?
}&& 
}'' 
}(( 	
private** 
void** 
ImportAllMeshes** $
(**$ %
Tiled2Unity**% 0
.**0 1
ImportBehaviour**1 @
importComponent**A P
)**P Q
{++ 	
foreach,, 
(,, 
var,, 
xmlMesh,,  
in,,! #
importComponent,,$ 3
.,,3 4
XmlDocument,,4 ?
.,,? @
Root,,@ D
.,,D E
Elements,,E M
(,,M N
$str,,N Z
),,Z [
),,[ \
{-- 
string00 
file00 
=00 
ImportUtils00 )
.00) * 
GetAttributeAsString00* >
(00> ?
xmlMesh00? F
,00F G
$str00H R
)00R S
;00S T
string11 
data11 
=11 
xmlMesh11 %
.11% &
Value11& +
;11+ ,
if44 
(44 
!44 
importComponent44 $
.44$ %
ImportWait_Meshes44% 6
.446 7
Contains447 ?
(44? @
file44@ D
,44D E
StringComparer44F T
.44T U
OrdinalIgnoreCase44U f
)44f g
)44g h
{55 
importComponent66 #
.66# $
ImportWait_Meshes66$ 5
.665 6
Add666 9
(669 :
file66: >
)66> ?
;66? @
}77 
string:: 
raw:: 
=:: 
ImportUtils:: (
.::( )
Base64ToString::) 7
(::7 8
data::8 <
)::< =
;::= >
string== 

pathToMesh== !
===" #
GetMeshAssetPath==$ 4
(==4 5
file==5 9
)==9 :
;==: ;
ImportUtils>> 
.>> 
ReadyToWrite>> (
(>>( )

pathToMesh>>) 3
)>>3 4
;>>4 5
File?? 
.?? 
WriteAllText?? !
(??! "

pathToMesh??" ,
,??, -
raw??. 1
,??1 2
Encoding??3 ;
.??; <
UTF8??< @
)??@ A
;??A B
importComponent@@ 
.@@  "
ImportTiled2UnityAsset@@  6
(@@6 7

pathToMesh@@7 A
)@@A B
;@@B C
}AA 
ifDD 
(DD 
importComponentDD 
.DD  
ImportWait_MeshesDD  1
.DD1 2
CountDD2 7
(DD7 8
)DD8 9
==DD: <
$numDD= >
)DD> ?
{EE 
ImportAllPrefabsFF  
(FF  !
importComponentFF! 0
,FF0 1
nullFF2 6
)FF6 7
;FF7 8
}GG 
}HH 	
}JJ 
}KK ‹ã
oC:\Users\Administrator\Desktop\git_wine\wine-game\Assets\Tiled2Unity\Scripts\Editor\ImportTiled2Unity.Prefab.cs
	namespace 	
Tiled2Unity
 
{ 
partial 
class 
ImportTiled2Unity #
{ 
public 
void 
PrefabImported "
(" #
string# )

prefabPath* 4
)4 5
{ 	
string 
asset 
= 
System !
.! "
IO" $
.$ %
Path% )
.) *
GetFileName* 5
(5 6

prefabPath6 @
)@ A
;A B
ImportBehaviour 
importComponent +
=, -
ImportBehaviour. =
.= >.
"FindImportBehavior_ByWaitingPrefab> `
(` a
asseta f
)f g
;g h
if 
( 
importComponent 
!=  "
null# '
)' (
{ 
if 
( 
! 
importComponent $
.$ %"
ImportComplete_Prefabs% ;
.; <
Contains< D
(D E
assetE J
,J K
StringComparerL Z
.Z [
OrdinalIgnoreCase[ l
)l m
)m n
{ 
importComponent #
.# $"
ImportComplete_Prefabs$ :
.: ;
Add; >
(> ?
asset? D
)D E
;E F
} 
if"" 
("" 
importComponent"" #
.""# $&
IsPrefabImportingCompleted""$ >
(""> ?
)""? @
)""@ A
{## 
importComponent$$ #
.$$# $
ReportPrefabImport$$$ 6
($$6 7

prefabPath$$7 A
)$$A B
;$$B C
importComponent%% #
.%%# $"
DestroyImportBehaviour%%$ :
(%%: ;
)%%; <
;%%< =
}&& 
}'' 
}(( 	
private** 
void** 
ImportAllPrefabs** %
(**% &
Tiled2Unity**& 1
.**1 2
ImportBehaviour**2 A
importComponent**B Q
,**Q R
string**S Y
objPath**Z a
)**a b
{++ 	
foreach,, 
(,, 
var,, 
	xmlPrefab,, "
in,,# %
importComponent,,& 5
.,,5 6
XmlDocument,,6 A
.,,A B
Root,,B F
.,,F G
Elements,,G O
(,,O P
$str,,P X
),,X Y
),,Y Z
{-- 
CreatePrefab.. 
(.. 
	xmlPrefab.. &
,..& '
objPath..( /
,../ 0
importComponent..1 @
)..@ A
;..A B
}// 
}00 	
private22 
void22 
CreatePrefab22 !
(22! "
XElement22" *
	xmlPrefab22+ 4
,224 5
string226 <
objPath22= D
,22D E
Tiled2Unity22F Q
.22Q R
ImportBehaviour22R a
importComponent22b q
)22q r
{33 	
var44 
customImporters44 
=44  !&
GetCustomImporterInstances44" <
(44< =
importComponent44= L
)44L M
;44M N
string77 

prefabName77 
=77 
	xmlPrefab77  )
.77) *
	Attribute77* 3
(773 4
$str774 :
)77: ;
.77; <
Value77< A
;77A B
float88 
prefabScale88 
=88 
ImportUtils88  +
.88+ ,
GetAttributeAsFloat88, ?
(88? @
	xmlPrefab88@ I
,88I J
$str88K R
,88R S
$num88T X
)88X Y
;88Y Z

GameObject99 

tempPrefab99 !
=99" #
new99$ '

GameObject99( 2
(992 3

prefabName993 =
)99= >
;99> ?!
HandleTiledAttributes:: !
(::! "

tempPrefab::" ,
,::, -
	xmlPrefab::. 7
,::7 8
importComponent::9 H
)::H I
;::I J"
HandleCustomProperties;; "
(;;" #

tempPrefab;;# -
,;;- .
	xmlPrefab;;/ 8
,;;8 9
customImporters;;: I
);;I J
;;;J K
bool?? 
	isTrigger?? 
=?? 
ImportUtils?? (
.??( )!
GetAttributeAsBoolean??) >
(??> ?
	xmlPrefab??? H
,??H I
$str??J U
,??U V
false??W \
)??\ ]
;??] ^
AddGameObjectsTo@@ 
(@@ 

tempPrefab@@ '
,@@' (
	xmlPrefab@@) 2
,@@2 3
	isTrigger@@4 =
,@@= >
objPath@@? F
,@@F G
importComponent@@H W
,@@W X
customImporters@@Y h
)@@h i
;@@i j
CustomizePrefabDD 
(DD 

tempPrefabDD &
,DD& '
customImportersDD( 7
)DD7 8
;DD8 9

tempPrefabGG 
.GG 
	transformGG  
.GG  !

localScaleGG! +
=GG, -
newGG. 1
Vector3GG2 9
(GG9 :
prefabScaleGG: E
,GGE F
prefabScaleGGG R
,GGR S
prefabScaleGGT _
)GG_ `
;GG` a
stringJJ 
resourcePathJJ 
=JJ  !
ImportUtilsJJ" -
.JJ- . 
GetAttributeAsStringJJ. B
(JJB C
	xmlPrefabJJC L
,JJL M
$strJJN \
,JJ\ ]
$strJJ^ `
)JJ` a
;JJa b
boolKK 

isResourceKK 
=KK 
!KK 
StringKK %
.KK% &
IsNullOrEmptyKK& 3
(KK3 4
resourcePathKK4 @
)KK@ A
||KKB D
ImportUtilsKKE P
.KKP Q!
GetAttributeAsBooleanKKQ f
(KKf g
	xmlPrefabKKg p
,KKp q
$strKKr |
,KK| }
false	KK~ É
)
KKÉ Ñ
;
KKÑ Ö
stringLL 

prefabPathLL 
=LL 
GetPrefabAssetPathLL  2
(LL2 3

prefabNameLL3 =
,LL= >

isResourceLL? I
,LLI J
resourcePathLLK W
)LLW X
;LLX Y
stringMM 

prefabFileMM 
=MM 
SystemMM  &
.MM& '
IOMM' )
.MM) *
PathMM* .
.MM. /
GetFileNameMM/ :
(MM: ;

prefabPathMM; E
)MME F
;MMF G
ifPP 
(PP 
!PP 
importComponentPP  
.PP  !
ImportWait_PrefabsPP! 3
.PP3 4
ContainsPP4 <
(PP< =

prefabFilePP= G
,PPG H
StringComparerPPI W
.PPW X
OrdinalIgnoreCasePPX i
)PPi j
)PPj k
{QQ 
importComponentRR 
.RR  
ImportWait_PrefabsRR  2
.RR2 3
AddRR3 6
(RR6 7

prefabFileRR7 A
)RRA B
;RRB C
importComponentSS 
.SS  
ImportingAssetsSS  /
.SS/ 0
AddSS0 3
(SS3 4

prefabPathSS4 >
)SS> ?
;SS? @
}TT 
UnityEngineVV 
.VV 
ObjectVV 
finalPrefabVV *
=VV+ ,
AssetDatabaseVV- :
.VV: ;
LoadAssetAtPathVV; J
(VVJ K

prefabPathVVK U
,VVU V
typeofVVW ]
(VV] ^

GameObjectVV^ h
)VVh i
)VVi j
;VVj k
ifXX 
(XX 
finalPrefabXX 
==XX 
nullXX #
)XX# $
{YY 
ImportUtils[[ 
.[[ 
ReadyToWrite[[ (
([[( )

prefabPath[[) 3
)[[3 4
;[[4 5
finalPrefab\\ 
=\\ 
PrefabUtility\\ +
.\\+ ,
CreateEmptyPrefab\\, =
(\\= >

prefabPath\\> H
)\\H I
;\\I J
}]] 
PrefabUtility`` 
.`` 
ReplacePrefab`` '
(``' (

tempPrefab``( 2
,``2 3
finalPrefab``4 ?
,``? @ 
ReplacePrefabOptions``A U
.``U V
ReplaceNameBased``V f
)``f g
;``g h
UnityEnginecc 
.cc 
Objectcc 
.cc 
DestroyImmediatecc /
(cc/ 0

tempPrefabcc0 :
)cc: ;
;cc; <
}dd 	
privateff 
voidff 
AddGameObjectsToff %
(ff% &

GameObjectff& 0
parentff1 7
,ff7 8
XElementff9 A
xmlffB E
,ffE F
boolffG K
isParentTriggerffL [
,ff[ \
stringff] c
objPathffd k
,ffk l
ImportBehaviourffm |
importComponent	ff} å
,
ffå ç
IList
ffé ì
<
ffì î"
ICustomTiledImporter
ffî ®
>
ff® ©
customImporters
ff™ π
)
ffπ ∫
{gg 	
foreachhh 
(hh 
XElementhh 
goXmlhh #
inhh$ &
xmlhh' *
.hh* +
Elementshh+ 3
(hh3 4
$strhh4 @
)hh@ A
)hhA B
{ii 
stringjj 
namejj 
=jj 
ImportUtilsjj )
.jj) * 
GetAttributeAsStringjj* >
(jj> ?
goXmljj? D
,jjD E
$strjjF L
,jjL M
$strjjN P
)jjP Q
;jjQ R
stringkk 
copyFromkk 
=kk  !
ImportUtilskk" -
.kk- . 
GetAttributeAsStringkk. B
(kkB C
goXmlkkC H
,kkH I
$strkkJ P
,kkP Q
$strkkR T
)kkT U
;kkU V

GameObjectmm 
childmm  
=mm! "
nullmm# '
;mm' (
ifnn 
(nn 
!nn 
Stringnn 
.nn 
IsNullOrEmptynn )
(nn) *
copyFromnn* 2
)nn2 3
)nn3 4
{oo 
floatpp 
opacitypp !
=pp" #
ImportUtilspp$ /
.pp/ 0
GetAttributeAsFloatpp0 C
(ppC D
goXmlppD I
,ppI J
$strppK T
,ppT U
$numppV W
)ppW X
;ppX Y
childqq 
=qq !
CreateCopyFromMeshObjqq 1
(qq1 2
copyFromqq2 :
,qq: ;
objPathqq< C
,qqC D
opacityqqE L
,qqL M
importComponentqqN ]
)qq] ^
;qq^ _
ifrr 
(rr 
childrr 
==rr  
nullrr! %
)rr% &
{ss 
returnuu 
;uu 
}vv 
Rendereryy 
rendereryy %
=yy& '
childyy( -
.yy- .
GetComponentyy. :
<yy: ;
Rendereryy; C
>yyC D
(yyD E
)yyE F
;yyF G
string{{ 
sortingLayer{{ '
={{( )
ImportUtils{{* 5
.{{5 6 
GetAttributeAsString{{6 J
({{J K
goXml{{K P
,{{P Q
$str{{R d
,{{d e
$str{{f h
){{h i
;{{i j
if|| 
(|| 
!|| 
String|| 
.||  
IsNullOrEmpty||  -
(||- .
sortingLayer||. :
)||: ;
&&||< >
!||? @%
SortingLayerExposedEditor||@ Y
.||Y Z 
GetSortingLayerNames||Z n
(||n o
)||o p
.||p q
Contains||q y
(||y z
sortingLayer	||z Ü
)
||Ü á
)
||á à
{}} 
importComponent~~ '
.~~' (
RecordError~~( 3
(~~3 4
$str	~~4 ä
,
~~ä ã
sortingLayer
~~å ò
)
~~ò ô
;
~~ô ö
renderer  
.  !
sortingLayerName! 1
=2 3
$str4 =
;= >
}
ÄÄ 
else
ÅÅ 
{
ÇÇ 
renderer
ÉÉ  
.
ÉÉ  !
sortingLayerName
ÉÉ! 1
=
ÉÉ2 3
sortingLayer
ÉÉ4 @
;
ÉÉ@ A
}
ÑÑ 
renderer
áá 
.
áá 
sortingOrder
áá )
=
áá* +
ImportUtils
áá, 7
.
áá7 8
GetAttributeAsInt
áá8 I
(
ááI J
goXml
ááJ O
,
ááO P
$str
ááQ _
,
áá_ `
$num
ááa b
)
ááb c
;
áác d
}
àà 
else
ââ 
{
ää 
child
ãã 
=
ãã 
new
ãã 

GameObject
ãã  *
(
ãã* +
)
ãã+ ,
;
ãã, -
}
åå 
if
éé 
(
éé 
!
éé 
String
éé 
.
éé 
IsNullOrEmpty
éé )
(
éé) *
name
éé* .
)
éé. /
)
éé/ 0
{
èè 
child
êê 
.
êê 
name
êê 
=
êê  
name
êê! %
;
êê% &
}
ëë 
child
îî 
.
îî 
	transform
îî 
.
îî  
parent
îî  &
=
îî' (
parent
îî) /
.
îî/ 0
	transform
îî0 9
;
îî9 :
float
óó 
x
óó 
=
óó 
ImportUtils
óó %
.
óó% &!
GetAttributeAsFloat
óó& 9
(
óó9 :
goXml
óó: ?
,
óó? @
$str
óóA D
,
óóD E
$num
óóF G
)
óóG H
;
óóH I
float
òò 
y
òò 
=
òò 
ImportUtils
òò %
.
òò% &!
GetAttributeAsFloat
òò& 9
(
òò9 :
goXml
òò: ?
,
òò? @
$str
òòA D
,
òòD E
$num
òòF G
)
òòG H
;
òòH I
float
ôô 
z
ôô 
=
ôô 
ImportUtils
ôô %
.
ôô% &!
GetAttributeAsFloat
ôô& 9
(
ôô9 :
goXml
ôô: ?
,
ôô? @
$str
ôôA D
,
ôôD E
$num
ôôF G
)
ôôG H
;
ôôH I
child
öö 
.
öö 
	transform
öö 
.
öö  
localPosition
öö  -
=
öö. /
new
öö0 3
Vector3
öö4 ;
(
öö; <
x
öö< =
,
öö= >
y
öö? @
,
öö@ A
z
ööB C
)
ööC D
;
ööD E&
AddTileLayerComponentsTo
ùù (
(
ùù( )
child
ùù) .
,
ùù. /
goXml
ùù0 5
)
ùù5 6
;
ùù6 7(
AddObjectLayerComponentsTo
ûû *
(
ûû* +
child
ûû+ 0
,
ûû0 1
goXml
ûû2 7
)
ûû7 8
;
ûû8 9'
AddGroupLayerComponentsTo
üü )
(
üü) *
child
üü* /
,
üü/ 0
goXml
üü1 6
)
üü6 7
;
üü7 8&
AddTmxObjectComponentsTo
¢¢ (
(
¢¢( )
child
¢¢) .
,
¢¢. /
goXml
¢¢0 5
)
¢¢5 6
;
¢¢6 7,
AddRectangleObjectComponentsTo
££ .
(
££. /
child
££/ 4
,
££4 5
goXml
££6 ;
)
££; <
;
££< =)
AddCircleObjectComponentsTo
§§ +
(
§§+ ,
child
§§, 1
,
§§1 2
goXml
§§3 8
)
§§8 9
;
§§9 :*
AddPolygonObjectComponentsTo
•• ,
(
••, -
child
••- 2
,
••2 3
goXml
••4 9
)
••9 :
;
••: ;+
AddPolylineObjectComponentsTo
¶¶ -
(
¶¶- .
child
¶¶. 3
,
¶¶3 4
goXml
¶¶5 :
)
¶¶: ;
;
¶¶; <'
AddTileObjectComponentsTo
ßß )
(
ßß) *
child
ßß* /
,
ßß/ 0
goXml
ßß1 6
)
ßß6 7
;
ßß7 8 
AddTileAnimatorsTo
™™ "
(
™™" #
child
™™# (
,
™™( )
goXml
™™* /
)
™™/ 0
;
™™0 1
bool
ÆÆ 
	isTrigger
ÆÆ 
=
ÆÆ  
ImportUtils
ÆÆ! ,
.
ÆÆ, -#
GetAttributeAsBoolean
ÆÆ- B
(
ÆÆB C
goXml
ÆÆC H
,
ÆÆH I
$str
ÆÆJ U
,
ÆÆU V
isParentTrigger
ÆÆW f
)
ÆÆf g
;
ÆÆg h
AddCollidersTo
ØØ 
(
ØØ 
child
ØØ $
,
ØØ$ %
	isTrigger
ØØ& /
,
ØØ/ 0
goXml
ØØ1 6
)
ØØ6 7
;
ØØ7 8
AddGameObjectsTo
≤≤  
(
≤≤  !
child
≤≤! &
,
≤≤& '
goXml
≤≤( -
,
≤≤- .
	isTrigger
≤≤/ 8
,
≤≤8 9
objPath
≤≤: A
,
≤≤A B
importComponent
≤≤C R
,
≤≤R S
customImporters
≤≤T c
)
≤≤c d
;
≤≤d e
AssignTagTo
µµ 
(
µµ 
child
µµ !
,
µµ! "
goXml
µµ# (
,
µµ( )
importComponent
µµ* 9
)
µµ9 :
;
µµ: ;
AssignLayerTo
∏∏ 
(
∏∏ 
child
∏∏ #
,
∏∏# $
goXml
∏∏% *
,
∏∏* +
importComponent
∏∏, ;
)
∏∏; <
;
∏∏< =
float
ªª 
sx
ªª 
=
ªª 
ImportUtils
ªª &
.
ªª& '!
GetAttributeAsFloat
ªª' :
(
ªª: ;
goXml
ªª; @
,
ªª@ A
$str
ªªB J
,
ªªJ K
$num
ªªL P
)
ªªP Q
;
ªªQ R
float
ºº 
sy
ºº 
=
ºº 
ImportUtils
ºº &
.
ºº& '!
GetAttributeAsFloat
ºº' :
(
ºº: ;
goXml
ºº; @
,
ºº@ A
$str
ººB J
,
ººJ K
$num
ººL P
)
ººP Q
;
ººQ R
child
ΩΩ 
.
ΩΩ 
	transform
ΩΩ 
.
ΩΩ  

localScale
ΩΩ  *
=
ΩΩ+ ,
new
ΩΩ- 0
Vector3
ΩΩ1 8
(
ΩΩ8 9
sx
ΩΩ9 ;
,
ΩΩ; <
sy
ΩΩ= ?
,
ΩΩ? @
$num
ΩΩA E
)
ΩΩE F
;
ΩΩF G
Vector3
¡¡ 
localRotation
¡¡ %
=
¡¡& '
new
¡¡( +
Vector3
¡¡, 3
(
¡¡3 4
)
¡¡4 5
;
¡¡5 6
localRotation
¬¬ 
.
¬¬ 
z
¬¬ 
=
¬¬  !
-
¬¬" #
ImportUtils
¬¬# .
.
¬¬. /!
GetAttributeAsFloat
¬¬/ B
(
¬¬B C
goXml
¬¬C H
,
¬¬H I
$str
¬¬J T
,
¬¬T U
$num
¬¬V W
)
¬¬W X
;
¬¬X Y
child
√√ 
.
√√ 
	transform
√√ 
.
√√  
eulerAngles
√√  +
=
√√, -
localRotation
√√. ;
;
√√; <$
HandleCustomProperties
∆∆ &
(
∆∆& '
child
∆∆' ,
,
∆∆, -
goXml
∆∆. 3
,
∆∆3 4
customImporters
∆∆5 D
)
∆∆D E
;
∆∆E F
}
«« 
}
»» 	
private
   
void
   
AssignLayerTo
   "
(
  " #

GameObject
  # -

gameObject
  . 8
,
  8 9
XElement
  : B
xml
  C F
,
  F G
ImportBehaviour
  H W
importComponent
  X g
)
  g h
{
ÀÀ 	
string
ÃÃ 
	layerName
ÃÃ 
=
ÃÃ 
ImportUtils
ÃÃ *
.
ÃÃ* +"
GetAttributeAsString
ÃÃ+ ?
(
ÃÃ? @
xml
ÃÃ@ C
,
ÃÃC D
$str
ÃÃE L
,
ÃÃL M
$str
ÃÃN P
)
ÃÃP Q
;
ÃÃQ R
if
ÕÕ 
(
ÕÕ 
String
ÕÕ 
.
ÕÕ 
IsNullOrEmpty
ÕÕ $
(
ÕÕ$ %
	layerName
ÕÕ% .
)
ÕÕ. /
)
ÕÕ/ 0
return
ŒŒ 
;
ŒŒ 
int
–– 
layerId
–– 
=
–– 
	LayerMask
–– #
.
––# $
NameToLayer
––$ /
(
––/ 0
	layerName
––0 9
)
––9 :
;
––: ;
if
—— 
(
—— 
layerId
—— 
==
—— 
-
—— 
$num
—— 
)
—— 
{
““ 
importComponent
”” 
.
””  
RecordError
””  +
(
””+ ,
$str””, ì
,””ì î
	layerName””ï û
,””û ü%
GetFullGameObjectName””† µ
(””µ ∂

gameObject””∂ ¿
.””¿ ¡
	transform””¡  
)””  À
)””À Ã
;””Ã Õ
return
‘‘ 
;
‘‘ 
}
’’ 
AssignLayerIdTo
ÿÿ 
(
ÿÿ 

gameObject
ÿÿ &
,
ÿÿ& '
layerId
ÿÿ( /
)
ÿÿ/ 0
;
ÿÿ0 1
}
ŸŸ 	
private
€€ 
void
€€ 
AssignLayerIdTo
€€ $
(
€€$ %

GameObject
€€% /

gameObject
€€0 :
,
€€: ;
int
€€< ?
layerId
€€@ G
)
€€G H
{
‹‹ 	
if
›› 
(
›› 

gameObject
›› 
==
›› 
null
›› "
)
››" #
return
ﬁﬁ 
;
ﬁﬁ 

gameObject
‡‡ 
.
‡‡ 
layer
‡‡ 
=
‡‡ 
layerId
‡‡ &
;
‡‡& '
foreach
‚‚ 
(
‚‚ 
	Transform
‚‚ 
child
‚‚ $
in
‚‚% '

gameObject
‚‚( 2
.
‚‚2 3
	transform
‚‚3 <
)
‚‚< =
{
„„ 
if
‰‰ 
(
‰‰ 
child
‰‰ 
.
‰‰ 

gameObject
‰‰ $
==
‰‰% '
null
‰‰( ,
)
‰‰, -
continue
ÂÂ 
;
ÂÂ 
if
ËË 
(
ËË 
child
ËË 
.
ËË 

gameObject
ËË $
.
ËË$ %
layer
ËË% *
!=
ËË+ -
$num
ËË. /
)
ËË/ 0
continue
ÈÈ 
;
ÈÈ 
AssignLayerIdTo
ÎÎ 
(
ÎÎ  
child
ÎÎ  %
.
ÎÎ% &

gameObject
ÎÎ& 0
,
ÎÎ0 1
layerId
ÎÎ2 9
)
ÎÎ9 :
;
ÎÎ: ;
}
ÏÏ 
}
ÌÌ 	
private
ÔÔ 
void
ÔÔ 
AssignTagTo
ÔÔ  
(
ÔÔ  !

GameObject
ÔÔ! +

gameObject
ÔÔ, 6
,
ÔÔ6 7
XElement
ÔÔ8 @
xml
ÔÔA D
,
ÔÔD E
ImportBehaviour
ÔÔF U
importComponent
ÔÔV e
)
ÔÔe f
{
 	
string
ÒÒ 
tag
ÒÒ 
=
ÒÒ 
ImportUtils
ÒÒ $
.
ÒÒ$ %"
GetAttributeAsString
ÒÒ% 9
(
ÒÒ9 :
xml
ÒÒ: =
,
ÒÒ= >
$str
ÒÒ? D
,
ÒÒD E
$str
ÒÒF H
)
ÒÒH I
;
ÒÒI J
if
ÚÚ 
(
ÚÚ 
String
ÚÚ 
.
ÚÚ 
IsNullOrEmpty
ÚÚ $
(
ÚÚ$ %
tag
ÚÚ% (
)
ÚÚ( )
)
ÚÚ) *
return
ÛÛ 
;
ÛÛ 
try
ˆˆ 
{
˜˜ 

gameObject
¯¯ 
.
¯¯ 
tag
¯¯ 
=
¯¯  
tag
¯¯! $
;
¯¯$ %
}
˘˘ 
catch
˙˙ 
(
˙˙ 
UnityException
˙˙ !
)
˙˙! "
{
˚˚ 
importComponent
¸¸ 
.
¸¸  
RecordError
¸¸  +
(
¸¸+ ,
$str¸¸, ë
,¸¸ë í
tag¸¸ì ñ
,¸¸ñ ó%
GetFullGameObjectName¸¸ò ≠
(¸¸≠ Æ

gameObject¸¸Æ ∏
.¸¸∏ π
	transform¸¸π ¬
)¸¸¬ √
)¸¸√ ƒ
;¸¸ƒ ≈
}
˝˝ 
}
˛˛ 	
private
ÄÄ 
string
ÄÄ #
GetFullGameObjectName
ÄÄ ,
(
ÄÄ, -
	Transform
ÄÄ- 6
xform
ÄÄ7 <
)
ÄÄ< =
{
ÅÅ 	
if
ÇÇ 
(
ÇÇ 
xform
ÇÇ 
==
ÇÇ 
null
ÇÇ 
)
ÇÇ 
return
ÉÉ 
$str
ÉÉ 
;
ÉÉ 
string
ÑÑ 

parentName
ÑÑ 
=
ÑÑ #
GetFullGameObjectName
ÑÑ  5
(
ÑÑ5 6
xform
ÑÑ6 ;
.
ÑÑ; <
parent
ÑÑ< B
)
ÑÑB C
;
ÑÑC D
if
ÜÜ 
(
ÜÜ 
String
ÜÜ 
.
ÜÜ 
IsNullOrEmpty
ÜÜ $
(
ÜÜ$ %

parentName
ÜÜ% /
)
ÜÜ/ 0
)
ÜÜ0 1
return
áá 
xform
áá 
.
áá 
name
áá !
;
áá! "
return
ââ 
String
ââ 
.
ââ 
Format
ââ  
(
ââ  !
$str
ââ! *
,
ââ* +

parentName
ââ, 6
,
ââ6 7
xform
ââ8 =
.
ââ= >
name
ââ> B
)
ââB C
;
ââC D
}
ää 	
private
åå 
void
åå 
AddCollidersTo
åå #
(
åå# $

GameObject
åå$ .

gameObject
åå/ 9
,
åå9 :
bool
åå; ?
	isTrigger
åå@ I
,
ååI J
XElement
ååK S
xml
ååT W
)
ååW X
{
çç 	
foreach
èè 
(
èè 
XElement
èè 
xmlBoxCollider2D
èè .
in
èè/ 1
xml
èè2 5
.
èè5 6
Elements
èè6 >
(
èè> ?
$str
èè? N
)
èèN O
)
èèO P
{
êê 
BoxCollider2D
ëë 
collider
ëë &
=
ëë' (

gameObject
ëë) 3
.
ëë3 4
AddComponent
ëë4 @
<
ëë@ A
BoxCollider2D
ëëA N
>
ëëN O
(
ëëO P
)
ëëP Q
;
ëëQ R
collider
íí 
.
íí 
	isTrigger
íí "
=
íí# $
	isTrigger
íí% .
;
íí. /
float
ìì 
width
ìì 
=
ìì 
ImportUtils
ìì )
.
ìì) *!
GetAttributeAsFloat
ìì* =
(
ìì= >
xmlBoxCollider2D
ìì> N
,
ììN O
$str
ììP W
)
ììW X
;
ììX Y
float
îî 
height
îî 
=
îî 
ImportUtils
îî *
.
îî* +!
GetAttributeAsFloat
îî+ >
(
îî> ?
xmlBoxCollider2D
îî? O
,
îîO P
$str
îîQ Y
)
îîY Z
;
îîZ [
collider
ïï 
.
ïï 
size
ïï 
=
ïï 
new
ïï  #
Vector2
ïï$ +
(
ïï+ ,
width
ïï, 1
,
ïï1 2
height
ïï3 9
)
ïï9 :
;
ïï: ;
collider
öö 
.
öö 
offset
öö 
=
öö  !
new
öö" %
Vector2
öö& -
(
öö- .
width
öö. 3
*
öö4 5
$num
öö6 :
,
öö: ;
-
öö< =
height
öö= C
*
ööD E
$num
ööF J
)
ööJ K
;
ööK L
float
ùù 
offset_x
ùù 
=
ùù  
ImportUtils
ùù! ,
.
ùù, -!
GetAttributeAsFloat
ùù- @
(
ùù@ A
xmlBoxCollider2D
ùùA Q
,
ùùQ R
$str
ùùS \
,
ùù\ ]
$num
ùù^ _
)
ùù_ `
;
ùù` a
float
ûû 
offset_y
ûû 
=
ûû  
ImportUtils
ûû! ,
.
ûû, -!
GetAttributeAsFloat
ûû- @
(
ûû@ A
xmlBoxCollider2D
ûûA Q
,
ûûQ R
$str
ûûS \
,
ûû\ ]
$num
ûû^ _
)
ûû_ `
;
ûû` a
collider
££ 
.
££ 
offset
££ 
+=
££  "
new
££# &
Vector2
££' .
(
££. /
offset_x
££/ 7
,
££7 8
offset_y
££9 A
)
££A B
;
££B C
}
•• 
foreach
®® 
(
®® 
XElement
®® !
xmlCircleCollider2D
®® 1
in
®®2 4
xml
®®5 8
.
®®8 9
Elements
®®9 A
(
®®A B
$str
®®B T
)
®®T U
)
®®U V
{
©© 
CircleCollider2D
™™  
collider
™™! )
=
™™* +

gameObject
™™, 6
.
™™6 7
AddComponent
™™7 C
<
™™C D
CircleCollider2D
™™D T
>
™™T U
(
™™U V
)
™™V W
;
™™W X
collider
´´ 
.
´´ 
	isTrigger
´´ "
=
´´# $
	isTrigger
´´% .
;
´´. /
float
¨¨ 
radius
¨¨ 
=
¨¨ 
ImportUtils
¨¨ *
.
¨¨* +!
GetAttributeAsFloat
¨¨+ >
(
¨¨> ?!
xmlCircleCollider2D
¨¨? R
,
¨¨R S
$str
¨¨T \
)
¨¨\ ]
;
¨¨] ^
collider
≠≠ 
.
≠≠ 
radius
≠≠ 
=
≠≠  !
radius
≠≠" (
;
≠≠( )
collider
±± 
.
±± 
offset
±± 
=
±±  !
new
±±" %
Vector2
±±& -
(
±±- .
radius
±±. 4
,
±±4 5
-
±±6 7
radius
±±7 =
)
±±= >
;
±±> ?
float
µµ 
offset_x
µµ 
=
µµ  
ImportUtils
µµ! ,
.
µµ, -!
GetAttributeAsFloat
µµ- @
(
µµ@ A!
xmlCircleCollider2D
µµA T
,
µµT U
$str
µµV _
,
µµ_ `
$num
µµa b
)
µµb c
;
µµc d
float
∂∂ 
offset_y
∂∂ 
=
∂∂  
ImportUtils
∂∂! ,
.
∂∂, -!
GetAttributeAsFloat
∂∂- @
(
∂∂@ A!
xmlCircleCollider2D
∂∂A T
,
∂∂T U
$str
∂∂V _
,
∂∂_ `
$num
∂∂a b
)
∂∂b c
;
∂∂c d
collider
ªª 
.
ªª 
offset
ªª 
+=
ªª  "
new
ªª# &
Vector2
ªª' .
(
ªª. /
offset_x
ªª/ 7
,
ªª7 8
offset_y
ªª9 A
)
ªªA B
;
ªªB C
}
ΩΩ 
foreach
¿¿ 
(
¿¿ 
XElement
¿¿ 
xmlEdgeCollider2D
¿¿ /
in
¿¿0 2
xml
¿¿3 6
.
¿¿6 7
Elements
¿¿7 ?
(
¿¿? @
$str
¿¿@ P
)
¿¿P Q
)
¿¿Q R
{
¡¡ 
EdgeCollider2D
¬¬ 
collider
¬¬ '
=
¬¬( )

gameObject
¬¬* 4
.
¬¬4 5
AddComponent
¬¬5 A
<
¬¬A B
EdgeCollider2D
¬¬B P
>
¬¬P Q
(
¬¬Q R
)
¬¬R S
;
¬¬S T
collider
√√ 
.
√√ 
	isTrigger
√√ "
=
√√# $
	isTrigger
√√% .
;
√√. /
string
ƒƒ 
data
ƒƒ 
=
ƒƒ 
xmlEdgeCollider2D
ƒƒ /
.
ƒƒ/ 0
Element
ƒƒ0 7
(
ƒƒ7 8
$str
ƒƒ8 @
)
ƒƒ@ A
.
ƒƒA B
Value
ƒƒB G
;
ƒƒG H
var
»» 
points
»» 
=
»» 
from
»» !
pt
»»" $
in
»»% '
data
»»( ,
.
»», -
Split
»»- 2
(
»»2 3
$char
»»3 6
)
»»6 7
let
……  
x
……! "
=
……# $
Convert
……% ,
.
……, -
ToSingle
……- 5
(
……5 6
pt
……6 8
.
……8 9
Split
……9 >
(
……> ?
$char
……? B
)
……B C
[
……C D
$num
……D E
]
……E F
)
……F G
let
    
y
  ! "
=
  # $
Convert
  % ,
.
  , -
ToSingle
  - 5
(
  5 6
pt
  6 8
.
  8 9
Split
  9 >
(
  > ?
$char
  ? B
)
  B C
[
  C D
$num
  D E
]
  E F
)
  F G
select
ÀÀ #
new
ÀÀ$ '
Vector2
ÀÀ( /
(
ÀÀ/ 0
x
ÀÀ0 1
,
ÀÀ1 2
y
ÀÀ3 4
)
ÀÀ4 5
;
ÀÀ5 6
collider
ÕÕ 
.
ÕÕ 
points
ÕÕ 
=
ÕÕ  !
points
ÕÕ" (
.
ÕÕ( )
ToArray
ÕÕ) 0
(
ÕÕ0 1
)
ÕÕ1 2
;
ÕÕ2 3
float
–– 
offset_x
–– 
=
––  
ImportUtils
––! ,
.
––, -!
GetAttributeAsFloat
––- @
(
––@ A
xmlEdgeCollider2D
––A R
,
––R S
$str
––T ]
,
––] ^
$num
––_ `
)
––` a
;
––a b
float
—— 
offset_y
—— 
=
——  
ImportUtils
——! ,
.
——, -!
GetAttributeAsFloat
——- @
(
——@ A
xmlEdgeCollider2D
——A R
,
——R S
$str
——T ]
,
——] ^
$num
——_ `
)
——` a
;
——a b
collider
⁄⁄ 
.
⁄⁄ 
offset
⁄⁄ 
+=
⁄⁄  "
new
⁄⁄# &
Vector2
⁄⁄' .
(
⁄⁄. /
offset_x
⁄⁄/ 7
,
⁄⁄7 8
offset_y
⁄⁄9 A
)
⁄⁄A B
;
⁄⁄B C
}
‹‹ 
foreach
ﬂﬂ 
(
ﬂﬂ 
XElement
ﬂﬂ "
xmlPolygonCollider2D
ﬂﬂ 2
in
ﬂﬂ3 5
xml
ﬂﬂ6 9
.
ﬂﬂ9 :
Elements
ﬂﬂ: B
(
ﬂﬂB C
$str
ﬂﬂC V
)
ﬂﬂV W
)
ﬂﬂW X
{
‡‡ 
PolygonCollider2D
·· !
collider
··" *
=
··+ ,

gameObject
··- 7
.
··7 8
AddComponent
··8 D
<
··D E
PolygonCollider2D
··E V
>
··V W
(
··W X
)
··X Y
;
··Y Z
collider
‚‚ 
.
‚‚ 
	isTrigger
‚‚ "
=
‚‚# $
	isTrigger
‚‚% .
;
‚‚. /
float
ÂÂ 
offset_x
ÂÂ 
=
ÂÂ  
ImportUtils
ÂÂ! ,
.
ÂÂ, -!
GetAttributeAsFloat
ÂÂ- @
(
ÂÂ@ A"
xmlPolygonCollider2D
ÂÂA U
,
ÂÂU V
$str
ÂÂW `
,
ÂÂ` a
$num
ÂÂb c
)
ÂÂc d
;
ÂÂd e
float
ÊÊ 
offset_y
ÊÊ 
=
ÊÊ  
ImportUtils
ÊÊ! ,
.
ÊÊ, -!
GetAttributeAsFloat
ÊÊ- @
(
ÊÊ@ A"
xmlPolygonCollider2D
ÊÊA U
,
ÊÊU V
$str
ÊÊW `
,
ÊÊ` a
$num
ÊÊb c
)
ÊÊc d
;
ÊÊd e
var
ËË 
paths
ËË 
=
ËË "
xmlPolygonCollider2D
ËË 0
.
ËË0 1
Elements
ËË1 9
(
ËË9 :
$str
ËË: @
)
ËË@ A
.
ËËA B
ToArray
ËËB I
(
ËËI J
)
ËËJ K
;
ËËK L
collider
ÈÈ 
.
ÈÈ 
	pathCount
ÈÈ "
=
ÈÈ# $
paths
ÈÈ% *
.
ÈÈ* +
Count
ÈÈ+ 0
(
ÈÈ0 1
)
ÈÈ1 2
;
ÈÈ2 3
for
ÎÎ 
(
ÎÎ 
int
ÎÎ 
p
ÎÎ 
=
ÎÎ 
$num
ÎÎ 
;
ÎÎ 
p
ÎÎ  !
<
ÎÎ" #
collider
ÎÎ$ ,
.
ÎÎ, -
	pathCount
ÎÎ- 6
;
ÎÎ6 7
++
ÎÎ8 :
p
ÎÎ: ;
)
ÎÎ; <
{
ÏÏ 
string
ÌÌ 
data
ÌÌ 
=
ÌÌ  !
paths
ÌÌ" '
[
ÌÌ' (
p
ÌÌ( )
]
ÌÌ) *
.
ÌÌ* +
Value
ÌÌ+ 0
;
ÌÌ0 1
var
ÒÒ 
points
ÒÒ 
=
ÒÒ  
from
ÒÒ! %
pt
ÒÒ& (
in
ÒÒ) +
data
ÒÒ, 0
.
ÒÒ0 1
Split
ÒÒ1 6
(
ÒÒ6 7
$char
ÒÒ7 :
)
ÒÒ: ;
let
ÚÚ! $
x
ÚÚ% &
=
ÚÚ' (
Convert
ÚÚ) 0
.
ÚÚ0 1
ToSingle
ÚÚ1 9
(
ÚÚ9 :
pt
ÚÚ: <
.
ÚÚ< =
Split
ÚÚ= B
(
ÚÚB C
$char
ÚÚC F
)
ÚÚF G
[
ÚÚG H
$num
ÚÚH I
]
ÚÚI J
)
ÚÚJ K
let
ÛÛ! $
y
ÛÛ% &
=
ÛÛ' (
Convert
ÛÛ) 0
.
ÛÛ0 1
ToSingle
ÛÛ1 9
(
ÛÛ9 :
pt
ÛÛ: <
.
ÛÛ< =
Split
ÛÛ= B
(
ÛÛB C
$char
ÛÛC F
)
ÛÛF G
[
ÛÛG H
$num
ÛÛH I
]
ÛÛI J
)
ÛÛJ K
select
¯¯! '
new
¯¯( +
Vector2
¯¯, 3
(
¯¯3 4
x
¯¯4 5
,
¯¯5 6
y
¯¯7 8
)
¯¯8 9
;
¯¯9 :
collider
˚˚ 
.
˚˚ 
SetPath
˚˚ $
(
˚˚$ %
p
˚˚% &
,
˚˚& '
points
˚˚( .
.
˚˚. /
ToArray
˚˚/ 6
(
˚˚6 7
)
˚˚7 8
)
˚˚8 9
;
˚˚9 :
}
¸¸ 
collider
ˇˇ 
.
ˇˇ 
offset
ˇˇ 
+=
ˇˇ  "
new
ˇˇ# &
Vector2
ˇˇ' .
(
ˇˇ. /
offset_x
ˇˇ/ 7
,
ˇˇ7 8
offset_y
ˇˇ9 A
)
ˇˇA B
;
ˇˇB C
}
ÅÅ 
}
ÇÇ 	
private
ÑÑ 

GameObject
ÑÑ #
CreateCopyFromMeshObj
ÑÑ 0
(
ÑÑ0 1
string
ÑÑ1 7
copyFromName
ÑÑ8 D
,
ÑÑD E
string
ÑÑF L
objPath
ÑÑM T
,
ÑÑT U
float
ÑÑV [
opacity
ÑÑ\ c
,
ÑÑc d
ImportBehaviour
ÑÑe t
importComponentÑÑu Ñ
)ÑÑÑ Ö
{
ÖÖ 	
UnityEngine
àà 
.
àà 
Object
àà 
[
àà 
]
àà  
objects
àà! (
=
àà) *
AssetDatabase
àà+ 8
.
àà8 9!
LoadAllAssetsAtPath
àà9 L
(
ààL M
objPath
ààM T
)
ààT U
;
ààU V
foreach
ââ 
(
ââ 
var
ââ 
obj
ââ 
in
ââ 
objects
ââ  '
)
ââ' (
{
ää 
if
ãã 
(
ãã 
obj
ãã 
.
ãã 
name
ãã 
!=
ãã 
copyFromName
ãã  ,
)
ãã, -
continue
åå 
;
åå 

GameObject
èè 
gameObj
èè "
=
èè# $

GameObject
èè% /
.
èè/ 0
Instantiate
èè0 ;
(
èè; <
obj
èè< ?
)
èè? @
as
èèA C

GameObject
èèD N
;
èèN O
if
êê 
(
êê 
gameObj
êê 
==
êê 
null
êê #
)
êê# $
continue
ëë 
;
ëë *
TiledInitialShaderProperties
îî ,
shaderProps
îî- 8
=
îî9 :
gameObj
îî; B
.
îîB C
AddComponent
îîC O
<
îîO P*
TiledInitialShaderProperties
îîP l
>
îîl m
(
îîm n
)
îîn o
;
îîo p
shaderProps
ïï 
.
ïï 
InitialOpacity
ïï *
=
ïï+ ,
opacity
ïï- 4
;
ïï4 5
gameObj
òò 
.
òò 
name
òò 
=
òò 
obj
òò "
.
òò" #
name
òò# '
;
òò' (
return
ôô 
gameObj
ôô 
;
ôô 
}
öö 
importComponent
ùù 
.
ùù 
RecordError
ùù '
(
ùù' (
$str
ùù( g
,
ùùg h
copyFromName
ùùi u
,
ùùu v
importComponentùùw Ü
.ùùÜ á"
Tiled2UnityXmlPathùùá ô
,ùùô ö
objPathùùõ ¢
)ùù¢ £
;ùù£ §
return
ûû 
null
ûû 
;
ûû 
}
üü 	
private
°° 
void
°° &
AddTileLayerComponentsTo
°° -
(
°°- .

GameObject
°°. 8

gameObject
°°9 C
,
°°C D
XElement
°°E M
goXml
°°N S
)
°°S T
{
¢¢ 	
var
££ 
xml
££ 
=
££ 
goXml
££ 
.
££ 
Element
££ #
(
££# $
$str
££$ /
)
££/ 0
;
££0 1
if
§§ 
(
§§ 
xml
§§ 
!=
§§ 
null
§§ 
)
§§ 
{
•• 
Tiled2Unity
¶¶ 
.
¶¶ 
	TileLayer
¶¶ %
	tileLayer
¶¶& /
=
¶¶0 1

gameObject
¶¶2 <
.
¶¶< =
AddComponent
¶¶= I
<
¶¶I J
Tiled2Unity
¶¶J U
.
¶¶U V
	TileLayer
¶¶V _
>
¶¶_ `
(
¶¶` a
)
¶¶a b
;
¶¶b c)
SetLayerComponentProperties
ßß +
(
ßß+ ,
	tileLayer
ßß, 5
,
ßß5 6
xml
ßß7 :
)
ßß: ;
;
ßß; <
}
®® 
}
©© 	
private
´´ 
void
´´ (
AddObjectLayerComponentsTo
´´ /
(
´´/ 0

GameObject
´´0 :

gameObject
´´; E
,
´´E F
XElement
´´G O
goXml
´´P U
)
´´U V
{
¨¨ 	
var
≠≠ 
xml
≠≠ 
=
≠≠ 
goXml
≠≠ 
.
≠≠ 
Element
≠≠ #
(
≠≠# $
$str
≠≠$ 1
)
≠≠1 2
;
≠≠2 3
if
ÆÆ 
(
ÆÆ 
xml
ÆÆ 
!=
ÆÆ 
null
ÆÆ 
)
ÆÆ 
{
ØØ 
Tiled2Unity
∞∞ 
.
∞∞ 
ObjectLayer
∞∞ '
objectLayer
∞∞( 3
=
∞∞4 5

gameObject
∞∞6 @
.
∞∞@ A
AddComponent
∞∞A M
<
∞∞M N
Tiled2Unity
∞∞N Y
.
∞∞Y Z
ObjectLayer
∞∞Z e
>
∞∞e f
(
∞∞f g
)
∞∞g h
;
∞∞h i
objectLayer
±± 
.
±± 
Color
±± !
=
±±" #
ImportUtils
±±$ /
.
±±/ 0!
GetAttributeAsColor
±±0 C
(
±±C D
xml
±±D G
,
±±G H
$str
±±I P
,
±±P Q
Color
±±R W
.
±±W X
black
±±X ]
)
±±] ^
;
±±^ _)
SetLayerComponentProperties
≤≤ +
(
≤≤+ ,
objectLayer
≤≤, 7
,
≤≤7 8
xml
≤≤9 <
)
≤≤< =
;
≤≤= >
}
≥≥ 
}
¥¥ 	
private
∂∂ 
void
∂∂ '
AddGroupLayerComponentsTo
∂∂ .
(
∂∂. /

GameObject
∂∂/ 9

gameObject
∂∂: D
,
∂∂D E
XElement
∂∂F N
goXml
∂∂O T
)
∂∂T U
{
∑∑ 	
var
∏∏ 
xml
∏∏ 
=
∏∏ 
goXml
∏∏ 
.
∏∏ 
Element
∏∏ #
(
∏∏# $
$str
∏∏$ 0
)
∏∏0 1
;
∏∏1 2
if
ππ 
(
ππ 
xml
ππ 
!=
ππ 
null
ππ 
)
ππ 
{
∫∫ 
Tiled2Unity
ªª 
.
ªª 

GroupLayer
ªª &

groupLayer
ªª' 1
=
ªª2 3

gameObject
ªª4 >
.
ªª> ?
AddComponent
ªª? K
<
ªªK L
Tiled2Unity
ªªL W
.
ªªW X

GroupLayer
ªªX b
>
ªªb c
(
ªªc d
)
ªªd e
;
ªªe f)
SetLayerComponentProperties
ºº +
(
ºº+ ,

groupLayer
ºº, 6
,
ºº6 7
xml
ºº8 ;
)
ºº; <
;
ºº< =
}
ΩΩ 
}
ææ 	
private
¿¿ 
void
¿¿ )
SetLayerComponentProperties
¿¿ 0
(
¿¿0 1
Tiled2Unity
¿¿1 <
.
¿¿< =
Layer
¿¿= B
layer
¿¿C H
,
¿¿H I
XElement
¿¿J R
xml
¿¿S V
)
¿¿V W
{
¡¡ 	
layer
¬¬ 
.
¬¬ 
Offset
¬¬ 
=
¬¬ 
new
¬¬ 
Vector2
¬¬ &
{
¬¬' (
x
¬¬) *
=
¬¬+ ,
ImportUtils
¬¬- 8
.
¬¬8 9!
GetAttributeAsFloat
¬¬9 L
(
¬¬L M
xml
¬¬M P
,
¬¬P Q
$str
¬¬R [
,
¬¬[ \
$num
¬¬] ^
)
¬¬^ _
,
¬¬_ `
y
¬¬a b
=
¬¬c d
ImportUtils
¬¬e p
.
¬¬p q"
GetAttributeAsFloat¬¬q Ñ
(¬¬Ñ Ö
xml¬¬Ö à
,¬¬à â
$str¬¬ä ì
,¬¬ì î
$num¬¬ï ñ
)¬¬ñ ó
}¬¬ò ô
;¬¬ô ö
}
√√ 	
private
≈≈ 
void
≈≈ &
AddTmxObjectComponentsTo
≈≈ -
(
≈≈- .

GameObject
≈≈. 8

gameObject
≈≈9 C
,
≈≈C D
XElement
≈≈E M
goXml
≈≈N S
)
≈≈S T
{
∆∆ 	
var
«« 
xml
«« 
=
«« 
goXml
«« 
.
«« 
Element
«« #
(
««# $
$str
««$ 8
)
««8 9
;
««9 :
if
»» 
(
»» 
xml
»» 
!=
»» 
null
»» 
)
»» 
{
…… 
	TmxObject
   
	tmxObject
   #
=
  $ %

gameObject
  & 0
.
  0 1
AddComponent
  1 =
<
  = >
	TmxObject
  > G
>
  G H
(
  H I
)
  I J
;
  J K)
FillBaseTmxObjectProperties
ÀÀ +
(
ÀÀ+ ,
	tmxObject
ÀÀ, 5
,
ÀÀ5 6
xml
ÀÀ7 :
)
ÀÀ: ;
;
ÀÀ; <
}
ÃÃ 
}
ÕÕ 	
private
œœ 
void
œœ ,
AddRectangleObjectComponentsTo
œœ 3
(
œœ3 4

GameObject
œœ4 >

gameObject
œœ? I
,
œœI J
XElement
œœK S
goXml
œœT Y
)
œœY Z
{
–– 	
var
—— 
xml
—— 
=
—— 
goXml
—— 
.
—— 
Element
—— #
(
——# $
$str
——$ >
)
——> ?
;
——? @
if
““ 
(
““ 
xml
““ 
!=
““ 
null
““ 
)
““ 
{
”” 
RectangleObject
‘‘ 
tmxRectangle
‘‘  ,
=
‘‘- .

gameObject
‘‘/ 9
.
‘‘9 :
AddComponent
‘‘: F
<
‘‘F G
Tiled2Unity
‘‘G R
.
‘‘R S
RectangleObject
‘‘S b
>
‘‘b c
(
‘‘c d
)
‘‘d e
;
‘‘e f)
FillBaseTmxObjectProperties
’’ +
(
’’+ ,
tmxRectangle
’’, 8
,
’’8 9
xml
’’: =
)
’’= >
;
’’> ?
}
÷÷ 
}
◊◊ 	
private
ŸŸ 
void
ŸŸ )
AddCircleObjectComponentsTo
ŸŸ 0
(
ŸŸ0 1

GameObject
ŸŸ1 ;

gameObject
ŸŸ< F
,
ŸŸF G
XElement
ŸŸH P
goXml
ŸŸQ V
)
ŸŸV W
{
⁄⁄ 	
var
€€ 
xml
€€ 
=
€€ 
goXml
€€ 
.
€€ 
Element
€€ #
(
€€# $
$str
€€$ ;
)
€€; <
;
€€< =
if
‹‹ 
(
‹‹ 
xml
‹‹ 
!=
‹‹ 
null
‹‹ 
)
‹‹ 
{
›› 
CircleObject
ﬁﬁ 
	tmxCircle
ﬁﬁ &
=
ﬁﬁ' (

gameObject
ﬁﬁ) 3
.
ﬁﬁ3 4
AddComponent
ﬁﬁ4 @
<
ﬁﬁ@ A
Tiled2Unity
ﬁﬁA L
.
ﬁﬁL M
CircleObject
ﬁﬁM Y
>
ﬁﬁY Z
(
ﬁﬁZ [
)
ﬁﬁ[ \
;
ﬁﬁ\ ])
FillBaseTmxObjectProperties
ﬂﬂ +
(
ﬂﬂ+ ,
	tmxCircle
ﬂﬂ, 5
,
ﬂﬂ5 6
xml
ﬂﬂ7 :
)
ﬂﬂ: ;
;
ﬂﬂ; <
}
‡‡ 
}
·· 	
private
„„ 
void
„„ *
AddPolygonObjectComponentsTo
„„ 1
(
„„1 2

GameObject
„„2 <

gameObject
„„= G
,
„„G H
XElement
„„I Q
goXml
„„R W
)
„„W X
{
‰‰ 	
var
ÂÂ 
xml
ÂÂ 
=
ÂÂ 
goXml
ÂÂ 
.
ÂÂ 
Element
ÂÂ #
(
ÂÂ# $
$str
ÂÂ$ <
)
ÂÂ< =
;
ÂÂ= >
if
ÊÊ 
(
ÊÊ 
xml
ÊÊ 
!=
ÊÊ 
null
ÊÊ 
)
ÊÊ 
{
ÁÁ 
PolygonObject
ËË 

tmxPolygon
ËË (
=
ËË) *

gameObject
ËË+ 5
.
ËË5 6
AddComponent
ËË6 B
<
ËËB C
Tiled2Unity
ËËC N
.
ËËN O
PolygonObject
ËËO \
>
ËË\ ]
(
ËË] ^
)
ËË^ _
;
ËË_ `)
FillBaseTmxObjectProperties
ÈÈ +
(
ÈÈ+ ,

tmxPolygon
ÈÈ, 6
,
ÈÈ6 7
xml
ÈÈ8 ;
)
ÈÈ; <
;
ÈÈ< =
}
ÍÍ 
}
ÎÎ 	
private
ÌÌ 
void
ÌÌ +
AddPolylineObjectComponentsTo
ÌÌ 2
(
ÌÌ2 3

GameObject
ÌÌ3 =

gameObject
ÌÌ> H
,
ÌÌH I
XElement
ÌÌJ R
goXml
ÌÌS X
)
ÌÌX Y
{
ÓÓ 	
var
ÔÔ 
xml
ÔÔ 
=
ÔÔ 
goXml
ÔÔ 
.
ÔÔ 
Element
ÔÔ #
(
ÔÔ# $
$str
ÔÔ$ =
)
ÔÔ= >
;
ÔÔ> ?
if
 
(
 
xml
 
!=
 
null
 
)
 
{
ÒÒ 
PolylineObject
ÚÚ 
tmxPolyline
ÚÚ *
=
ÚÚ+ ,

gameObject
ÚÚ- 7
.
ÚÚ7 8
AddComponent
ÚÚ8 D
<
ÚÚD E
Tiled2Unity
ÚÚE P
.
ÚÚP Q
PolylineObject
ÚÚQ _
>
ÚÚ_ `
(
ÚÚ` a
)
ÚÚa b
;
ÚÚb c)
FillBaseTmxObjectProperties
ÛÛ +
(
ÛÛ+ ,
tmxPolyline
ÛÛ, 7
,
ÛÛ7 8
xml
ÛÛ9 <
)
ÛÛ< =
;
ÛÛ= >
}
ÙÙ 
}
ıı 	
private
˜˜ 
void
˜˜ '
AddTileObjectComponentsTo
˜˜ .
(
˜˜. /

GameObject
˜˜/ 9

gameObject
˜˜: D
,
˜˜D E
XElement
˜˜F N
goXml
˜˜O T
)
˜˜T U
{
¯¯ 	
var
˘˘ 
tileXml
˘˘ 
=
˘˘ 
goXml
˘˘ 
.
˘˘  
Element
˘˘  '
(
˘˘' (
$str
˘˘( =
)
˘˘= >
;
˘˘> ?
if
˙˙ 
(
˙˙ 
tileXml
˙˙ 
!=
˙˙ 
null
˙˙ 
)
˙˙  
{
˚˚ 

TileObject
¸¸ 

tileObject
¸¸ %
=
¸¸& '

gameObject
¸¸( 2
.
¸¸2 3
AddComponent
¸¸3 ?
<
¸¸? @

TileObject
¸¸@ J
>
¸¸J K
(
¸¸K L
)
¸¸L M
;
¸¸M N)
FillBaseTmxObjectProperties
˝˝ +
(
˝˝+ ,

tileObject
˝˝, 6
,
˝˝6 7
tileXml
˝˝8 ?
)
˝˝? @
;
˝˝@ A

tileObject
˛˛ 
.
˛˛ #
TmxFlippingHorizontal
˛˛ 0
=
˛˛1 2
ImportUtils
˛˛3 >
.
˛˛> ?#
GetAttributeAsBoolean
˛˛? T
(
˛˛T U
tileXml
˛˛U \
,
˛˛\ ]
$str
˛˛^ x
,
˛˛x y
false
˛˛z 
)˛˛ Ä
;˛˛Ä Å

tileObject
ˇˇ 
.
ˇˇ !
TmxFlippingVertical
ˇˇ .
=
ˇˇ/ 0
ImportUtils
ˇˇ1 <
.
ˇˇ< =#
GetAttributeAsBoolean
ˇˇ= R
(
ˇˇR S
tileXml
ˇˇS Z
,
ˇˇZ [
$str
ˇˇ\ t
,
ˇˇt u
false
ˇˇv {
)
ˇˇ{ |
;
ˇˇ| }

tileObject
ÄÄ 
.
ÄÄ 
	TileWidth
ÄÄ $
=
ÄÄ% &
ImportUtils
ÄÄ' 2
.
ÄÄ2 3!
GetAttributeAsFloat
ÄÄ3 F
(
ÄÄF G
tileXml
ÄÄG N
,
ÄÄN O
$str
ÄÄP W
)
ÄÄW X
;
ÄÄX Y

tileObject
ÅÅ 
.
ÅÅ 

TileHeight
ÅÅ %
=
ÅÅ& '
ImportUtils
ÅÅ( 3
.
ÅÅ3 4!
GetAttributeAsFloat
ÅÅ4 G
(
ÅÅG H
tileXml
ÅÅH O
,
ÅÅO P
$str
ÅÅQ Y
)
ÅÅY Z
;
ÅÅZ [
}
ÇÇ 
}
ÉÉ 	
private
ÖÖ 
void
ÖÖ )
FillBaseTmxObjectProperties
ÖÖ 0
(
ÖÖ0 1
Tiled2Unity
ÖÖ1 <
.
ÖÖ< =
	TmxObject
ÖÖ= F
tmxComponent
ÖÖG S
,
ÖÖS T
XElement
ÖÖU ]
xml
ÖÖ^ a
)
ÖÖa b
{
ÜÜ 	
tmxComponent
áá 
.
áá 
TmxId
áá 
=
áá  
ImportUtils
áá! ,
.
áá, -
GetAttributeAsInt
áá- >
(
áá> ?
xml
áá? B
,
ááB C
$str
ááD S
,
ááS T
-
ááU V
$num
ááV W
)
ááW X
;
ááX Y
tmxComponent
àà 
.
àà 
TmxName
àà  
=
àà! "
ImportUtils
àà# .
.
àà. /"
GetAttributeAsString
àà/ C
(
ààC D
xml
ààD G
,
ààG H
$str
ààI Z
,
ààZ [
$str
àà\ ^
)
àà^ _
;
àà_ `
tmxComponent
ââ 
.
ââ 
TmxType
ââ  
=
ââ! "
ImportUtils
ââ# .
.
ââ. /"
GetAttributeAsString
ââ/ C
(
ââC D
xml
ââD G
,
ââG H
$str
ââI Z
,
ââZ [
$str
ââ\ ^
)
ââ^ _
;
ââ_ `
tmxComponent
ää 
.
ää 
TmxPosition
ää $
.
ää$ %
x
ää% &
=
ää' (
ImportUtils
ää) 4
.
ää4 5!
GetAttributeAsFloat
ää5 H
(
ääH I
xml
ääI L
,
ääL M
$str
ääN \
,
ää\ ]
$num
ää^ _
)
ää_ `
;
ää` a
tmxComponent
ãã 
.
ãã 
TmxPosition
ãã $
.
ãã$ %
y
ãã% &
=
ãã' (
ImportUtils
ãã) 4
.
ãã4 5!
GetAttributeAsFloat
ãã5 H
(
ããH I
xml
ããI L
,
ããL M
$str
ããN \
,
ãã\ ]
$num
ãã^ _
)
ãã_ `
;
ãã` a
tmxComponent
åå 
.
åå 
TmxSize
åå  
.
åå  !
x
åå! "
=
åå# $
ImportUtils
åå% 0
.
åå0 1!
GetAttributeAsFloat
åå1 D
(
ååD E
xml
ååE H
,
ååH I
$str
ååJ \
,
åå\ ]
$num
åå^ _
)
åå_ `
;
åå` a
tmxComponent
çç 
.
çç 
TmxSize
çç  
.
çç  !
y
çç! "
=
çç# $
ImportUtils
çç% 0
.
çç0 1!
GetAttributeAsFloat
çç1 D
(
ççD E
xml
ççE H
,
ççH I
$str
ççJ ]
,
çç] ^
$num
çç_ `
)
çç` a
;
çça b
tmxComponent
éé 
.
éé 
TmxRotation
éé $
=
éé% &
ImportUtils
éé' 2
.
éé2 3!
GetAttributeAsFloat
éé3 F
(
ééF G
xml
ééG J
,
ééJ K
$str
ééL a
,
ééa b
$num
ééc d
)
ééd e
;
éée f
}
èè 	
private
ëë 
void
ëë  
AddTileAnimatorsTo
ëë '
(
ëë' (

GameObject
ëë( 2

gameObject
ëë3 =
,
ëë= >
XElement
ëë? G
goXml
ëëH M
)
ëëM N
{
íí 	
var
îî 
animXml
îî 
=
îî 
goXml
îî 
.
îî  
Element
îî  '
(
îî' (
$str
îî( 6
)
îî6 7
;
îî7 8
if
ïï 
(
ïï 
animXml
ïï 
!=
ïï 
null
ïï 
)
ïï  
{
ññ 
TileAnimator
óó 
tileAnimator
óó )
=
óó* +

gameObject
óó, 6
.
óó6 7
AddComponent
óó7 C
<
óóC D
TileAnimator
óóD P
>
óóP Q
(
óóQ R
)
óóR S
;
óóS T
tileAnimator
òò 
.
òò 
	StartTime
òò &
=
òò' (
ImportUtils
òò) 4
.
òò4 5
GetAttributeAsInt
òò5 F
(
òòF G
animXml
òòG N
,
òòN O
$str
òòP ]
)
òò] ^
*
òò_ `
$num
òòa g
;
òòg h
tileAnimator
ôô 
.
ôô 
Duration
ôô %
=
ôô& '
ImportUtils
ôô( 3
.
ôô3 4
GetAttributeAsInt
ôô4 E
(
ôôE F
animXml
ôôF M
,
ôôM N
$str
ôôO [
)
ôô[ \
*
ôô] ^
$num
ôô_ e
;
ôôe f
tileAnimator
öö 
.
öö  
TotalAnimationTime
öö /
=
öö0 1
ImportUtils
öö2 =
.
öö= >
GetAttributeAsInt
öö> O
(
ööO P
animXml
ööP W
,
ööW X
$str
ööY e
)
ööe f
*
öög h
$num
ööi o
;
ööo p
}
õõ 
}
úú 	
private
ûû 
void
ûû #
HandleTiledAttributes
ûû *
(
ûû* +

GameObject
ûû+ 5

gameObject
ûû6 @
,
ûû@ A
XElement
ûûB J
goXml
ûûK P
,
ûûP Q
Tiled2Unity
ûûR ]
.
ûû] ^
ImportBehaviour
ûû^ m
importComponent
ûûn }
)
ûû} ~
{
üü 	
TiledMap
°° 
map
°° 
=
°° 

gameObject
°° %
.
°°% &
AddComponent
°°& 2
<
°°2 3
TiledMap
°°3 ;
>
°°; <
(
°°< =
)
°°= >
;
°°> ?
try
¢¢ 
{
££ 
map
§§ 
.
§§ 
Orientation
§§ 
=
§§  !
ImportUtils
§§" -
.
§§- . 
GetAttributeAsEnum
§§. @
<
§§@ A
TiledMap
§§A I
.
§§I J
MapOrientation
§§J X
>
§§X Y
(
§§Y Z
goXml
§§Z _
,
§§_ `
$str
§§a n
)
§§n o
;
§§o p
map
•• 
.
•• 
StaggerAxis
•• 
=
••  !
ImportUtils
••" -
.
••- . 
GetAttributeAsEnum
••. @
<
••@ A
TiledMap
••A I
.
••I J
MapStaggerAxis
••J X
>
••X Y
(
••Y Z
goXml
••Z _
,
••_ `
$str
••a n
)
••n o
;
••o p
map
¶¶ 
.
¶¶ 
StaggerIndex
¶¶  
=
¶¶! "
ImportUtils
¶¶# .
.
¶¶. / 
GetAttributeAsEnum
¶¶/ A
<
¶¶A B
TiledMap
¶¶B J
.
¶¶J K
MapStaggerIndex
¶¶K Z
>
¶¶Z [
(
¶¶[ \
goXml
¶¶\ a
,
¶¶a b
$str
¶¶c q
)
¶¶q r
;
¶¶r s
map
ßß 
.
ßß 
HexSideLength
ßß !
=
ßß" #
ImportUtils
ßß$ /
.
ßß/ 0
GetAttributeAsInt
ßß0 A
(
ßßA B
goXml
ßßB G
,
ßßG H
$str
ßßI X
)
ßßX Y
;
ßßY Z
map
®® 
.
®® 
	NumLayers
®® 
=
®® 
ImportUtils
®®  +
.
®®+ ,
GetAttributeAsInt
®®, =
(
®®= >
goXml
®®> C
,
®®C D
$str
®®E P
)
®®P Q
;
®®Q R
map
©© 
.
©© 
NumTilesWide
©©  
=
©©! "
ImportUtils
©©# .
.
©©. /
GetAttributeAsInt
©©/ @
(
©©@ A
goXml
©©A F
,
©©F G
$str
©©H V
)
©©V W
;
©©W X
map
™™ 
.
™™ 
NumTilesHigh
™™  
=
™™! "
ImportUtils
™™# .
.
™™. /
GetAttributeAsInt
™™/ @
(
™™@ A
goXml
™™A F
,
™™F G
$str
™™H V
)
™™V W
;
™™W X
map
´´ 
.
´´ 
	TileWidth
´´ 
=
´´ 
ImportUtils
´´  +
.
´´+ ,
GetAttributeAsInt
´´, =
(
´´= >
goXml
´´> C
,
´´C D
$str
´´E P
)
´´P Q
;
´´Q R
map
¨¨ 
.
¨¨ 

TileHeight
¨¨ 
=
¨¨  
ImportUtils
¨¨! ,
.
¨¨, -
GetAttributeAsInt
¨¨- >
(
¨¨> ?
goXml
¨¨? D
,
¨¨D E
$str
¨¨F R
)
¨¨R S
;
¨¨S T
map
≠≠ 
.
≠≠ 
ExportScale
≠≠ 
=
≠≠  !
ImportUtils
≠≠" -
.
≠≠- .!
GetAttributeAsFloat
≠≠. A
(
≠≠A B
goXml
≠≠B G
,
≠≠G H
$str
≠≠I V
)
≠≠V W
;
≠≠W X
map
ÆÆ 
.
ÆÆ 
MapWidthInPixels
ÆÆ $
=
ÆÆ% &
ImportUtils
ÆÆ' 2
.
ÆÆ2 3
GetAttributeAsInt
ÆÆ3 D
(
ÆÆD E
goXml
ÆÆE J
,
ÆÆJ K
$str
ÆÆL ^
)
ÆÆ^ _
;
ÆÆ_ `
map
ØØ 
.
ØØ 
MapHeightInPixels
ØØ %
=
ØØ& '
ImportUtils
ØØ( 3
.
ØØ3 4
GetAttributeAsInt
ØØ4 E
(
ØØE F
goXml
ØØF K
,
ØØK L
$str
ØØM `
)
ØØ` a
;
ØØa b
map
∞∞ 
.
∞∞ 
BackgroundColor
∞∞ #
=
∞∞$ %
ImportUtils
∞∞& 1
.
∞∞1 2!
GetAttributeAsColor
∞∞2 E
(
∞∞E F
goXml
∞∞F K
,
∞∞K L
$str
∞∞M ^
,
∞∞^ _
Color
∞∞` e
.
∞∞e f
black
∞∞f k
)
∞∞k l
;
∞∞l m
}
±± 
catch
≤≤ 
{
≥≥ 
importComponent
¥¥ 
.
¥¥  
RecordWarning
¥¥  -
(
¥¥- .
$str¥¥. ì
)¥¥ì î
;¥¥î ï

GameObject
µµ 
.
µµ 
DestroyImmediate
µµ +
(
µµ+ ,
map
µµ, /
)
µµ/ 0
;
µµ0 1
}
∂∂ 
}
∑∑ 	
private
ππ 
void
ππ $
HandleCustomProperties
ππ +
(
ππ+ ,

GameObject
ππ, 6

gameObject
ππ7 A
,
ππA B
XElement
ππC K
goXml
ππL Q
,
ππQ R
IList
ππS X
<
ππX Y"
ICustomTiledImporter
ππY m
>
ππm n
	importers
ππo x
)
ππx y
{
∫∫ 	
var
ªª 
props
ªª 
=
ªª 
from
ªª 
p
ªª 
in
ªª !
goXml
ªª" '
.
ªª' (
Elements
ªª( 0
(
ªª0 1
$str
ªª1 ;
)
ªª; <
select
ºº 
new
ºº "
{
ºº# $
Name
ºº% )
=
ºº* +
p
ºº, -
.
ºº- .
	Attribute
ºº. 7
(
ºº7 8
$str
ºº8 >
)
ºº> ?
.
ºº? @
Value
ºº@ E
,
ººE F
Value
ººG L
=
ººM N
p
ººO P
.
ººP Q
	Attribute
ººQ Z
(
ººZ [
$str
ºº[ b
)
ººb c
.
ººc d
Value
ººd i
}
ººj k
;
ººk l
if
ææ 
(
ææ 
props
ææ 
.
ææ 
Count
ææ 
(
ææ 
)
ææ 
>
ææ 
$num
ææ  !
)
ææ! "
{
øø 
var
¿¿ 

dictionary
¿¿ 
=
¿¿  
props
¿¿! &
.
¿¿& '
OrderBy
¿¿' .
(
¿¿. /
p
¿¿/ 0
=>
¿¿1 3
p
¿¿4 5
.
¿¿5 6
Name
¿¿6 :
)
¿¿: ;
.
¿¿; <
ToDictionary
¿¿< H
(
¿¿H I
p
¿¿I J
=>
¿¿K M
p
¿¿N O
.
¿¿O P
Name
¿¿P T
,
¿¿T U
p
¿¿V W
=>
¿¿X Z
p
¿¿[ \
.
¿¿\ ]
Value
¿¿] b
)
¿¿b c
;
¿¿c d
foreach
¡¡ 
(
¡¡ "
ICustomTiledImporter
¡¡ -
importer
¡¡. 6
in
¡¡7 9
	importers
¡¡: C
)
¡¡C D
{
¬¬ 
importer
√√ 
.
√√ $
HandleCustomProperties
√√ 3
(
√√3 4

gameObject
√√4 >
,
√√> ?

dictionary
√√@ J
)
√√J K
;
√√K L
}
ƒƒ 
}
≈≈ 
}
∆∆ 	
private
»» 
void
»» 
CustomizePrefab
»» $
(
»»$ %

GameObject
»»% /
prefab
»»0 6
,
»»6 7
IList
»»8 =
<
»»= >"
ICustomTiledImporter
»»> R
>
»»R S
	importers
»»T ]
)
»»] ^
{
…… 	
foreach
   
(
   "
ICustomTiledImporter
   )
importer
  * 2
in
  3 5
	importers
  6 ?
)
  ? @
{
ÀÀ 
importer
ÃÃ 
.
ÃÃ 
CustomizePrefab
ÃÃ (
(
ÃÃ( )
prefab
ÃÃ) /
)
ÃÃ/ 0
;
ÃÃ0 1
}
ÕÕ 
}
ŒŒ 	
private
–– 
IList
–– 
<
–– "
ICustomTiledImporter
–– *
>
––* +(
GetCustomImporterInstances
––, F
(
––F G
ImportBehaviour
––G V
importComponent
––W f
)
––f g
{
—— 	
var
”” 

errorTypes
”” 
=
”” 
from
”” !
a
””" #
in
””$ &
	AppDomain
””' 0
.
””0 1
CurrentDomain
””1 >
.
””> ?
GetAssemblies
””? L
(
””L M
)
””M N
from
‘‘ !
t
‘‘" #
in
‘‘$ &
a
‘‘' (
.
‘‘( )
GetTypes
‘‘) 1
(
‘‘1 2
)
‘‘2 3
where
’’ "
typeof
’’# )
(
’’) *"
ICustomTiledImporter
’’* >
)
’’> ?
.
’’? @
IsAssignableFrom
’’@ P
(
’’P Q
t
’’Q R
)
’’R S
where
÷÷ "
!
÷÷# $
t
÷÷$ %
.
÷÷% &

IsAbstract
÷÷& 0
where
◊◊ "
System
◊◊# )
.
◊◊) *
	Attribute
◊◊* 3
.
◊◊3 4 
GetCustomAttribute
◊◊4 F
(
◊◊F G
t
◊◊G H
,
◊◊H I
typeof
◊◊J P
(
◊◊P Q*
CustomTiledImporterAttribute
◊◊Q m
)
◊◊m n
)
◊◊n o
==
◊◊p r
null
◊◊s w
select
ÿÿ #
t
ÿÿ$ %
;
ÿÿ% &
foreach
ŸŸ 
(
ŸŸ 
var
ŸŸ 
t
ŸŸ 
in
ŸŸ 

errorTypes
ŸŸ (
)
ŸŸ( )
{
⁄⁄ 
importComponent
€€ 
.
€€  
RecordError
€€  +
(
€€+ ,
$str
€€, u
,
€€u v
t
€€w x
)
€€x y
;
€€y z
}
‹‹ 
var
ﬂﬂ 
types
ﬂﬂ 
=
ﬂﬂ 
from
ﬂﬂ 
a
ﬂﬂ 
in
ﬂﬂ !
	AppDomain
ﬂﬂ" +
.
ﬂﬂ+ ,
CurrentDomain
ﬂﬂ, 9
.
ﬂﬂ9 :
GetAssemblies
ﬂﬂ: G
(
ﬂﬂG H
)
ﬂﬂH I
from
‡‡ 
t
‡‡ 
in
‡‡ !
a
‡‡" #
.
‡‡# $
GetTypes
‡‡$ ,
(
‡‡, -
)
‡‡- .
where
·· 
typeof
·· $
(
··$ %"
ICustomTiledImporter
··% 9
)
··9 :
.
··: ;
IsAssignableFrom
··; K
(
··K L
t
··L M
)
··M N
where
‚‚ 
!
‚‚ 
t
‚‚  
.
‚‚  !

IsAbstract
‚‚! +
from
„„ 
attr
„„ !
in
„„" $
System
„„% +
.
„„+ ,
	Attribute
„„, 5
.
„„5 6!
GetCustomAttributes
„„6 I
(
„„I J
t
„„J K
,
„„K L
typeof
„„M S
(
„„S T*
CustomTiledImporterAttribute
„„T p
)
„„p q
)
„„q r
let
‰‰ 
custom
‰‰ "
=
‰‰# $
attr
‰‰% )
as
‰‰* ,*
CustomTiledImporterAttribute
‰‰- I
orderby
ÂÂ 
custom
ÂÂ  &
.
ÂÂ& '
Order
ÂÂ' ,
select
ÊÊ 
t
ÊÊ  
;
ÊÊ  !
var
ËË 
	instances
ËË 
=
ËË 
types
ËË !
.
ËË! "
Select
ËË" (
(
ËË( )
t
ËË) *
=>
ËË+ -
(
ËË. /"
ICustomTiledImporter
ËË/ C
)
ËËC D
	Activator
ËËD M
.
ËËM N
CreateInstance
ËËN \
(
ËË\ ]
t
ËË] ^
)
ËË^ _
)
ËË_ `
;
ËË` a
return
ÈÈ 
	instances
ÈÈ 
.
ÈÈ 
ToList
ÈÈ #
(
ÈÈ# $
)
ÈÈ$ %
;
ÈÈ% &
}
ÍÍ 	
}
ÎÎ 
}ÏÏ ﬁ"
pC:\Users\Administrator\Desktop\git_wine\wine-game\Assets\Tiled2Unity\Scripts\Editor\ImportTiled2Unity.Texture.cs
	namespace

 	
Tiled2Unity


 
{ 
partial 
class 
ImportTiled2Unity #
{ 
public 
void 
TextureImported #
(# $
string$ *
texturePath+ 6
)6 7
{ 	
string 
asset 
= 
System !
.! "
IO" $
.$ %
Path% )
.) *
GetFileName* 5
(5 6
texturePath6 A
)A B
;B C
foreach 
( 
var 
importComponent (
in) +
ImportBehaviour, ;
.; <5
)EnumerateImportBehaviors_ByWaitingTexture< e
(e f
assetf k
)k l
)l m
{ 
if 
( 
! 
importComponent $
.$ %#
ImportComplete_Textures% <
.< =
Contains= E
(E F
assetF K
,K L
StringComparerM [
.[ \
OrdinalIgnoreCase\ m
)m n
)n o
{ 
importComponent #
.# $#
ImportComplete_Textures$ ;
.; <
Add< ?
(? @
asset@ E
)E F
;F G
} 
if 
( 
importComponent #
.# $'
IsTextureImportingCompleted$ ?
(? @
)@ A
)A B
{ 
ImportAllMaterials &
(& '
importComponent' 6
)6 7
;7 8
} 
}   
}!! 	
private## 
void## 
ImportAllTextures## &
(##& '
Tiled2Unity##' 2
.##2 3
ImportBehaviour##3 B
importComponent##C R
)##R S
{$$ 	
foreach&& 
(&& 
var&& 
xmlImportTexture&& )
in&&* ,
importComponent&&- <
.&&< =
XmlDocument&&= H
.&&H I
Root&&I M
.&&M N
Elements&&N V
(&&V W
$str&&W f
)&&f g
)&&g h
{'' 
string(( 
filename(( 
=((  !
ImportUtils((" -
.((- . 
GetAttributeAsString((. B
(((B C
xmlImportTexture((C S
,((S T
$str((U _
)((_ `
;((` a
string)) 
data)) 
=)) 
xmlImportTexture)) .
.)). /
Value))/ 4
;))4 5
byte** 
[** 
]** 
bytes** 
=** 
ImportUtils** *
.*** +
Base64ToBytes**+ 8
(**8 9
data**9 =
)**= >
;**> ?
if-- 
(-- 
!-- 
importComponent-- $
.--$ %
ImportWait_Textures--% 8
.--8 9
Contains--9 A
(--A B
filename--B J
,--J K
StringComparer--L Z
.--Z [
OrdinalIgnoreCase--[ l
)--l m
)--m n
{.. 
importComponent// #
.//# $
ImportWait_Textures//$ 7
.//7 8
Add//8 ;
(//; <
filename//< D
)//D E
;//E F
}00 
string33 

pathToSave33 !
=33" #
GetTextureAssetPath33$ 7
(337 8
filename338 @
)33@ A
;33A B
ImportUtils44 
.44 
ReadyToWrite44 (
(44( )

pathToSave44) 3
)443 4
;444 5
File55 
.55 
WriteAllBytes55 "
(55" #

pathToSave55# -
,55- .
bytes55/ 4
)554 5
;555 6
importComponent66 
.66  "
ImportTiled2UnityAsset66  6
(666 7

pathToSave667 A
)66A B
;66B C
}77 
if:: 
(:: 
importComponent:: 
.::  
ImportWait_Textures::  3
.::3 4
Count::4 9
(::9 :
)::: ;
==::< >
$num::? @
)::@ A
{;; 
ImportAllMaterials<< "
(<<" #
importComponent<<# 2
)<<2 3
;<<3 4
}== 
}>> 	
}?? 
}@@ úH
lC:\Users\Administrator\Desktop\git_wine\wine-game\Assets\Tiled2Unity\Scripts\Editor\ImportTiled2Unity.Xml.cs
	namespace 	
Tiled2Unity
 
{ 
partial 
class 
ImportTiled2Unity #
{ 
public 
void 
ImportBegin 
(  
string  &
xmlPath' .
,. /
Tiled2Unity0 ;
.; <
ImportTiled2Unity< M
importTiled2UnityN _
)_ `
{ 	

GameObject 
t2uImporter "
=# $
new% (

GameObject) 3
(3 4
$str4 L
)L M
;M N
t2uImporter 
. 

gameObject "
." #
	transform# ,
., -
SetAsFirstSibling- >
(> ?
)? @
;@ A
var 
importComponent 
=  !
t2uImporter" -
.- .
AddComponent. :
<: ;
Tiled2Unity; F
.F G
ImportBehaviourG V
>V W
(W X
)X Y
;Y Z
if"" 
("" 
LoadTiled2UnityXml"" "
(""" #
importComponent""# 2
,""2 3
xmlPath""4 ;
)""; <
)""< =
{## 
CheckVersion$$ 
($$ 
importComponent$$ ,
,$$, -
importTiled2Unity$$. ?
)$$? @
;$$@ A
ImportAllTextures'' !
(''! "
importComponent''" 1
)''1 2
;''2 3
}(( 
})) 	
private++ 
bool++ 
LoadTiled2UnityXml++ '
(++' (
ImportBehaviour++( 7
importComponent++8 G
,++G H
string++I O
xmlPath++P W
)++W X
{,, 	
try-- 
{.. 
var// 
xml// 
=// 
	XDocument// #
.//# $
Load//$ (
(//( )
xmlPath//) 0
)//0 1
;//1 2
importComponent00 
.00  
XmlDocument00  +
=00, -
xml00. 1
;001 2
var22 
xmlTiled2Unity22 "
=22# $
xml22% (
.22( )
Element22) 0
(220 1
$str221 >
)22> ?
;22? @
importComponent33 
.33  
Tiled2UnityXmlPath33  2
=333 4
xmlPath335 <
;33< =
importComponent44 
.44  &
ExporterTiled2UnityVersion44  :
=44; <
ImportUtils44= H
.44H I 
GetAttributeAsString44I ]
(44] ^
xmlTiled2Unity44^ l
,44l m
$str44n w
)44w x
;44x y
return55 
true55 
;55 
}66 
catch77 
(77 
	Exception77 
e77 
)77 
{88 
string99 
msg99 
=99 
String99 #
.99# $
Format99$ *
(99* +
$str99+ \
,99\ ]
xmlPath99^ e
,99e f
e99g h
.99h i
Message99i p
)99p q
;99q r
Debug:: 
.:: 
LogError:: 
(:: 
msg:: "
)::" #
;::# $
importComponent;; 
.;;  "
DestroyImportBehaviour;;  6
(;;6 7
);;7 8
;;;8 9
}<< 
return>> 
false>> 
;>> 
}?? 	
privateAA 
voidAA 
CheckVersionAA !
(AA! "
Tiled2UnityAA" -
.AA- .
ImportBehaviourAA. =
importComponentAA> M
,AAM N
Tiled2UnityAAO Z
.AAZ [
ImportTiled2UnityAA[ l
importTiled2UnityAAm ~
)AA~ 
{BB 	
tryCC 
{DD 
	TextAssetFF 
	textAssetFF #
=FF$ %
importTiled2UnityFF& 7
.FF7 8#
GetTiled2UnityTextAssetFF8 O
(FFO P
)FFP Q
;FFQ R
	XDocumentGG 
xmlGG 
=GG 
	XDocumentGG  )
.GG) *
ParseGG* /
(GG/ 0
	textAssetGG0 9
.GG9 :
textGG: >
)GG> ?
;GG? @
stringHH &
importerTiled2UnityVersionHH 1
=HH2 3
xmlHH4 7
.HH7 8
ElementHH8 ?
(HH? @
$strHH@ U
)HHU V
.HHV W
ElementHHW ^
(HH^ _
$strHH_ g
)HHg h
.HHh i
	AttributeHHi r
(HHr s
$strHHs |
)HH| }
.HH} ~
Value	HH~ É
;
HHÉ Ñ
ifJJ 
(JJ 
importComponentJJ #
.JJ# $&
ExporterTiled2UnityVersionJJ$ >
!=JJ? A&
importerTiled2UnityVersionJJB \
)JJ\ ]
{KK 
importComponentLL #
.LL# $
RecordWarningLL$ 1
(LL1 2
$str	LL2 è
,
LLè ê
importComponent
LLë †
.
LL† ° 
Tiled2UnityXmlPath
LL° ≥
,
LL≥ ¥
importComponent
LLµ ƒ
.
LLƒ ≈(
ExporterTiled2UnityVersion
LL≈ ﬂ
,
LLﬂ ‡(
importerTiled2UnityVersion
LL· ˚
)
LL˚ ¸
;
LL¸ ˝
}MM 
}NN 
catchOO 
(OO 
	ExceptionOO 
eOO 
)OO 
{PP 
importComponentQQ 
.QQ  
RecordErrorQQ  +
(QQ+ ,
$strQQ, g
,QQg h
importComponentQQi x
.QQx y
Tiled2UnityXmlPath	QQy ã
,
QQã å
e
QQç é
.
QQé è
Message
QQè ñ
)
QQñ ó
;
QQó ò
}RR 
}SS 	
privateUU 
UnityEngineUU 
.UU 
MaterialUU $!
CreateMaterialFromXmlUU% :
(UU: ;
XElementUU; C
xmlUUD G
,UUG H
Tiled2UnityUUI T
.UUT U
ImportBehaviourUUU d
importComponentUUe t
)UUt u
{VV 	
boolXX 
useColorKeyXX 
=XX 
xmlXX "
.XX" #
	AttributeXX# ,
(XX, -
$strXX- <
)XX< =
!=XX> @
nullXXA E
;XXE F
boolYY 
usesDepthShaderYY  
=YY! "
ImportUtilsYY# .
.YY. /!
GetAttributeAsBooleanYY/ D
(YYD E
xmlYYE H
,YYH I
$strYYJ \
,YY\ ]
falseYY^ c
)YYc d
;YYd e
string\\ 

shaderName\\ 
=\\ 
$str\\  .
;\\. /
if__ 
(__ 
usesDepthShader__ 
)__  
{`` 

shaderNameaa 
+=aa 
$straa %
;aa% &
}bb 
elsecc 
{dd 

shaderNameee 
+=ee 
$stree '
;ee' (
}ff 
Colorii 
keyColorii 
=ii 
Colorii "
.ii" #
blackii# (
;ii( )
ifjj 
(jj 
useColorKeyjj 
)jj 
{kk 
keyColorll 
=ll 
ImportUtilsll &
.ll& '
GetAttributeAsColorll' :
(ll: ;
xmlll; >
,ll> ?
$strll@ O
)llO P
;llP Q

shaderNamemm 
+=mm 
$strmm *
;mm* +
}nn 
UnityEngineqq 
.qq 
Materialqq  
materialqq! )
=qq* +
nullqq, 0
;qq0 1
tryrr 
{ss 
materialtt 
=tt 
newtt 
UnityEnginett *
.tt* +
Materialtt+ 3
(tt3 4
UnityEnginett4 ?
.tt? @
Shadertt@ F
.ttF G
FindttG K
(ttK L

shaderNamettL V
)ttV W
)ttW X
;ttX Y
}uu 
catchvv 
(vv 
	Exceptionvv 
evv 
)vv 
{ww 
importComponentxx 
.xx  
RecordErrorxx  +
(xx+ ,
$strxx, \
,xx\ ]

shaderNamexx^ h
,xxh i
exxj k
.xxk l
Messagexxl s
)xxs t
;xxt u
}yy 
if{{ 
({{ 
material{{ 
=={{ 
null{{  
){{  !
{|| 
importComponent}} 
.}}  
RecordWarning}}  -
(}}- .
$str}}. X
)}}X Y
;}}Y Z
material~~ 
=~~ 
new~~ 
UnityEngine~~ *
.~~* +
Material~~+ 3
(~~3 4
UnityEngine~~4 ?
.~~? @
Shader~~@ F
.~~F G
Find~~G K
(~~K L
$str~~L ]
)~~] ^
)~~^ _
;~~_ `
} 
if
ÅÅ 
(
ÅÅ 
useColorKey
ÅÅ 
)
ÅÅ 
{
ÇÇ 
material
ÉÉ 
.
ÉÉ 
SetColor
ÉÉ !
(
ÉÉ! "
$str
ÉÉ" 2
,
ÉÉ2 3
keyColor
ÉÉ4 <
)
ÉÉ< =
;
ÉÉ= >
}
ÑÑ 
return
ÜÜ 
material
ÜÜ 
;
ÜÜ 
}
áá 	
}
àà 
}ââ ±n
hC:\Users\Administrator\Desktop\git_wine\wine-game\Assets\Tiled2Unity\Scripts\Editor\ImportTiled2Unity.cs
	namespace 	
Tiled2Unity
 
{ 
partial 
class 
ImportTiled2Unity #
:$ %
IDisposable& 1
{ 
private 
string 
fullPathToFile %
=& '
$str( *
;* +
private 
string !
pathToTiled2UnityRoot ,
=- .
$str/ 1
;1 2
private 
string &
assetPathToTiled2UnityRoot 1
=2 3
$str4 6
;6 7
public 
ImportTiled2Unity  
(  !
string! '
file( ,
), -
{ 	
this 
. 
fullPathToFile 
=  !
System" (
.( )
IO) +
.+ ,
Path, 0
.0 1
GetFullPath1 <
(< =
file= A
)A B
;B C
this 
. !
pathToTiled2UnityRoot &
=' (
System) /
./ 0
IO0 2
.2 3
Path3 7
.7 8
GetDirectoryName8 H
(H I
thisI M
.M N
fullPathToFileN \
)\ ]
;] ^
int 
index 
= 
this 
. !
pathToTiled2UnityRoot 2
.2 3
LastIndexOf3 >
(> ?
$str? L
,L M
StringComparisonN ^
.^ _&
InvariantCultureIgnoreCase_ y
)y z
;z {
if 
( 
index 
== 
- 
$num 
) 
{ 
Debug 
. 
LogError 
( 
String %
.% &
Format& ,
(, -
$str	- à
,
à â
file
ä é
)
é è
)
è ê
;
ê ë
} 
else 
{ 
this   
.   !
pathToTiled2UnityRoot   *
=  + ,
this  - 1
.  1 2!
pathToTiled2UnityRoot  2 G
.  G H
Remove  H N
(  N O
index  O T
+  U V
$str  W d
.  d e
Length  e k
)  k l
;  l m
}!! 
this## 
.## 
fullPathToFile## 
=##  !
this##" &
.##& '
fullPathToFile##' 5
.##5 6
Replace##6 =
(##= >
System##> D
.##D E
IO##E G
.##G H
Path##H L
.##L M"
DirectorySeparatorChar##M c
,##c d
$char##e h
)##h i
;##i j
this$$ 
.$$ !
pathToTiled2UnityRoot$$ &
=$$' (
this$$) -
.$$- .!
pathToTiled2UnityRoot$$. C
.$$C D
Replace$$D K
($$K L
System$$L R
.$$R S
IO$$S U
.$$U V
Path$$V Z
.$$Z ["
DirectorySeparatorChar$$[ q
,$$q r
$char$$s v
)$$v w
;$$w x
this'' 
.'' &
assetPathToTiled2UnityRoot'' +
='', -
this''. 2
.''2 3!
pathToTiled2UnityRoot''3 H
.''H I
Remove''I O
(''O P
$num''P Q
,''Q R
Application''S ^
.''^ _
dataPath''_ g
.''g h
Count''h m
(''m n
)''n o
)''o p
;''p q
this(( 
.(( &
assetPathToTiled2UnityRoot(( +
=((, -
$str((. 6
+((7 8
this((9 =
.((= >&
assetPathToTiled2UnityRoot((> X
;((X Y
})) 	
public++ 
bool++ 
IsTiled2UnityFile++ %
(++% &
)++& '
{,, 	
return-- 
this-- 
.-- 
fullPathToFile-- &
.--& '
EndsWith--' /
(--/ 0
$str--0 B
)--B C
;--C D
}.. 	
public00 
bool00  
IsTiled2UnityTexture00 (
(00( )
)00) *
{11 	
bool22 

startsWith22 
=22 
this22 "
.22" #
fullPathToFile22# 1
.221 2
Contains222 :
(22: ;
$str22; S
)22S T
;22T U
bool33 
endsWithTxt33 
=33 
this33 #
.33# $
fullPathToFile33$ 2
.332 3
EndsWith333 ;
(33; <
$str33< B
)33B C
;33C D
return44 

startsWith44 
&&44  
!44! "
endsWithTxt44" -
;44- .
}55 	
public77 
bool77 !
IsTiled2UnityMaterial77 )
(77) *
)77* +
{88 	
bool99 

startsWith99 
=99 
this99 "
.99" #
fullPathToFile99# 1
.991 2
Contains992 :
(99: ;
$str99; T
)99T U
;99U V
bool:: 
endsWith:: 
=:: 
this::  
.::  !
fullPathToFile::! /
.::/ 0
EndsWith::0 8
(::8 9
$str::9 ?
)::? @
;::@ A
return;; 

startsWith;; 
&&;;  
endsWith;;! )
;;;) *
}<< 	
public>> 
bool>> %
IsTiled2UnityWavefrontObj>> -
(>>- .
)>>. /
{?? 	
bool@@ 
contains@@ 
=@@ 
this@@  
.@@  !
fullPathToFile@@! /
.@@/ 0
Contains@@0 8
(@@8 9
$str@@9 O
)@@O P
;@@P Q
boolAA 
endsWithAA 
=AA 
thisAA  
.AA  !
fullPathToFileAA! /
.AA/ 0
EndsWithAA0 8
(AA8 9
$strAA9 ?
)AA? @
;AA@ A
returnBB 
containsBB 
&&BB 
endsWithBB '
;BB' (
}CC 	
publicEE 
boolEE 
IsTiled2UnityPrefabEE '
(EE' (
)EE( )
{FF 	
boolGG 

startsWithGG 
=GG 
thisGG "
.GG" #
fullPathToFileGG# 1
.GG1 2
ContainsGG2 :
(GG: ;
$strGG; R
)GGR S
;GGS T
boolHH 
endsWithHH 
=HH 
thisHH  
.HH  !
fullPathToFileHH! /
.HH/ 0
EndsWithHH0 8
(HH8 9
$strHH9 B
)HHB C
;HHC D
returnII 

startsWithII 
&&II  
endsWithII! )
;II) *
}JJ 	
publicLL 
stringLL 
GetMeshAssetPathLL &
(LL& '
stringLL' -
fileLL. 2
)LL2 3
{MM 	
stringNN 
nameNN 
=NN 
SystemNN  
.NN  !
IONN! #
.NN# $
PathNN$ (
.NN( )'
GetFileNameWithoutExtensionNN) D
(NND E
fileNNE I
)NNI J
;NNJ K
stringOO 
	meshAssetOO 
=OO 
StringOO %
.OO% &
FormatOO& ,
(OO, -
$strOO- A
,OOA B
thisOOC G
.OOG H&
assetPathToTiled2UnityRootOOH b
,OOb c
nameOOd h
)OOh i
;OOi j
returnPP 
	meshAssetPP 
;PP 
}QQ 	
publicSS 
stringSS !
MakeMaterialAssetPathSS +
(SS+ ,
stringSS, 2
fileSS3 7
,SS7 8
boolSS9 =

isResourceSS> H
)SSH I
{TT 	
stringUU 
nameUU 
=UU 
SystemUU  
.UU  !
IOUU! #
.UU# $
PathUU$ (
.UU( )'
GetFileNameWithoutExtensionUU) D
(UUD E
fileUUE I
)UUI J
;UUJ K
ifVV 
(VV 

isResourceVV 
)VV 
{WW 
returnXX 
StringXX 
.XX 
FormatXX $
(XX$ %
$strXX% F
,XXF G
thisXXH L
.XXL M&
assetPathToTiled2UnityRootXXM g
,XXg h
nameXXi m
)XXm n
;XXn o
}YY 
return\\ 
String\\ 
.\\ 
Format\\  
(\\  !
$str\\! 8
,\\8 9
this\\: >
.\\> ?&
assetPathToTiled2UnityRoot\\? Y
,\\Y Z
name\\[ _
)\\_ `
;\\` a
}]] 	
public__ 
string__ (
GetExistingMaterialAssetPath__ 2
(__2 3
string__3 9
file__: >
)__> ?
{`` 	
stringbb 
namebb 
=bb 
Systembb  
.bb  !
IObb! #
.bb# $
Pathbb$ (
.bb( )'
GetFileNameWithoutExtensionbb) D
(bbD E
filebbE I
)bbI J
;bbJ K
stringcc 
filtercc 
=cc 
Stringcc "
.cc" #
Formatcc# )
(cc) *
$strcc* :
,cc: ;
namecc< @
)cc@ A
;ccA B
stringdd 
folderdd 
=dd 
thisdd  
.dd  !&
assetPathToTiled2UnityRootdd! ;
+dd< =
$strdd> J
;ddJ K
stringee 
[ee 
]ee 
filesee 
=ee 
AssetDatabaseee *
.ee* +

FindAssetsee+ 5
(ee5 6
filteree6 <
,ee< =
newee> A
stringeeB H
[eeH I
]eeI J
{eeK L
foldereeM S
}eeT U
)eeU V
;eeV W
foreachff 
(ff 
varff 
fff 
inff 
filesff #
)ff# $
{gg 
stringhh 
	assetPathhh  
=hh! "
AssetDatabasehh# 0
.hh0 1
GUIDToAssetPathhh1 @
(hh@ A
fhhA B
)hhB C
;hhC D
ifii 
(ii 
Stringii 
.ii 
Compareii "
(ii" #
Pathii# '
.ii' ('
GetFileNameWithoutExtensionii( C
(iiC D
	assetPathiiD M
)iiM N
,iiN O
nameiiP T
,iiT U
trueiiV Z
)iiZ [
==ii\ ^
$numii_ `
)ii` a
{jj 
returnkk 
	assetPathkk $
;kk$ %
}ll 
}mm 
returnnn 
$strnn 
;nn 
}oo 	
publicqq 
	TextAssetqq #
GetTiled2UnityTextAssetqq 0
(qq0 1
)qq1 2
{rr 	
stringss 
filess 
=ss 
thisss 
.ss &
assetPathToTiled2UnityRootss 9
+ss: ;
$strss< U
;ssU V
returntt 
AssetDatabasett  
.tt  !
LoadAssetAtPathtt! 0
(tt0 1
filett1 5
,tt5 6
typeoftt7 =
(tt= >
	TextAssettt> G
)ttG H
)ttH I
asttJ L
	TextAssetttM V
;ttV W
}uu 	
publicww 
stringww 
GetTextureAssetPathww )
(ww) *
stringww* 0
filenameww1 9
)ww9 :
{xx 	
filenamezz 
=zz 
Systemzz 
.zz 
IOzz  
.zz  !
Pathzz! %
.zz% &
GetFileNamezz& 1
(zz1 2
filenamezz2 :
)zz: ;
;zz; <
string{{ 
textureAsset{{ 
={{  !
String{{" (
.{{( )
Format{{) /
({{/ 0
$str{{0 B
,{{B C
this{{D H
.{{H I&
assetPathToTiled2UnityRoot{{I c
,{{c d
filename{{e m
){{m n
;{{n o
return|| 
textureAsset|| 
;||  
}}} 	
public 
string 
GetPrefabAssetPath (
(( )
string) /
name0 4
,4 5
bool6 :

isResource; E
,E F
stringG M
	extraPathN W
)W X
{
ÄÄ 	
string
ÅÅ 
prefabAsset
ÅÅ 
=
ÅÅ  
$str
ÅÅ! #
;
ÅÅ# $
if
ÇÇ 
(
ÇÇ 

isResource
ÇÇ 
)
ÇÇ 
{
ÉÉ 
if
ÑÑ 
(
ÑÑ 
String
ÑÑ 
.
ÑÑ 
IsNullOrEmpty
ÑÑ (
(
ÑÑ( )
	extraPath
ÑÑ) 2
)
ÑÑ2 3
)
ÑÑ3 4
{
ÖÖ 
prefabAsset
áá 
=
áá  !
String
áá" (
.
áá( )
Format
áá) /
(
áá/ 0
$str
áá0 R
,
ááR S
this
ááT X
.
ááX Y(
assetPathToTiled2UnityRoot
ááY s
,
áás t
name
ááu y
)
ááy z
;
ááz {
}
àà 
else
ââ 
{
ää 
prefabAsset
åå 
=
åå  !
String
åå" (
.
åå( )
Format
åå) /
(
åå/ 0
$str
åå0 V
,
ååV W
this
ååX \
.
åå\ ](
assetPathToTiled2UnityRoot
åå] w
,
ååw x
	extraPathååy Ç
,ååÇ É
nameååÑ à
)ååà â
;ååâ ä
}
çç 
}
éé 
else
èè 
{
êê 
prefabAsset
ëë 
=
ëë 
String
ëë $
.
ëë$ %
Format
ëë% +
(
ëë+ ,
$str
ëë, D
,
ëëD E
this
ëëF J
.
ëëJ K(
assetPathToTiled2UnityRoot
ëëK e
,
ëëe f
name
ëëg k
)
ëëk l
;
ëël m
}
íí 
return
îî 
prefabAsset
îî 
;
îî 
}
ïï 	
public
óó 
void
óó 
Dispose
óó 
(
óó 
)
óó 
{
òò 	
}
ôô 	
}
öö 
}õõ ≥ï
bC:\Users\Administrator\Desktop\git_wine\wine-game\Assets\Tiled2Unity\Scripts\Editor\ImportUtils.cs
	namespace 	
Tiled2Unity
 
{ 
class 	
ImportUtils
 
{ 
public 
static 
string  
GetAttributeAsString 1
(1 2
XElement2 :
elem; ?
,? @
stringA G
attrNameH P
)P Q
{ 	
return 
elem 
. 
	Attribute !
(! "
attrName" *
)* +
.+ ,
Value, 1
;1 2
} 	
public 
static 
string  
GetAttributeAsString 1
(1 2
XElement2 :
elem; ?
,? @
stringA G
attrNameH P
,P Q
stringR X
defaultValueY e
)e f
{ 	

XAttribute 
attr 
= 
elem "
." #
	Attribute# ,
(, -
attrName- 5
)5 6
;6 7
if 
( 
attr 
== 
null 
) 
{ 
return 
defaultValue #
;# $
} 
return    
GetAttributeAsString   '
(  ' (
elem  ( ,
,  , -
attrName  . 6
)  6 7
;  7 8
}!! 	
public## 
static## 
int## 
GetAttributeAsInt## +
(##+ ,
XElement##, 4
elem##5 9
,##9 :
string##; A
attrName##B J
)##J K
{$$ 	
return%% 
Convert%% 
.%% 
ToInt32%% "
(%%" #
elem%%# '
.%%' (
	Attribute%%( 1
(%%1 2
attrName%%2 :
)%%: ;
.%%; <
Value%%< A
)%%A B
;%%B C
}&& 	
public(( 
static(( 
int(( 
GetAttributeAsInt(( +
(((+ ,
XElement((, 4
elem((5 9
,((9 :
string((; A
attrName((B J
,((J K
int((L O
defaultValue((P \
)((\ ]
{)) 	

XAttribute** 
attr** 
=** 
elem** "
.**" #
	Attribute**# ,
(**, -
attrName**- 5
)**5 6
;**6 7
if++ 
(++ 
attr++ 
==++ 
null++ 
)++ 
{,, 
return-- 
defaultValue-- #
;--# $
}.. 
return// 
GetAttributeAsInt// $
(//$ %
elem//% )
,//) *
attrName//+ 3
)//3 4
;//4 5
}00 	
public22 
static22 
float22 
GetAttributeAsFloat22 /
(22/ 0
XElement220 8
elem229 =
,22= >
string22? E
attrName22F N
)22N O
{33 	
return44 
Convert44 
.44 
ToSingle44 #
(44# $
elem44$ (
.44( )
	Attribute44) 2
(442 3
attrName443 ;
)44; <
.44< =
Value44= B
)44B C
;44C D
}55 	
public77 
static77 
float77 
GetAttributeAsFloat77 /
(77/ 0
XElement770 8
elem779 =
,77= >
string77? E
attrName77F N
,77N O
float77P U
defaultValue77V b
)77b c
{88 	

XAttribute99 
attr99 
=99 
elem99 "
.99" #
	Attribute99# ,
(99, -
attrName99- 5
)995 6
;996 7
if:: 
(:: 
attr:: 
==:: 
null:: 
):: 
{;; 
return<< 
defaultValue<< #
;<<# $
}== 
return>> 
GetAttributeAsFloat>> &
(>>& '
elem>>' +
,>>+ ,
attrName>>- 5
)>>5 6
;>>6 7
}?? 	
publicAA 
staticAA 
boolAA !
GetAttributeAsBooleanAA 0
(AA0 1
XElementAA1 9
elemAA: >
,AA> ?
stringAA@ F
attrNameAAG O
)AAO P
{BB 	
returnCC 
ConvertCC 
.CC 
	ToBooleanCC $
(CC$ %
elemCC% )
.CC) *
	AttributeCC* 3
(CC3 4
attrNameCC4 <
)CC< =
.CC= >
ValueCC> C
)CCC D
;CCD E
}DD 	
publicFF 
staticFF 
boolFF !
GetAttributeAsBooleanFF 0
(FF0 1
XElementFF1 9
elemFF: >
,FF> ?
stringFF@ F
attrNameFFG O
,FFO P
boolFFQ U
defaultValueFFV b
)FFb c
{GG 	

XAttributeHH 
attrHH 
=HH 
elemHH "
.HH" #
	AttributeHH# ,
(HH, -
attrNameHH- 5
)HH5 6
;HH6 7
ifII 
(II 
attrII 
==II 
nullII 
)II 
{JJ 
returnKK 
defaultValueKK #
;KK# $
}LL 
returnMM !
GetAttributeAsBooleanMM (
(MM( )
elemMM) -
,MM- .
attrNameMM/ 7
)MM7 8
;MM8 9
}NN 	
publicPP 
staticPP 
TPP 
GetStringAsEnumPP '
<PP' (
TPP( )
>PP) *
(PP* +
stringPP+ 1

enumStringPP2 <
)PP< =
{QQ 	

enumStringRR 
=RR 

enumStringRR #
.RR# $
ReplaceRR$ +
(RR+ ,
$strRR, /
,RR/ 0
$strRR1 4
)RR4 5
;RR5 6
TTT 
valueTT 
=TT 
defaultTT 
(TT 
TTT 
)TT  
;TT  !
tryUU 
{VV 
valueWW 
=WW 
(WW 
TWW 
)WW 
EnumWW 
.WW  
ParseWW  %
(WW% &
typeofWW& ,
(WW, -
TWW- .
)WW. /
,WW/ 0

enumStringWW1 ;
,WW; <
trueWW= A
)WWA B
;WWB C
}XX 
catchYY 
{ZZ 
StringBuilder[[ 
msg[[ !
=[[" #
new[[$ '
StringBuilder[[( 5
([[5 6
)[[6 7
;[[7 8
msg\\ 
.\\ 
AppendFormat\\  
(\\  !
$str\\! R
,\\R S

enumString\\T ^
,\\^ _
typeof\\` f
(\\f g
T\\g h
)\\h i
.\\i j
ToString\\j r
(\\r s
)\\s t
)\\t u
;\\u v
msg]] 
.]] 
AppendFormat]]  
(]]  !
$str]]! 1
)]]1 2
;]]2 3
foreach__ 
(__ 
T__ 
t__ 
in__ 
Enum__  $
.__$ %
	GetValues__% .
(__. /
typeof__/ 5
(__5 6
T__6 7
)__7 8
)__8 9
)__9 :
{`` 
msgaa 
.aa 
AppendFormataa $
(aa$ %
$straa% .
,aa. /
taa0 1
.aa1 2
ToStringaa2 :
(aa: ;
)aa; <
)aa< =
;aa= >
}bb 
Debugcc 
.cc 
LogErrorcc 
(cc 
msgcc "
.cc" #
ToStringcc# +
(cc+ ,
)cc, -
)cc- .
;cc. /
}dd 
returnff 
valueff 
;ff 
}gg 	
publicii 
staticii 
Tii 
GetAttributeAsEnumii *
<ii* +
Tii+ ,
>ii, -
(ii- .
XElementii. 6
elemii7 ;
,ii; <
stringii= C
attrNameiiD L
)iiL M
{jj 	
stringkk 

enumStringkk 
=kk 
elemkk  $
.kk$ %
	Attributekk% .
(kk. /
attrNamekk/ 7
)kk7 8
.kk8 9
Valuekk9 >
.kk> ?
Replacekk? F
(kkF G
$strkkG J
,kkJ K
$strkkL O
)kkO P
;kkP Q
returnll 
GetStringAsEnumll "
<ll" #
Tll# $
>ll$ %
(ll% &

enumStringll& 0
)ll0 1
;ll1 2
}mm 	
publicoo 
staticoo 
stringoo "
GetAttributeAsFullPathoo 3
(oo3 4
XElementoo4 <
elemoo= A
,ooA B
stringooC I
attrNameooJ R
)ooR S
{pp 	
returnqq 
Systemqq 
.qq 
IOqq 
.qq 
Pathqq !
.qq! "
GetFullPathqq" -
(qq- .
elemqq. 2
.qq2 3
	Attributeqq3 <
(qq< =
attrNameqq= E
)qqE F
.qqF G
ValueqqG L
)qqL M
;qqM N
}rr 	
publictt 
statictt 
Colortt 
GetAttributeAsColortt /
(tt/ 0
XElementtt0 8
elemtt9 =
,tt= >
stringtt? E
attrNamettF N
)ttN O
{uu 	
stringvv 
	htmlColorvv 
=vv  
GetAttributeAsStringvv 3
(vv3 4
elemvv4 8
,vv8 9
attrNamevv: B
)vvB C
;vvC D
ifyy 
(yy 
!yy 
	htmlColoryy 
.yy 

StartsWithyy %
(yy% &
$stryy& )
)yy) *
)yy* +
{zz 
	htmlColor{{ 
={{ 
$str{{ 
+{{  !
	htmlColor{{" +
;{{+ ,
}|| 
if~~ 
(~~ 
	htmlColor~~ 
.~~ 
Length~~  
==~~! #
$num~~$ %
)~~% &
{ 
byte
ÅÅ 
a
ÅÅ 
=
ÅÅ 
byte
ÅÅ 
.
ÅÅ 
Parse
ÅÅ #
(
ÅÅ# $
	htmlColor
ÅÅ$ -
.
ÅÅ- .
	Substring
ÅÅ. 7
(
ÅÅ7 8
$num
ÅÅ8 9
,
ÅÅ9 :
$num
ÅÅ; <
)
ÅÅ< =
,
ÅÅ= >
System
ÅÅ? E
.
ÅÅE F
Globalization
ÅÅF S
.
ÅÅS T
NumberStyles
ÅÅT `
.
ÅÅ` a
	HexNumber
ÅÅa j
)
ÅÅj k
;
ÅÅk l
byte
ÇÇ 
r
ÇÇ 
=
ÇÇ 
byte
ÇÇ 
.
ÇÇ 
Parse
ÇÇ #
(
ÇÇ# $
	htmlColor
ÇÇ$ -
.
ÇÇ- .
	Substring
ÇÇ. 7
(
ÇÇ7 8
$num
ÇÇ8 9
,
ÇÇ9 :
$num
ÇÇ; <
)
ÇÇ< =
,
ÇÇ= >
System
ÇÇ? E
.
ÇÇE F
Globalization
ÇÇF S
.
ÇÇS T
NumberStyles
ÇÇT `
.
ÇÇ` a
	HexNumber
ÇÇa j
)
ÇÇj k
;
ÇÇk l
byte
ÉÉ 
g
ÉÉ 
=
ÉÉ 
byte
ÉÉ 
.
ÉÉ 
Parse
ÉÉ #
(
ÉÉ# $
	htmlColor
ÉÉ$ -
.
ÉÉ- .
	Substring
ÉÉ. 7
(
ÉÉ7 8
$num
ÉÉ8 9
,
ÉÉ9 :
$num
ÉÉ; <
)
ÉÉ< =
,
ÉÉ= >
System
ÉÉ? E
.
ÉÉE F
Globalization
ÉÉF S
.
ÉÉS T
NumberStyles
ÉÉT `
.
ÉÉ` a
	HexNumber
ÉÉa j
)
ÉÉj k
;
ÉÉk l
byte
ÑÑ 
b
ÑÑ 
=
ÑÑ 
byte
ÑÑ 
.
ÑÑ 
Parse
ÑÑ #
(
ÑÑ# $
	htmlColor
ÑÑ$ -
.
ÑÑ- .
	Substring
ÑÑ. 7
(
ÑÑ7 8
$num
ÑÑ8 9
,
ÑÑ9 :
$num
ÑÑ; <
)
ÑÑ< =
,
ÑÑ= >
System
ÑÑ? E
.
ÑÑE F
Globalization
ÑÑF S
.
ÑÑS T
NumberStyles
ÑÑT `
.
ÑÑ` a
	HexNumber
ÑÑa j
)
ÑÑj k
;
ÑÑk l
return
ÖÖ 
new
ÖÖ 
Color32
ÖÖ "
(
ÖÖ" #
r
ÖÖ# $
,
ÖÖ$ %
g
ÖÖ& '
,
ÖÖ' (
b
ÖÖ) *
,
ÖÖ* +
a
ÖÖ, -
)
ÖÖ- .
;
ÖÖ. /
}
ÜÜ 
else
áá 
if
áá 
(
áá 
	htmlColor
áá 
.
áá 
Length
áá %
==
áá& (
$num
áá) *
)
áá* +
{
àà 
byte
ää 
r
ää 
=
ää 
byte
ää 
.
ää 
Parse
ää #
(
ää# $
	htmlColor
ää$ -
.
ää- .
	Substring
ää. 7
(
ää7 8
$num
ää8 9
,
ää9 :
$num
ää; <
)
ää< =
,
ää= >
System
ää? E
.
ääE F
Globalization
ääF S
.
ääS T
NumberStyles
ääT `
.
ää` a
	HexNumber
ääa j
)
ääj k
;
ääk l
byte
ãã 
g
ãã 
=
ãã 
byte
ãã 
.
ãã 
Parse
ãã #
(
ãã# $
	htmlColor
ãã$ -
.
ãã- .
	Substring
ãã. 7
(
ãã7 8
$num
ãã8 9
,
ãã9 :
$num
ãã; <
)
ãã< =
,
ãã= >
System
ãã? E
.
ããE F
Globalization
ããF S
.
ããS T
NumberStyles
ããT `
.
ãã` a
	HexNumber
ããa j
)
ããj k
;
ããk l
byte
åå 
b
åå 
=
åå 
byte
åå 
.
åå 
Parse
åå #
(
åå# $
	htmlColor
åå$ -
.
åå- .
	Substring
åå. 7
(
åå7 8
$num
åå8 9
,
åå9 :
$num
åå; <
)
åå< =
,
åå= >
System
åå? E
.
ååE F
Globalization
ååF S
.
ååS T
NumberStyles
ååT `
.
åå` a
	HexNumber
ååa j
)
ååj k
;
ååk l
return
çç 
new
çç 
Color32
çç "
(
çç" #
r
çç# $
,
çç$ %
g
çç& '
,
çç' (
b
çç) *
,
çç* +
$num
çç, /
)
çç/ 0
;
çç0 1
}
éé 
return
ëë 
Color
ëë 
.
ëë 
magenta
ëë  
;
ëë  !
}
íí 	
public
îî 
static
îî 
Color
îî !
GetAttributeAsColor
îî /
(
îî/ 0
XElement
îî0 8
elem
îî9 =
,
îî= >
string
îî? E
attrName
îîF N
,
îîN O
Color
îîP U
defaultValue
îîV b
)
îîb c
{
ïï 	

XAttribute
ññ 
attr
ññ 
=
ññ 
elem
ññ "
.
ññ" #
	Attribute
ññ# ,
(
ññ, -
attrName
ññ- 5
)
ññ5 6
;
ññ6 7
if
óó 
(
óó 
attr
óó 
==
óó 
null
óó 
)
óó 
{
òò 
return
ôô 
defaultValue
ôô #
;
ôô# $
}
öö 
return
õõ !
GetAttributeAsColor
õõ &
(
õõ& '
elem
õõ' +
,
õõ+ ,
attrName
õõ- 5
)
õõ5 6
;
õõ6 7
}
úú 	
public
ûû 
static
ûû 
void
ûû 
ReadyToWrite
ûû '
(
ûû' (
string
ûû( .
path
ûû/ 3
)
ûû3 4
{
üü 	
FileInfo
°° 
info
°° 
=
°° 
new
°° 
FileInfo
°°  (
(
°°( )
path
°°) -
)
°°- .
;
°°. /
info
¢¢ 
.
¢¢ 
	Directory
¢¢ 
.
¢¢ 
Create
¢¢ !
(
¢¢! "
)
¢¢" #
;
¢¢# $
if
•• 
(
•• 
(
•• 
info
•• 
.
•• 

Attributes
••  
&
••! "
FileAttributes
••# 1
.
••1 2
ReadOnly
••2 :
)
••: ;
==
••< >
FileAttributes
••? M
.
••M N
ReadOnly
••N V
)
••V W
{
¶¶ 
throw
ßß 
new
ßß 
UnityException
ßß (
(
ßß( )
String
ßß) /
.
ßß/ 0
Format
ßß0 6
(
ßß6 7
$str
ßß7 I
,
ßßI J
path
ßßK O
)
ßßO P
)
ßßP Q
;
ßßQ R
}
®® 
}
©© 	
public
¨¨ 
static
¨¨ 
T
¨¨ "
CreateOrReplaceAsset
¨¨ ,
<
¨¨, -
T
¨¨- .
>
¨¨. /
(
¨¨/ 0
T
¨¨0 1
asset
¨¨2 7
,
¨¨7 8
string
¨¨9 ?
path
¨¨@ D
)
¨¨D E
where
¨¨F K
T
¨¨L M
:
¨¨N O
UnityEngine
¨¨P [
.
¨¨[ \
Object
¨¨\ b
{
≠≠ 	
T
ÆÆ 
existingAsset
ÆÆ 
=
ÆÆ 
(
ÆÆ 
T
ÆÆ  
)
ÆÆ  !
AssetDatabase
ÆÆ! .
.
ÆÆ. /
LoadAssetAtPath
ÆÆ/ >
(
ÆÆ> ?
path
ÆÆ? C
,
ÆÆC D
typeof
ÆÆE K
(
ÆÆK L
T
ÆÆL M
)
ÆÆM N
)
ÆÆN O
;
ÆÆO P
if
∞∞ 
(
∞∞ 
existingAsset
∞∞ 
==
∞∞  
null
∞∞! %
)
∞∞% &
{
±± 
AssetDatabase
≤≤ 
.
≤≤ 
CreateAsset
≤≤ )
(
≤≤) *
asset
≤≤* /
,
≤≤/ 0
path
≤≤1 5
)
≤≤5 6
;
≤≤6 7
existingAsset
≥≥ 
=
≥≥ 
asset
≥≥  %
;
≥≥% &
}
¥¥ 
else
µµ 
{
∂∂ 
EditorUtility
∑∑ 
.
∑∑ 
CopySerialized
∑∑ ,
(
∑∑, -
asset
∑∑- 2
,
∑∑2 3
existingAsset
∑∑4 A
)
∑∑A B
;
∑∑B C
}
∏∏ 
return
∫∫ 
existingAsset
∫∫  
;
∫∫  !
}
ªª 	
public
ΩΩ 
static
ΩΩ 
byte
ΩΩ 
[
ΩΩ 
]
ΩΩ 
Base64ToBytes
ΩΩ *
(
ΩΩ* +
string
ΩΩ+ 1
base64
ΩΩ2 8
)
ΩΩ8 9
{
ææ 	
return
øø 
Convert
øø 
.
øø 
FromBase64String
øø +
(
øø+ ,
base64
øø, 2
)
øø2 3
;
øø3 4
}
¿¿ 	
public
¬¬ 
static
¬¬ 
string
¬¬ 
Base64ToString
¬¬ +
(
¬¬+ ,
string
¬¬, 2
base64
¬¬3 9
)
¬¬9 :
{
√√ 	
byte
ƒƒ 
[
ƒƒ 
]
ƒƒ 
bytes
ƒƒ 
=
ƒƒ 
Convert
ƒƒ "
.
ƒƒ" #
FromBase64String
ƒƒ# 3
(
ƒƒ3 4
base64
ƒƒ4 :
)
ƒƒ: ;
;
ƒƒ; <
return
≈≈ 
Encoding
≈≈ 
.
≈≈ 
ASCII
≈≈ !
.
≈≈! "
	GetString
≈≈" +
(
≈≈+ ,
bytes
≈≈, 1
)
≈≈1 2
;
≈≈2 3
}
∆∆ 	
}
ÿÿ 
public
⁄⁄ 

static
⁄⁄ 
class
⁄⁄ 
HelperExtensions
⁄⁄ (
{
€€ 
}
ÈÈ 
}ÍÍ ÇL
pC:\Users\Administrator\Desktop\git_wine\wine-game\Assets\Tiled2Unity\Scripts\Editor\SortingLayerExposedEditor.cs
[ 
CustomEditor 
( 
typeof 
( 
Tiled2Unity  
.  !
SortingLayerExposed! 4
)4 5
)5 6
]6 7
public 
class %
SortingLayerExposedEditor &
:' (
UnityEditor) 4
.4 5
Editor5 ;
{ 
public 

override 
void 
OnInspectorGUI '
(' (
)( )
{ 
var 
renderer 
= 
( 
target 
as !
SortingLayerExposed" 5
)5 6
.6 7

gameObject7 A
.A B
GetComponentB N
<N O
RendererO W
>W X
(X Y
)Y Z
;Z [
if 

( 
! 
renderer 
) 
{ 	
return 
; 
} 	
string 
[ 
] 
sortLayerNames 
=  ! 
GetSortingLayerNames" 6
(6 7
)7 8
;8 9
int 
sortLayerSelection 
=   
GetSortingLayerIndex! 5
(5 6
renderer6 >
,> ?
sortLayerNames@ N
)N O
;O P

GUIContent   
[   
]    
sortingLayerContexts   )
=  * +#
GetSortingLayerContexts  , C
(  C D
)  D E
;  E F
int!!  
newSortingLayerIndex!!  
=!!! "
EditorGUILayout!!# 2
.!!2 3
Popup!!3 8
(!!8 9
new!!9 <

GUIContent!!= G
(!!G H
$str!!H W
)!!W X
,!!X Y
sortLayerSelection!!Z l
,!!l m!
sortingLayerContexts	!!n Ç
)
!!Ç É
;
!!É Ñ
if"" 

(""  
newSortingLayerIndex""  
==""! # 
sortingLayerContexts""$ 8
.""8 9
Length""9 ?
-""@ A
$num""B C
)""C D
{## 	
EditorApplication$$ 
.$$ 
ExecuteMenuItem$$ -
($$- .
$str$$. U
)$$U V
;$$V W
}%% 	
else&& 
if&& 
(&&  
newSortingLayerIndex&& %
!=&&& (
sortLayerSelection&&) ;
)&&; <
{'' 	
string)) 
newSortingLayerName)) &
=))' (
sortLayerNames))) 7
[))7 8 
newSortingLayerIndex))8 L
]))L M
;))M N
Undo++ 
.++ 
RecordObject++ 
(++ 
renderer++ &
,++& '
$str++( ?
)++? @
;++@ A
renderer,, 
.,, 
sortingLayerName,, %
=,,& '
newSortingLayerName,,( ;
;,,; <
EditorUtility// 
.// 
SetDirty// "
(//" #
renderer//# +
)//+ ,
;//, -
}00 	
int33  
newSortingLayerOrder33  
=33! "
EditorGUILayout33# 2
.332 3
IntField333 ;
(33; <
$str33< L
,33L M
renderer33N V
.33V W
sortingOrder33W c
)33c d
;33d e
if44 

(44  
newSortingLayerOrder44  
!=44! #
renderer44$ ,
.44, -
sortingOrder44- 9
)449 :
{55 	
Undo66 
.66 
RecordObject66 
(66 
renderer66 &
,66& '
$str66( <
)66< =
;66= >
renderer77 
.77 
sortingOrder77 !
=77" # 
newSortingLayerOrder77$ 8
;778 9
EditorUtility88 
.88 
SetDirty88 "
(88" #
renderer88# +
)88+ ,
;88, -
}99 	
}:: 
public<< 

static<< 

GUIContent<< 
[<< 
]<< #
GetSortingLayerContexts<< 6
(<<6 7
)<<7 8
{== 
List>> 
<>> 

GUIContent>> 
>>> 
contexts>> !
=>>" #
new>>$ '
List>>( ,
<>>, -

GUIContent>>- 7
>>>7 8
(>>8 9
)>>9 :
;>>: ;
foreach@@ 
(@@ 
string@@ 
	layerName@@ !
in@@" $ 
GetSortingLayerNames@@% 9
(@@9 :
)@@: ;
)@@; <
{AA 	
contextsBB 
.BB 
AddBB 
(BB 
newBB 

GUIContentBB '
(BB' (
	layerNameBB( 1
)BB1 2
)BB2 3
;BB3 4
}CC 	
contextsEE 
.EE 
AddEE 
(EE 

GUIContentEE 
.EE  
noneEE  $
)EE$ %
;EE% &
contextsFF 
.FF 
AddFF 
(FF 
newFF 

GUIContentFF #
(FF# $
$strFF$ 4
)FF4 5
)FF5 6
;FF6 7
returnHH 
contextsHH 
.HH 
ToArrayHH 
(HH  
)HH  !
;HH! "
}II 
publicLL 

staticLL 
stringLL 
[LL 
]LL  
GetSortingLayerNamesLL /
(LL/ 0
)LL0 1
{MM 
TypeNN %
internalEditorUtilityTypeNN &
=NN' (
typeofNN) /
(NN/ 0
UnityEditorInternalNN0 C
.NNC D!
InternalEditorUtilityNND Y
)NNY Z
;NNZ [
PropertyInfoOO !
sortingLayersPropertyOO *
=OO+ ,%
internalEditorUtilityTypeOO- F
.OOF G
GetPropertyOOG R
(OOR S
$strOOS f
,OOf g
BindingFlagsOOh t
.OOt u
StaticOOu {
|OO| }
BindingFlags	OO~ ä
.
OOä ã
	NonPublic
OOã î
)
OOî ï
;
OOï ñ
returnPP 
(PP 
stringPP 
[PP 
]PP 
)PP !
sortingLayersPropertyPP .
.PP. /
GetValuePP/ 7
(PP7 8
nullPP8 <
,PP< =
newPP> A
objectPPB H
[PPH I
$numPPI J
]PPJ K
)PPK L
;PPL M
}QQ 
publicTT 

intTT 
[TT 
]TT $
GetSortingLayerUniqueIDsTT )
(TT) *
)TT* +
{UU 
TypeVV %
internalEditorUtilityTypeVV &
=VV' (
typeofVV) /
(VV/ 0
UnityEditorInternalVV0 C
.VVC D!
InternalEditorUtilityVVD Y
)VVY Z
;VVZ [
PropertyInfoWW )
sortingLayerUniqueIDsPropertyWW 2
=WW3 4%
internalEditorUtilityTypeWW5 N
.WWN O
GetPropertyWWO Z
(WWZ [
$strWW[ r
,WWr s
BindingFlags	WWt Ä
.
WWÄ Å
Static
WWÅ á
|
WWà â
BindingFlags
WWä ñ
.
WWñ ó
	NonPublic
WWó †
)
WW† °
;
WW° ¢
returnXX 
(XX 
intXX 
[XX 
]XX 
)XX )
sortingLayerUniqueIDsPropertyXX 3
.XX3 4
GetValueXX4 <
(XX< =
nullXX= A
,XXA B
newXXC F
objectXXG M
[XXM N
$numXXN O
]XXO P
)XXP Q
;XXQ R
}YY 
public[[ 

static[[ 
int[[  
GetSortingLayerIndex[[ *
([[* +
Renderer[[+ 3
renderer[[4 <
,[[< =
string[[> D
[[[D E
][[E F

layerNames[[G Q
)[[Q R
{\\ 
for]] 
(]] 
int]] 
i]] 
=]] 
$num]] 
;]] 
i]] 
<]] 

layerNames]] &
.]]& '
Length]]' -
;]]- .
++]]/ 1
i]]1 2
)]]2 3
{^^ 	
if__ 
(__ 

layerNames__ 
[__ 
i__ 
]__ 
==__  
renderer__! )
.__) *
sortingLayerName__* :
)__: ;
return`` 
i`` 
;`` 
ifcc 
(cc 

layerNamescc 
[cc 
icc 
]cc 
==cc  
$strcc! *
&&cc+ -
Stringcc. 4
.cc4 5
IsNullOrEmptycc5 B
(ccB C
rendererccC K
.ccK L
sortingLayerNameccL \
)cc\ ]
)cc] ^
returndd 
idd 
;dd 
}ee 	
returngg 
$numgg 
;gg 
}hh 
publicjj 

staticjj 
intjj "
GetSortingLayerIdIndexjj ,
(jj, -
Rendererjj- 5
rendererjj6 >
,jj> ?
intjj@ C
[jjC D
]jjD E
layerIdsjjF N
)jjN O
{kk 
forll 
(ll 
intll 
ill 
=ll 
$numll 
;ll 
ill 
<ll 
layerIdsll $
.ll$ %
Lengthll% +
;ll+ ,
++ll- /
ill/ 0
)ll0 1
{mm 	
ifnn 
(nn 
layerIdsnn 
[nn 
inn 
]nn 
==nn 
renderernn '
.nn' (
sortingLayerIDnn( 6
)nn6 7
returnoo 
ioo 
;oo 
}pp 	
returnrr 
$numrr 
;rr 
}ss 
}uu ô
mC:\Users\Administrator\Desktop\git_wine\wine-game\Assets\Tiled2Unity\Scripts\Editor\SpriteDepthInMapEditor.cs
	namespace		 	
Tiled2Unity		
 
{

 
[ 
CustomEditor 
( 
typeof 
( 
SpriteDepthInMap )
)) *
)* +
]+ ,
public 

class "
SpriteDepthInMapEditor '
:( )
UnityEditor* 5
.5 6
Editor6 <
{ 
public 
override 
void 
OnInspectorGUI +
(+ ,
), -
{ 	 
DrawDefaultInspector  
(  !
)! "
;" #
SpriteDepthInMap 
depthSprite (
=) *
(+ ,
SpriteDepthInMap, <
)< =
target= C
;C D
if 
( 
	GUILayout 
. 
Button  
(  !
$str! K
)K L
)L M
{ 
if 
( 
depthSprite 
.  
AttachedMap  +
==, .
null/ 3
)3 4
{ 
Debug 
. 
LogError "
(" #
$str# T
)T U
;U V
} 
else 
{ 
depthSprite 
.  
UpdateSpriteDepth  1
(1 2
)2 3
;3 4
} 
} 
} 	
}   
}!! ≥1
kC:\Users\Administrator\Desktop\git_wine\wine-game\Assets\Tiled2Unity\Scripts\Editor\Tiled2UnityMenuItems.cs
	namespace 	
Tiled2Unity
 
{ 
class 	 
Tiled2UnityMenuItems
 
{ 
[ 	
MenuItem	 
( 
$str >
)> ?
]? @
static 
void 
ExportLibrary !
(! "
)" #
{ 	
	TextAsset 
	textAsset 
=  !
AssetDatabase" /
./ 0
LoadAssetAtPath0 ?
(? @
$str@ k
,k l
typeofm s
(s t
	TextAssett }
)} ~
)~ 
as
Ä Ç
	TextAsset
É å
;
å ç
	XDocument 
xml 
= 
	XDocument %
.% &
Parse& +
(+ ,
	textAsset, 5
.5 6
text6 :
): ;
;; <
string 
version 
= 
xml  
.  !
Element! (
(( )
$str) >
)> ?
.? @
Element@ G
(G H
$strH P
)P Q
.Q R
	AttributeR [
([ \
$str\ e
)e f
.f g
Valueg l
;l m
string 
name 
= 
String  
.  !
Format! '
(' (
$str( F
,F G
versionH O
)O P
;P Q
var 
path 
= 
EditorUtility $
.$ %
SaveFilePanel% 2
(2 3
$str3 _
,_ `
$stra c
,c d
namee i
,i j
$strk y
)y z
;z {
if   
(   
path   
.   
Length   
!=   
$num    
)    !
{!! 
List"" 
<"" 
string"" 
>"" 
packageFiles"" )
=""* +
new"", /
List""0 4
<""4 5
string""5 ;
>""; <
(""< =
)""= >
;""> ?
packageFiles%% 
.%% 
AddRange%% %
(%%% &!
EnumerateAssetFilesAt%%& ;
(%%; <
$str%%< P
,%%P Q
$str%%Q V
,%%V W
$str%%X a
,%%a b
$str%%c k
,%%k l
$str%%m s
,%%s t
$str	%%u ä
,
%%ä ã
$str
%%å ®
)
%%® ©
)
%%© ™
;
%%™ ´
AssetDatabase&& 
.&& 
ExportPackage&& +
(&&+ ,
packageFiles&&, 8
.&&8 9
ToArray&&9 @
(&&@ A
)&&A B
,&&B C
path&&D H
)&&H I
;&&I J
}'' 
}(( 	
private66 
static66 
IEnumerable66 "
<66" #
string66# )
>66) *!
EnumerateAssetFilesAt66+ @
(66@ A
string66A G
dir66H K
,66K L
params66M S
string66T Z
[66Z [
]66[ \
endPatterns66] h
)66h i
{77 	
foreach88 
(88 
string88 
f88 
in88  
	Directory88! *
.88* +
GetFiles88+ 3
(883 4
dir884 7
)887 8
)888 9
{99 
if:: 
(:: 
endPatterns:: 
.::  
Any::  #
(::# $
pat::$ '
=>::( *
f::+ ,
.::, -
EndsWith::- 5
(::5 6
pat::6 9
,::9 :
true::; ?
,::? @
null::A E
)::E F
)::F G
)::G H
{;; 
yield<< 
return<<  
f<<! "
;<<" #
}== 
}>> 
foreach@@ 
(@@ 
string@@ 
d@@ 
in@@  
	Directory@@! *
.@@* +
GetDirectories@@+ 9
(@@9 :
dir@@: =
)@@= >
)@@> ?
{AA 
foreachBB 
(BB 
stringBB 
fBB  !
inBB" $!
EnumerateAssetFilesAtBB% :
(BB: ;
dBB; <
,BB< =
endPatternsBB> I
)BBI J
)BBJ K
{CC 
yieldDD 
returnDD  
fDD! "
;DD" #
}EE 
}FF 
}GG 	
privateII 
staticII 
voidII 
DeleteAssetsAtII *
(II* +
stringII+ 1
dirII2 5
)II5 6
{JJ 	
foreachLL 
(LL 
stringLL 
fLL 
inLL  
	DirectoryLL! *
.LL* +
GetFilesLL+ 3
(LL3 4
dirLL4 7
)LL7 8
)LL8 9
{MM 
ifNN 
(NN 
fNN 
.NN 
EndsWithNN 
(NN 
$strNN %
,NN% &
trueNN' +
,NN+ ,
nullNN- 1
)NN1 2
)NN2 3
continueOO 
;OO 
ifQQ 
(QQ 
fQQ 
.QQ 
EndsWithQQ 
(QQ 
$strQQ &
,QQ& '
trueQQ( ,
,QQ, -
nullQQ. 2
)QQ2 3
)QQ3 4
continueRR 
;RR 
ifUU 
(UU 
fUU 
.UU 
EndsWithUU 
(UU 
$strUU $
,UU$ %
trueUU& *
,UU* +
nullUU, 0
)UU0 1
)UU1 2
continueVV 
;VV 
ifYY 
(YY 
fYY 
.YY 
EndsWithYY 
(YY 
$strYY 4
,YY4 5
trueYY6 :
,YY: ;
nullYY< @
)YY@ A
)YYA B
continueZZ 
;ZZ 
if[[ 
([[ 
f[[ 
.[[ 
EndsWith[[ 
([[ 
$str[[ ;
,[[; <
true[[= A
,[[A B
null[[C G
)[[G H
)[[H I
continue\\ 
;\\ 
AssetDatabase^^ 
.^^ 
DeleteAsset^^ )
(^^) *
f^^* +
)^^+ ,
;^^, -
}__ 
}`` 	
}bb 
}cc ûb
nC:\Users\Administrator\Desktop\git_wine\wine-game\Assets\Tiled2Unity\Scripts\Editor\TiledAssetPostProcessor.cs
	namespace 	
Tiled2Unity
 
{ 
public 

class #
TiledAssetPostProcessor (
:) *
AssetPostprocessor+ =
{ 
private   
static   
bool   
UseThisImporter   +
(  + ,
string  , 2
	assetPath  3 <
)  < =
{!! 	
string)) 
[)) 
])) 
ignoreThese))  
=))! "
{))# $
$str))% *
,))* +
$str)), 2
,))2 3
$str))5 >
,))> ?
$str))@ B
,))B C
}))D E
;))E F
if** 
(** 
ignoreThese** 
.** 
Any** 
(**  
ext**  #
=>**$ &
String**' -
.**- .
Compare**. 5
(**5 6
ext**6 9
,**9 :
System**; A
.**A B
IO**B D
.**D E
Path**E I
.**I J
GetExtension**J V
(**V W
	assetPath**W `
)**` a
,**a b
true**c g
)**g h
==**i k
$num**l m
)**m n
)**n o
{++ 
return,, 
false,, 
;,, 
}-- 
if00 
(00 
	assetPath00 
.00 
EndsWith00 "
(00" #
$str00# 5
,005 6
StringComparison007 G
.00G H&
InvariantCultureIgnoreCase00H b
)00b c
)00c d
{11 
return22 
true22 
;22 
}33 
return66 
ImportBehaviour66 "
.66" #-
!IsAssetBeingImportedByTiled2Unity66# D
(66D E
	assetPath66E N
)66N O
;66O P
}88 	
private:: 
bool:: 
UseThisImporter:: $
(::$ %
)::% &
{;; 	
return<< 
UseThisImporter<< "
(<<" #
this<<# '
.<<' (
	assetPath<<( 1
)<<1 2
;<<2 3
}== 	
private?? 
static?? 
void?? "
OnPostprocessAllAssets?? 2
(??2 3
string??3 9
[??9 :
]??: ;
importedAssets??< J
,??J K
string??L R
[??R S
]??S T
deletedAssets??U b
,??b c
string??d j
[??j k
]??k l
movedAssets??m x
,??x y
string	??z Ä
[
??Ä Å
]
??Å Ç
movedFromPath
??É ê
)
??ê ë
{@@ 	
foreachAA 
(AA 
stringAA 
importedAA $
inAA% '
importedAssetsAA( 6
)AA6 7
{BB 
ifCC 
(CC 
UseThisImporterCC #
(CC# $
importedCC$ ,
)CC, -
)CC- .
{DD 
}FF 
elseGG 
{HH 
continueII 
;II 
}JJ 
usingMM 
(MM 
ImportTiled2UnityMM (
t2uImporterMM) 4
=MM5 6
newMM7 :
ImportTiled2UnityMM; L
(MML M
importedMMM U
)MMU V
)MMV W
{NN 
ifOO 
(OO 
t2uImporterOO #
.OO# $
IsTiled2UnityFileOO$ 5
(OO5 6
)OO6 7
)OO7 8
{PP 
t2uImporterRR #
.RR# $
ImportBeginRR$ /
(RR/ 0
importedRR0 8
,RR8 9
t2uImporterRR: E
)RRE F
;RRF G
}SS 
elseTT 
ifTT 
(TT 
t2uImporterTT (
.TT( ) 
IsTiled2UnityTextureTT) =
(TT= >
)TT> ?
)TT? @
{UU 
t2uImporterWW #
.WW# $
TextureImportedWW$ 3
(WW3 4
importedWW4 <
)WW< =
;WW= >
}XX 
elseYY 
ifYY 
(YY 
t2uImporterYY (
.YY( )!
IsTiled2UnityMaterialYY) >
(YY> ?
)YY? @
)YY@ A
{ZZ 
t2uImporter\\ #
.\\# $
MaterialImported\\$ 4
(\\4 5
imported\\5 =
)\\= >
;\\> ?
}]] 
else^^ 
if^^ 
(^^ 
t2uImporter^^ (
.^^( )%
IsTiled2UnityWavefrontObj^^) B
(^^B C
)^^C D
)^^D E
{__ 
t2uImporteraa #
.aa# $
MeshImportedaa$ 0
(aa0 1
importedaa1 9
)aa9 :
;aa: ;
}bb 
elsecc 
ifcc 
(cc 
t2uImportercc (
.cc( )
IsTiled2UnityPrefabcc) <
(cc< =
)cc= >
)cc> ?
{dd 
t2uImporterff #
.ff# $
PrefabImportedff$ 2
(ff2 3
importedff3 ;
)ff; <
;ff< =
}gg 
}hh 
}jj 
}kk 	
privatemm 
voidmm 
OnPreprocessModelmm &
(mm& '
)mm' (
{nn 	
ifoo 
(oo 
!oo 
UseThisImporteroo  
(oo  !
)oo! "
)oo" #
returnpp 
;pp 
ModelImporterrr 
modelImporterrr '
=rr( )
thisrr* .
.rr. /
assetImporterrr/ <
asrr= ?
ModelImporterrr@ M
;rrM N
modelImporterzz 
.zz 
importNormalszz '
=zz( ) 
ModelImporterNormalszz* >
.zz> ?
Importzz? E
;zzE F
modelImporter{{ 
.{{ 
importTangents{{ (
={{) *!
ModelImporterTangents{{+ @
.{{@ A
None{{A E
;{{E F
modelImporter~~ 
.~~ 
importBlendShapes~~ +
=~~, -
false~~. 3
;~~3 4
modelImporter
ÅÅ 
.
ÅÅ  
generateAnimations
ÅÅ ,
=
ÅÅ- .-
ModelImporterGenerateAnimations
ÅÅ/ N
.
ÅÅN O
None
ÅÅO S
;
ÅÅS T
modelImporter
ÇÇ 
.
ÇÇ 
animationType
ÇÇ '
=
ÇÇ( )(
ModelImporterAnimationType
ÇÇ* D
.
ÇÇD E
None
ÇÇE I
;
ÇÇI J
modelImporter
ÖÖ 
.
ÖÖ 
addCollider
ÖÖ %
=
ÖÖ& '
false
ÖÖ( -
;
ÖÖ- .
modelImporter
ââ 
.
ââ 
importMaterials
ââ )
=
ââ* +
false
ââ, 1
;
ââ1 2
}
éé 	
private
êê 
void
êê  
OnPostprocessModel
êê '
(
êê' (

GameObject
êê( 2

gameObject
êê3 =
)
êê= >
{
ëë 	
if
íí 
(
íí 
!
íí 
UseThisImporter
íí  
(
íí  !
)
íí! "
)
íí" #
return
ìì 
;
ìì 
foreach
ññ 
(
ññ 
MeshRenderer
ññ !
mr
ññ" $
in
ññ% '

gameObject
ññ( 2
.
ññ2 3%
GetComponentsInChildren
ññ3 J
<
ññJ K
MeshRenderer
ññK W
>
ññW X
(
ññX Y
)
ññY Z
)
ññZ [
{
óó 
mr
òò 
.
òò 

gameObject
òò 
.
òò 
AddComponent
òò *
<
òò* +!
SortingLayerExposed
òò+ >
>
òò> ?
(
òò? @
)
òò@ A
;
òòA B
mr
õõ 
.
õõ 
receiveShadows
õõ !
=
õõ" #
false
õõ$ )
;
õõ) *
mr
üü 
.
üü 
shadowCastingMode
üü $
=
üü% &
UnityEngine
üü' 2
.
üü2 3
	Rendering
üü3 <
.
üü< =
ShadowCastingMode
üü= N
.
üüN O
Off
üüO R
;
üüR S
mr
££ 
.
££ "
reflectionProbeUsage
££ '
=
££( )
UnityEngine
££* 5
.
££5 6
	Rendering
££6 ?
.
££? @"
ReflectionProbeUsage
££@ T
.
££T U
Off
££U X
;
££X Y
}
¨¨ 
}
≠≠ 	
private
ØØ 
UnityEngine
ØØ 
.
ØØ 
Material
ØØ $#
OnAssignMaterialModel
ØØ% :
(
ØØ: ;
Material
ØØ; C
defaultMaterial
ØØD S
,
ØØS T
Renderer
ØØU ]
renderer
ØØ^ f
)
ØØf g
{
∞∞ 	
if
±± 
(
±± 
!
±± 
UseThisImporter
±±  
(
±±  !
)
±±! "
)
±±" #
return
≤≤ 
null
≤≤ 
;
≤≤ 
string
µµ 
rootName
µµ 
=
µµ 
System
µµ $
.
µµ$ %
IO
µµ% '
.
µµ' (
Path
µµ( ,
.
µµ, -)
GetFileNameWithoutExtension
µµ- H
(
µµH I
this
µµI M
.
µµM N
	assetPath
µµN W
)
µµW X
;
µµX Y
ImportTiled2Unity
∏∏ 
importer
∏∏ &
=
∏∏' (
new
∏∏) ,
ImportTiled2Unity
∏∏- >
(
∏∏> ?
this
∏∏? C
.
∏∏C D
	assetPath
∏∏D M
)
∏∏M N
;
∏∏N O
return
ππ 
importer
ππ 
.
ππ (
FixMaterialForMeshRenderer
ππ 6
(
ππ6 7
rootName
ππ7 ?
,
ππ? @
renderer
ππA I
)
ππI J
;
ππJ K
}
ΩΩ 	
private
øø 
void
øø !
OnPreprocessTexture
øø (
(
øø( )
)
øø) *
{
¿¿ 	
if
¡¡ 
(
¡¡ 
!
¡¡ 
UseThisImporter
¡¡  
(
¡¡  !
)
¡¡! "
)
¡¡" #
return
¬¬ 
;
¬¬ 
if
ƒƒ 
(
ƒƒ 
!
ƒƒ 
string
ƒƒ 
.
ƒƒ 
IsNullOrEmpty
ƒƒ %
(
ƒƒ% &
this
ƒƒ& *
.
ƒƒ* +
assetImporter
ƒƒ+ 8
.
ƒƒ8 9
userData
ƒƒ9 A
)
ƒƒA B
)
ƒƒB C
{
≈≈ 
return
»» 
;
»» 
}
…… 
this
ÃÃ 
.
ÃÃ 
assetImporter
ÃÃ 
.
ÃÃ 
userData
ÃÃ '
=
ÃÃ( )
$str
ÃÃ* 7
;
ÃÃ7 8
TextureImporter
ŒŒ 
textureImporter
ŒŒ +
=
ŒŒ, -
this
ŒŒ. 2
.
ŒŒ2 3
assetImporter
ŒŒ3 @
as
ŒŒA C
TextureImporter
ŒŒD S
;
ŒŒS T
textureImporter
œœ 
.
œœ 
	npotScale
œœ %
=
œœ& '&
TextureImporterNPOTScale
œœ( @
.
œœ@ A
None
œœA E
;
œœE F
textureImporter
–– 
.
––  
convertToNormalmap
–– .
=
––/ 0
false
––1 6
;
––6 7
textureImporter
—— 
.
—— !
alphaIsTransparency
—— /
=
——0 1
true
——2 6
;
——6 7
textureImporter
““ 
.
““ 
spriteImportMode
““ ,
=
““- .
SpriteImportMode
““/ ?
.
““? @
None
““@ D
;
““D E
textureImporter
”” 
.
”” 
mipmapEnabled
”” )
=
””* +
false
””, 1
;
””1 2
textureImporter
‘‘ 
.
‘‘ 

filterMode
‘‘ &
=
‘‘' (

FilterMode
‘‘) 3
.
‘‘3 4
Point
‘‘4 9
;
‘‘9 :
textureImporter
’’ 
.
’’ 
wrapMode
’’ $
=
’’% &
TextureWrapMode
’’' 6
.
’’6 7
Clamp
’’7 <
;
’’< =
textureImporter
›› 
.
›› 
textureType
›› '
=
››( )!
TextureImporterType
››* =
.
››= >
Default
››> E
;
››E F
textureImporter
ﬁﬁ 
.
ﬁﬁ 
alphaSource
ﬁﬁ '
=
ﬁﬁ( )(
TextureImporterAlphaSource
ﬁﬁ* D
.
ﬁﬁD E
	FromInput
ﬁﬁE N
;
ﬁﬁN O
textureImporter
ﬂﬂ 
.
ﬂﬂ 
sRGBTexture
ﬂﬂ '
=
ﬂﬂ( )
false
ﬂﬂ* /
;
ﬂﬂ/ 0
textureImporter
‡‡ 
.
‡‡ 
textureShape
‡‡ (
=
‡‡) *"
TextureImporterShape
‡‡+ ?
.
‡‡? @
	Texture2D
‡‡@ I
;
‡‡I J
textureImporter
·· 
.
··  
textureCompression
·· .
=
··/ 0(
TextureImporterCompression
··1 K
.
··K L
Uncompressed
··L X
;
··X Y
}
„„ 	
}
ÂÂ 
}ÊÊ ≥
dC:\Users\Administrator\Desktop\git_wine\wine-game\Assets\Tiled2Unity\Scripts\Runtime\CircleObject.cs
	namespace 	
Tiled2Unity
 
{ 
public 

class 
CircleObject 
: 
	TmxObject  )
{		 
}

 
} ”
bC:\Users\Administrator\Desktop\git_wine\wine-game\Assets\Tiled2Unity\Scripts\Runtime\GroupLayer.cs
	namespace 	
Tiled2Unity
 
{		 
public

 

class

 

GroupLayer

 
:

 
Tiled2Unity

 )
.

) *
Layer

* /
{ 
} 
} ä	
gC:\Users\Administrator\Desktop\git_wine\wine-game\Assets\Tiled2Unity\Scripts\Runtime\ImportBehaviour.cs
	namespace 	
Tiled2Unity
 
{ 
public 

class 
ImportBehaviour  
:! "
MonoBehaviour# 0
{ 
public 
string 
Tiled2UnityXmlPath (
=) *
$str+ -
;- .
public 
string &
ExporterTiled2UnityVersion 0
=1 2
$str3 P
;P Q
private
øø 
void
øø 
Update
øø 
(
øø 
)
øø 
{
¿¿ 	
Debug
¡¡ 
.
¡¡ 
LogError
¡¡ 
(
¡¡ 
String
¡¡ !
.
¡¡! "
Format
¡¡" (
(
¡¡( )
$str¡¡) ≠
,¡¡≠ Æ
this¡¡Ø ≥
.¡¡≥ ¥"
Tiled2UnityXmlPath¡¡¥ ∆
,¡¡∆ «
this¡¡» Ã
.¡¡Ã Õ

gameObject¡¡Õ ◊
.¡¡◊ ÿ
name¡¡ÿ ‹
)¡¡‹ ›
)¡¡› ﬁ
;¡¡ﬁ ﬂ
}
¬¬ 	
}
ƒƒ 
}≈≈ ã
]C:\Users\Administrator\Desktop\git_wine\wine-game\Assets\Tiled2Unity\Scripts\Runtime\Layer.cs
	namespace 	
Tiled2Unity
 
{		 
public 

abstract 
class 
Layer 
:  !
MonoBehaviour" /
{ 
public 
Vector2 
Offset 
; 
} 
} û
cC:\Users\Administrator\Desktop\git_wine\wine-game\Assets\Tiled2Unity\Scripts\Runtime\ObjectLayer.cs
	namespace 	
Tiled2Unity
 
{		 
public

 

class

 
ObjectLayer

 
:

 
Tiled2Unity

 *
.

* +
Layer

+ 0
{ 
public 
Color 
Color 
; 
} 
} µ
eC:\Users\Administrator\Desktop\git_wine\wine-game\Assets\Tiled2Unity\Scripts\Runtime\PolygonObject.cs
	namespace 	
Tiled2Unity
 
{		 
public

 

class

 
PolygonObject

 
:

  
	TmxObject

! *
{ 
} 
} ∑
fC:\Users\Administrator\Desktop\git_wine\wine-game\Assets\Tiled2Unity\Scripts\Runtime\PolylineObject.cs
	namespace 	
Tiled2Unity
 
{ 
public 

class 
PolylineObject 
:  !
	TmxObject" +
{		 
}

 
} ·
gC:\Users\Administrator\Desktop\git_wine\wine-game\Assets\Tiled2Unity\Scripts\Runtime\RectangleObject.cs
	namespace 	
Tiled2Unity
 
{ 
public 

class 
RectangleObject  
:! "
Tiled2Unity# .
.. /
	TmxObject/ 8
{		 
}

 
} ≈
kC:\Users\Administrator\Desktop\git_wine\wine-game\Assets\Tiled2Unity\Scripts\Runtime\SortingLayerExposed.cs
	namespace 	
Tiled2Unity
 
{ 
public		 

class		 
SortingLayerExposed		 $
:		% &
MonoBehaviour		' 4
{

 
} 
} ç"
hC:\Users\Administrator\Desktop\git_wine\wine-game\Assets\Tiled2Unity\Scripts\Runtime\SpriteDepthInMap.cs
	namespace

 	
Tiled2Unity


 
{ 
public 

class 
SpriteDepthInMap !
:" #
MonoBehaviour$ 1
{ 
[ 	
Tooltip	 
( 
$str H
)H I
]I J
public 
Tiled2Unity 
. 
TiledMap #
AttachedMap$ /
=0 1
null2 6
;6 7
[ 	
Tooltip	 
( 
$str	 √
)
√ ƒ
]
ƒ ≈
public 
int 
InteractWithLayer $
=% &
$num' (
;( )
[ 	
Tooltip	 
( 
$str	 ¿
)
¿ ¡
]
¡ ¬
public 
int 
TilesetHeight  
=! "
$num# $
;$ %
private 
void 
Start 
( 
) 
{ 	
if 
( 
this 
. 
AttachedMap  
==! #
null$ (
)( )
{ 
Debug 
. 
LogError 
( 
String %
.% &
Format& ,
(, -
$str	- ∆
)
∆ «
)
« »
;
» …
return 
; 
} 
} 	
private   
void   
Update   
(   
)   
{!! 	
UpdateSpriteDepth"" 
("" 
)"" 
;""  
}## 	
public%% 
void%% 
UpdateSpriteDepth%% %
(%%% &
)%%& '
{&& 	
Vector3(( 
spritePosition(( "
=((# $
this((% )
.(() *

gameObject((* 4
.((4 5
	transform((5 >
.((> ?
position((? G
;((G H
spritePosition)) 
-=)) 
this)) "
.))" #
AttachedMap))# .
.)). /

gameObject))/ 9
.))9 :
	transform)): C
.))C D
position))D L
;))L M
if,, 
(,, 
TilesetHeight,, 
!=,,  
$num,,! "
),," #
{-- 
int.. 
delta_y.. 
=.. 
this.. "
..." #
AttachedMap..# .
.... /

TileHeight../ 9
-..: ;
this..< @
...@ A
TilesetHeight..A N
;..N O
spritePosition// 
.// 
y//  
+=//! #
delta_y//$ +
;//+ ,
}00 
Rect22 
mapRect22 
=22 
this22 
.22  
AttachedMap22  +
.22+ ,

GetMapRect22, 6
(226 7
)227 8
;228 9
float33 
depthPerLayer33 
=33  !
-33" #
this33# '
.33' (
AttachedMap33( 3
.333 4

TileHeight334 >
/33? @
mapRect33A H
.33H I
height33I O
;33O P
float55 
depth_z55 
=55 
(55 
spritePosition55 +
.55+ ,
y55, -
/55. /
this550 4
.554 5
AttachedMap555 @
.55@ A
ExportScale55A L
/55M N
mapRect55O V
.55V W
height55W ]
)55] ^
+55_ `
(55a b
depthPerLayer55b o
*55p q
this55r v
.55v w
InteractWithLayer	55w à
)
55à â
;
55â ä
this88 
.88 

gameObject88 
.88 
	transform88 %
.88% &
position88& .
=88/ 0
new881 4
Vector3885 <
(88< =
this88= A
.88A B

gameObject88B L
.88L M
	transform88M V
.88V W
position88W _
.88_ `
x88` a
,88a b
this88c g
.88g h

gameObject88h r
.88r s
	transform88s |
.88| }
position	88} Ö
.
88Ö Ü
y
88Ü á
,
88á à
depth_z
88â ê
)
88ê ë
;
88ë í
}99 	
};; 
}<< Ü
dC:\Users\Administrator\Desktop\git_wine\wine-game\Assets\Tiled2Unity\Scripts\Runtime\TileAnimator.cs
	namespace 	
Tiled2Unity
 
{ 
public 

class 
TileAnimator 
: 
MonoBehaviour  -
{ 
public 
float 
	StartTime 
=  
-! "
$num" #
;# $
public 
float 
Duration 
= 
-  !
$num! "
;" #
public 
float 
TotalAnimationTime '
=( )
-* +
$num+ ,
;, -
private 
float 
timer 
= 
$num 
;  
private 
MeshRenderer 
meshRenderer )
=* +
null, 0
;0 1
private   
void   
Awake   
(   
)   
{!! 	
this"" 
."" 
meshRenderer"" 
="" 
this""  $
.""$ %
GetComponent""% 1
<""1 2
MeshRenderer""2 >
>""> ?
(""? @
)""@ A
;""A B
}## 	
private%% 
void%% 
Start%% 
(%% 
)%% 
{&& 	
Assert(( 
.(( 
IsTrue(( 
((( 
this(( 
.(( 
	StartTime(( (
>=(() +
$num((, -
,((- .
$str((/ M
)((M N
;((N O
Assert)) 
.)) 
IsTrue)) 
()) 
this)) 
.)) 
Duration)) '
>))( )
$num))* +
,))+ ,
$str))- V
)))V W
;))W X
Assert** 
.** 
IsTrue** 
(** 
this** 
.** 
TotalAnimationTime** 1
>**2 3
$num**4 5
,**5 6
$str**7 j
)**j k
;**k l
this,, 
.,, 
timer,, 
=,, 
$num,, 
;,, 
}-- 	
private// 
void// 
Update// 
(// 
)// 
{00 	
this11 
.11 
timer11 
+=11 
Time11 
.11 
	deltaTime11 (
;11( )
while44 
(44 
this44 
.44 
timer44 
>44 
this44  $
.44$ %
TotalAnimationTime44% 7
)447 8
{55 
this66 
.66 
timer66 
-=66 
this66 "
.66" #
TotalAnimationTime66# 5
;665 6
}77 
this99 
.99 
meshRenderer99 
.99 
enabled99 %
=99& '
timer99( -
>=99. 0
this991 5
.995 6
	StartTime996 ?
&&99@ B
timer99C H
<99I J
(99K L
this99L P
.99P Q
	StartTime99Q Z
+99[ \
this99] a
.99a b
Duration99b j
)99j k
;99k l
}:: 	
}<< 
}== —
aC:\Users\Administrator\Desktop\git_wine\wine-game\Assets\Tiled2Unity\Scripts\Runtime\TileLayer.cs
	namespace 	
Tiled2Unity
 
{ 
public 

class 
	TileLayer 
: 
Tiled2Unity (
.( )
Layer) .
{		 
} 
} Ï
bC:\Users\Administrator\Desktop\git_wine\wine-game\Assets\Tiled2Unity\Scripts\Runtime\TileObject.cs
	namespace 	
Tiled2Unity
 
{		 
public

 

class

 

TileObject

 
:

 
Tiled2Unity

 )
.

) *
	TmxObject

* 3
{ 
[ 	
Header	 
( 
$str 7
)7 8
]8 9
public 
bool !
TmxFlippingHorizontal )
;) *
public 
bool 
TmxFlippingVertical '
;' (
[ 	
Header	 
( 
$str (
)( )
]) *
[ 	
Tooltip	 
( 
$str M
)M N
]N O
public 
float 
	TileWidth 
=  
$num! %
;% &
[ 	
Tooltip	 
( 
$str N
)N O
]O P
public 
float 

TileHeight 
=  !
$num" &
;& '
} 
} Ø
tC:\Users\Administrator\Desktop\git_wine\wine-game\Assets\Tiled2Unity\Scripts\Runtime\TiledInitialShaderProperties.cs
	namespace 	
Tiled2Unity
 
{		 
public 

class (
TiledInitialShaderProperties -
:. /
MonoBehaviour0 =
{ 
[ 	
Range	 
( 
$num 
, 
$num 
) 
] 
public 
float 
InitialOpacity #
=$ %
$num& *
;* +
private 
void 
Awake 
( 
) 
{ 	
MeshRenderer 
meshRendrer $
=% &
this' +
.+ ,

gameObject, 6
.6 7
GetComponent7 C
<C D
MeshRendererD P
>P Q
(Q R
)R S
;S T
if 
( 
this 
. 
InitialOpacity #
!=$ &
$num' +
&&, .
meshRendrer/ :
.: ;
material; C
.C D
HasPropertyD O
(O P
$strP X
)X Y
)Y Z
{ 
meshRendrer 
. 
material $
.$ %
SetColor% -
(- .
$str. 6
,6 7
new8 ;
Color< A
(A B
$numB C
,C D
$numE F
,F G
$numH I
,I J
thisK O
.O P
InitialOpacityP ^
)^ _
)_ `
;` a
} 
} 	
} 
} ÕC
`C:\Users\Administrator\Desktop\git_wine\wine-game\Assets\Tiled2Unity\Scripts\Runtime\TiledMap.cs
	namespace 	
Tiled2Unity
 
{		 
public

 

class

 
TiledMap

 
:

 
MonoBehaviour

 )
{ 
public 
enum 
MapOrientation "
{ 	

Orthogonal 
, 
	Isometric 
, 
	Staggered 
, 
	Hexagonal 
, 
} 	
public 
enum 
MapStaggerAxis "
{ 	
X 
, 
Y 
, 
} 	
public 
enum 
MapStaggerIndex #
{ 	
Odd 
, 
Even 
, 
} 	
public   
MapOrientation   
Orientation   )
=  * +
MapOrientation  , :
.  : ;

Orthogonal  ; E
;  E F
public!! 
MapStaggerAxis!! 
StaggerAxis!! )
=!!* +
MapStaggerAxis!!, :
.!!: ;
X!!; <
;!!< =
public"" 
MapStaggerIndex"" 
StaggerIndex"" +
="", -
MapStaggerIndex"". =
.""= >
Odd""> A
;""A B
public## 
int## 
HexSideLength##  
=##! "
$num### $
;##$ %
public%% 
int%% 
	NumLayers%% 
=%% 
$num%%  
;%%  !
public&& 
int&& 
NumTilesWide&& 
=&&  !
$num&&" #
;&&# $
public'' 
int'' 
NumTilesHigh'' 
=''  !
$num''" #
;''# $
public(( 
int(( 
	TileWidth(( 
=(( 
$num((  
;((  !
public)) 
int)) 

TileHeight)) 
=)) 
$num))  !
;))! "
public** 
float** 
ExportScale**  
=**! "
$num**# '
;**' (
public.. 
int.. 
MapWidthInPixels.. #
=..$ %
$num..& '
;..' (
public// 
int// 
MapHeightInPixels// $
=//% &
$num//' (
;//( )
public22 
Color22 
BackgroundColor22 $
=22% &
Color22' ,
.22, -
black22- 2
;222 3
public44 
float44 %
GetMapWidthInPixelsScaled44 .
(44. /
)44/ 0
{55 	
return66 
this66 
.66 
MapWidthInPixels66 (
*66) *
this66+ /
.66/ 0
	transform660 9
.669 :

lossyScale66: D
.66D E
x66E F
*66G H
this66I M
.66M N
ExportScale66N Y
;66Y Z
}77 	
public99 
float99 &
GetMapHeightInPixelsScaled99 /
(99/ 0
)990 1
{:: 	
return;; 
this;; 
.;; 
MapHeightInPixels;; )
*;;* +
this;;, 0
.;;0 1
	transform;;1 :
.;;: ;

lossyScale;;; E
.;;E F
y;;F G
*;;H I
this;;J N
.;;N O
ExportScale;;O Z
;;;Z [
}<< 	
public>> 
Rect>> 

GetMapRect>> 
(>> 
)>>  
{?? 	
Vector2@@ 
pos_w@@ 
=@@ 
this@@  
.@@  !

gameObject@@! +
.@@+ ,
	transform@@, 5
.@@5 6
position@@6 >
;@@> ?
floatAA 
widthAA 
=AA 
thisAA 
.AA 
MapWidthInPixelsAA /
;AA/ 0
floatBB 
heightBB 
=BB 
thisBB 
.BB  
MapHeightInPixelsBB  1
;BB1 2
returnCC 
newCC 
RectCC 
(CC 
pos_wCC !
.CC! "
xCC" #
,CC# $
pos_wCC% *
.CC* +
yCC+ ,
-CC- .
heightCC/ 5
,CC5 6
widthCC7 <
,CC< =
heightCC> D
)CCD E
;CCE F
}DD 	
publicFF 
RectFF $
GetMapRectInPixelsScaledFF ,
(FF, -
)FF- .
{GG 	
Vector2HH 
pos_wHH 
=HH 
thisHH  
.HH  !

gameObjectHH! +
.HH+ ,
	transformHH, 5
.HH5 6
positionHH6 >
;HH> ?
floatII 
widthInPixelsII 
=II  !%
GetMapWidthInPixelsScaledII" ;
(II; <
)II< =
;II= >
floatJJ 
heightInPixelsJJ  
=JJ! "&
GetMapHeightInPixelsScaledJJ# =
(JJ= >
)JJ> ?
;JJ? @
returnKK 
newKK 
RectKK 
(KK 
pos_wKK !
.KK! "
xKK" #
,KK# $
pos_wKK% *
.KK* +
yKK+ ,
-KK- .
heightInPixelsKK/ =
,KK= >
widthInPixelsKK? L
,KKL M
heightInPixelsKKN \
)KK\ ]
;KK] ^
}LL 	
publicNN 
boolNN 
AreTilesStaggeredNN %
(NN% &
)NN& '
{OO 	
returnQQ 
thisQQ 
.QQ 
OrientationQQ #
==QQ$ &
MapOrientationQQ' 5
.QQ5 6
	StaggeredQQ6 ?
||QQ@ B
thisQQC G
.QQG H
OrientationQQH S
==QQT V
MapOrientationQQW e
.QQe f
	HexagonalQQf o
;QQo p
}RR 	
privateTT 
voidTT  
OnDrawGizmosSelectedTT )
(TT) *
)TT* +
{UU 	
Vector3VV 
pos_wVV 
=VV 
thisVV  
.VV  !

gameObjectVV! +
.VV+ ,
	transformVV, 5
.VV5 6
positionVV6 >
;VV> ?
Vector3WW 
topLeftWW 
=WW 
Vector3WW %
.WW% &
zeroWW& *
+WW+ ,
pos_wWW- 2
;WW2 3
Vector3XX 
topRightXX 
=XX 
newXX "
Vector3XX# *
(XX* +%
GetMapWidthInPixelsScaledXX+ D
(XXD E
)XXE F
,XXF G
$numXXH I
)XXI J
+XXK L
pos_wXXM R
;XXR S
Vector3YY 
bottomRightYY 
=YY  !
newYY" %
Vector3YY& -
(YY- .%
GetMapWidthInPixelsScaledYY. G
(YYG H
)YYH I
,YYI J
-YYK L&
GetMapHeightInPixelsScaledYYL f
(YYf g
)YYg h
)YYh i
+YYj k
pos_wYYl q
;YYq r
Vector3ZZ 

bottomLeftZZ 
=ZZ  
newZZ! $
Vector3ZZ% ,
(ZZ, -
$numZZ- .
,ZZ. /
-ZZ0 1&
GetMapHeightInPixelsScaledZZ1 K
(ZZK L
)ZZL M
)ZZM N
+ZZO P
pos_wZZQ V
;ZZV W
float]] 
depth_z]] 
=]] 
-]] 
$num]] !
*]]" #
this]]$ (
.]]( )
	NumLayers]]) 2
;]]2 3
pos_w^^ 
.^^ 
z^^ 
+=^^ 
depth_z^^ 
;^^ 
topLeft__ 
.__ 
z__ 
+=__ 
depth_z__  
;__  !
topRight`` 
.`` 
z`` 
+=`` 
depth_z`` !
;``! "
bottomRightaa 
.aa 
zaa 
+=aa 
depth_zaa $
;aa$ %

bottomLeftbb 
.bb 
zbb 
+=bb 
depth_zbb #
;bb# $
Gizmosdd 
.dd 
colordd 
=dd 
Colordd  
.dd  !
bluedd! %
;dd% &
Gizmosee 
.ee 
DrawLineee 
(ee 
topLeftee #
,ee# $
topRightee% -
)ee- .
;ee. /
Gizmosff 
.ff 
DrawLineff 
(ff 
topRightff $
,ff$ %
bottomRightff& 1
)ff1 2
;ff2 3
Gizmosgg 
.gg 
DrawLinegg 
(gg 
bottomRightgg '
,gg' (

bottomLeftgg) 3
)gg3 4
;gg4 5
Gizmoshh 
.hh 
DrawLinehh 
(hh 

bottomLefthh &
,hh& '
topLefthh( /
)hh/ 0
;hh0 1
}ii 	
}jj 
}kk ±
aC:\Users\Administrator\Desktop\git_wine\wine-game\Assets\Tiled2Unity\Scripts\Runtime\TmxObject.cs
	namespace 	
Tiled2Unity
 
{		 
public 

class 
	TmxObject 
: 
MonoBehaviour *
{ 
[ 	
Header	 
( 
$str 2
)2 3
]3 4
[ 	
Tooltip	 
( 
$str 1
)1 2
]2 3
public 
int 
TmxId 
; 
[ 	
Tooltip	 
( 
$str 3
)3 4
]4 5
public 
string 
TmxName 
; 
[ 	
Tooltip	 
( 
$str 3
)3 4
]4 5
public 
string 
TmxType 
; 
[ 	
Tooltip	 
( 
$str 7
)7 8
]8 9
public 
Vector2 
TmxPosition "
;" #
[ 	
Tooltip	 
( 
$str 3
)3 4
]4 5
public 
Vector2 
TmxSize 
; 
[ 	
Tooltip	 
( 
$str 7
)7 8
]8 9
public 
float 
TmxRotation  
;  !
}   
}!! ‡<
]C:\Users\Administrator\Desktop\git_wine\wine-game\Assets\ZSmartTile\Classes\ZST_MapManager.cs
public 
class 
ZST_MapManager 
: 
object $
{% &
public 
static 
ZST_MapManager 
SharedInstance ,
=- .
new/ 2
ZST_MapManager3 A
(A B
)B C
;C D
static		 
ZST_MapManager		 
(		 
)		 
{		 
}		 
private

 
ZST_MapManager

	 
(

 
)

 
{

 
}

 
private 
bool	 
isMidUpdate 
; 
private 
HashSet	 
< 
string 
> 

updateTags #
=$ %
new& )
HashSet* 1
<1 2
string2 8
>8 9
(9 :
): ;
;; <
private 
HashSet	 
< 
ZST_SmartTile 
> 
tiles  %
=& '
new( +
HashSet, 3
<3 4
ZST_SmartTile4 A
>A B
(B C
)C D
;D E
public 
void 
AddUpdateTag 
( 
string  
	updateTag! *
)* +
{, -

updateTags 
. 
Add 
( 
	updateTag 
) 
; 
} 
public 
void 
AddTile 
( 
ZST_SmartTile "
tile# '
)' (
{) *
tiles 
. 
Add 
( 
tile 
) 
; 
} 
public 
void 

RemoveTile 
( 
ZST_SmartTile %
tile& *
)* +
{, -
tiles 
. 
Remove 
( 
tile 
) 
; 
} 
public 
void 
HardReloadTiles 
( 
) 
{  
tiles 
= 	
new
 
HashSet 
< 
ZST_SmartTile #
># $
($ %

GameObject% /
./ 0
FindObjectsOfType0 A
<A B
ZST_SmartTileB O
>O P
(P Q
)Q R
)R S
;S T
foreach 	
(
 
ZST_SmartTile 
tile 
in  
tiles! &
)& '
{( )
AddUpdateTag   
(   
tile   
.   
tileTag   
)   
;   
}!! 
}"" 
public$$ 
void$$ 
Update$$ 
($$ 
)$$ 
{$$ 
if'' 
('' 
Application'' 
.'' 
	isPlaying'' 
)'' 
{'' 
return'' $
;''$ %
}''% &
foreach)) 	
())
 
string)) 
	updateTag)) 
in)) 

updateTags)) )
)))) *
{))+ ,
List++ 
<++ 
ZST_SmartTile++ 
>++ 
adjustableTiles++ &
=++' (
new++) ,
List++- 1
<++1 2
ZST_SmartTile++2 ?
>++? @
(++@ A
)++A B
;++B C
HashSet,, 

<,,
 
ZST_SmartTile,, 
.,, 
Coord,, 
>,, 
occupiedCoords,,  .
=,,/ 0
new,,1 4
HashSet,,5 <
<,,< =
ZST_SmartTile,,= J
.,,J K
Coord,,K P
>,,P Q
(,,Q R
),,R S
;,,S T
foreach.. 

(.. 
ZST_SmartTile.. 
tile.. 
in.. !
tiles.." '
)..' (
{..) *
if00 
(00 
tile00 
.00 
tileTag00 
!=00 
null00 
&&00 
!00  !
tile00! %
.00% &
tileTag00& -
.00- .
Equals00. 4
(004 5
	updateTag005 >
)00> ?
)00? @
{00A B
continue00B J
;00J K
}00K L
tile22 
.22 	
MarkAsMidUpdate22	 
(22 
)22 
;22 
ZST_SmartTile44 
.44 
Coord44 
coord44 
=44 
tile44  $
.44$ %
GetCoord44% -
(44- .
)44. /
;44/ 0
occupiedCoords55 
.55 
Add55 
(55 
coord55 
)55 
;55 
adjustableTiles77 
.77 
Add77 
(77 
tile77 
)77 
;77 
}88 
foreach:: 

(:: 
ZST_SmartTile:: 
tile:: 
in:: !
adjustableTiles::" 1
)::1 2
{::3 4
ZST_SmartTile<< 
.<< 
Coord<< 
coord<< 
=<< 
tile<<  $
.<<$ %
GetCoord<<% -
(<<- .
)<<. /
;<</ 0
int>> 
row>> 
=>> 
coord>> 
.>> 
row>> 
;>> 
int?? 
col?? 
=?? 
coord?? 
.?? 
col?? 
;?? 
SystemAA 

.AA
 
ArrayAA 
cardinalDirsAA 
=AA 
SystemAA  &
.AA& '
EnumAA' +
.AA+ ,
	GetValuesAA, 5
(AA5 6
typeofAA6 <
(AA< =
ZST_SmartTileAA= J
.AAJ K
CardinalDirectionAAK \
)AA\ ]
)AA] ^
;AA^ _
foreachBB 
(BB 
ZST_SmartTileBB 
.BB 
CardinalDirectionBB ,
dirBB- 0
inBB1 3
cardinalDirsBB4 @
)BB@ A
{BBB C
ZST_SmartTileDD 
.DD 
CoordDD 
offsetDD 
=DD  !
ZST_SmartTileDD" /
.DD/ 0
dirsToCoordOffsetsDD0 B
[DDB C
dirDDC F
]DDF G
;DDG H
tileFF 	
.FF	 

hasNeighborFF
 
[FF 
dirFF 
]FF 
=FF 
HasNeighborFF (
(FF( )
rowFF) ,
+FF- .
offsetFF/ 5
.FF5 6
rowFF6 9
,FF9 :
colFF; >
+FF? @
offsetFFA G
.FFG H
colFFH K
,FFK L
occupiedCoordsFFM [
)FF[ \
;FF\ ]
}GG 
tileII 
.II 	
UpdateSpriteII	 
(II 
)II 
;II 
}JJ 
}KK 

updateTagsMM 
.MM 
ClearMM 
(MM 
)MM 
;MM 
}OO 
privateQQ 
boolQQ	 
HasNeighborQQ 
(QQ 
intQQ 
rowQQ !
,QQ! "
intQQ# &
colQQ' *
,QQ* +
HashSetQQ, 3
<QQ3 4
ZST_SmartTileQQ4 A
.QQA B
CoordQQB G
>QQG H
occupiedCoordsQQI W
)QQW X
{QQY Z
ZST_SmartTileRR 
.RR 
CoordRR 
coordRR 
=RR 
newRR !
ZST_SmartTileRR" /
.RR/ 0
CoordRR0 5
(RR5 6
rowRR6 9
,RR9 :
colRR: =
)RR= >
;RR> ?
returnSS 
occupiedCoordsSS	 
.SS 
ContainsSS  
(SS  !
coordSS! &
)SS& '
;SS' (
}TT 
}VV Ô¸
_C:\Users\Administrator\Desktop\git_wine\wine-game\Assets\ZSmartTile\Components\ZST_SmartTile.cs
[

 
SelectionBase

 
]

 
[ 
ExecuteInEditMode 
] 
[ 
RequireComponent 
( 
typeof 
( 
ZST_SnapToGrid '
)' (
)( )
]) *
public 
class 
ZST_SmartTile 
: 
MonoBehaviour *
{+ ,
private 
const 
int '
kSideLengthInPixelsExpected 1
=2 3
$num4 7
;7 8
public 
Color 
color 
= 
Color 
. 
white !
;! "
public 
int 
orderInLayer 
; 
public 

int 
sideLengthInPixels !
=" #'
kSideLengthInPixelsExpected$ ?
;? @
public 
string 
tileTag 
; 
public 
Sprite 
[ 
] 
sprites_center 
;  
public 
Sprite 
[ 
] 
sprites_side 
; 
public 
Sprite 
[ 
]  
sprites_cornerConvex %
;% &
public 
Sprite 
[ 
] !
sprites_cornerConcave &
;& '
private!! 
Sprite!!	 
[!! 
]!! 
sprites_center_Prev!! %
;!!% &
private"" 
Sprite""	 
["" 
]"" 
sprites_side_Prev"" #
;""# $
private## 
Sprite##	 
[## 
]## %
sprites_cornerConvex_Prev## +
;##+ ,
private$$ 
Sprite$$	 
[$$ 
]$$ &
sprites_cornerConcave_Prev$$ ,
;$$, -
public'' 
struct'' 
Coord'' 
{'' 
public(( 
Coord((	 
((( 
int(( 
_row(( 
,(( 
int(( 
_col(( !
)((! "
{((# $
row)) 
=)) 
_row))	 
;)) 
col** 
=** 
_col**	 
;** 
}++ 
public,, 
int,,	 
row,, 
;,, 
public-- 
int--	 
col-- 
;-- 
public.. 
Vector2..	 
	ToVector2.. 
(.. 
).. 
{.. 
Vector2// 

vector2// 
=// 
new// 
Vector2//  
(//  !
col//! $
,//$ %
row//% (
)//( )
;//) *
return00 	
vector200
 
;00 
}11 
}22 
private55 
bool55	 
doReroll55 
;55 
private88 
bool88	 
	midUpdate88 
;88 
private;; 
bool;;	 
areChildrenHidden;; 
;;;  
private>> 
ZST_SnapToGrid>>	 
snap>> 
;>> 
private@@ 
Vector2@@	 
positionPrev@@ 
;@@ 
publicBB 
enumBB 
CardinalDirectionBB 
{BB  
ECC 
,CC 
NECC 
,CC 
NCC	 

,CC
 
NWCC 
,CC 
WCC 
,CC 
SWCC 
,CC 
SCC 
,CC 
SECC 
,CC 
}DD 
publicGG 
staticGG 

DictionaryGG 
<GG 
CardinalDirectionGG +
,GG+ ,
CoordGG, 1
>GG1 2
dirsToCoordOffsetsGG3 E
=GGF G
newGGH K

DictionaryGGL V
<GGV W
CardinalDirectionGGW h
,GGh i
CoordGGj o
>GGo p
(GGp q
)GGq r
{GGs t
{II 
CardinalDirectionII 
.II 
EII 
,II 
newII 
CoordII !
(II! "
$numII" #
,II# $
$numII$ %
)II% &
}II& '
,II' (
{JJ 
CardinalDirectionJJ 
.JJ 
NEJJ 
,JJ 
newJJ 
CoordJJ "
(JJ" #
$numJJ# $
,JJ$ %
$numJJ% &
)JJ& '
}JJ' (
,JJ( )
{KK 
CardinalDirectionKK 
.KK 
NKK 
,KK 
newKK 
CoordKK !
(KK! "
$numKK" #
,KK# $
$numKK$ %
)KK% &
}KK& '
,KK' (
{LL 
CardinalDirectionLL 
.LL 
NWLL 
,LL 
newLL 
CoordLL "
(LL" #
$numLL# $
,LL$ %
-LL% &
$numLL& '
)LL' (
}LL( )
,LL) *
{MM 
CardinalDirectionMM 
.MM 
WMM 
,MM 
newMM 
CoordMM !
(MM! "
$numMM" #
,MM# $
-MM$ %
$numMM% &
)MM& '
}MM' (
,MM( )
{NN 
CardinalDirectionNN 
.NN 
SWNN 
,NN 
newNN 
CoordNN "
(NN" #
-NN# $
$numNN$ %
,NN% &
-NN& '
$numNN' (
)NN( )
}NN) *
,NN* +
{OO 
CardinalDirectionOO 
.OO 
SOO 
,OO 
newOO 
CoordOO !
(OO! "
-OO" #
$numOO# $
,OO$ %
$numOO% &
)OO& '
}OO' (
,OO( )
{PP 
CardinalDirectionPP 
.PP 
SEPP 
,PP 
newPP 
CoordPP "
(PP" #
-PP# $
$numPP$ %
,PP% &
$numPP& '
)PP' (
}PP( )
,PP) *
}RR 
;RR 
privateUU 
staticUU	 
CardinalDirectionUU !
[UU! "
]UU" #
spriteDirectionsUU$ 4
=UU5 6
{UU7 8
CardinalDirectionVV 
.VV 
NEVV 
,VV 
CardinalDirectionWW 
.WW 
NWWW 
,WW 
CardinalDirectionXX 
.XX 
SWXX 
,XX 
CardinalDirectionYY 
.YY 
SEYY 
,YY 
}ZZ 
;ZZ 
[]] 
System]] 
.]] 	
Serializable]]	 
]]] 
private^^ 
class^^	 
Quadrant^^ 
{^^ 
public__ 
CardinalDirection__	 
dir__ 
;__ 
public`` 
float``	 
startRot`` 
;`` 
publicaa 
Vector2aa	 
offsetaa 
;aa 
publicbb 
SpriteRendererbb	 
srbb 
;bb 
publiccc 
Spritecc	 
rolledSprite_centercc #
;cc# $
publicdd 
Spritedd	 
rolledSprite_sidedd !
;dd! "
publicee 
Spriteee	 %
rolledSprite_cornerConvexee )
;ee) *
publicff 
Spriteff	 &
rolledSprite_cornerConcaveff *
;ff* +
}gg 
[hh 
SerializeFieldhh 
]hh 
privateii 
Quadrantii	 
[ii 
]ii 
	quadrantsii 
;ii 
publicll 

Dictionaryll 
<ll 
CardinalDirectionll $
,ll$ %
boolll% )
>ll) *
hasNeighborll+ 6
=ll7 8
newll9 <

Dictionaryll= G
<llG H
CardinalDirectionllH Y
,llY Z
boolll[ _
>ll_ `
(ll` a
)lla b
;llb c
voidnn 
Startnn 
(nn 
)nn 
{nn 
SetSnappp 
(pp 
)pp 
;pp 
ifss 
(ss 
	quadrantsss 
==ss 
nullss 
||ss 
	quadrantsss $
.ss$ %
Lengthss% +
<=ss, .
$numss/ 0
)ss0 1
{ss2 3
Listuu 
<uu 
Quadrantuu 
>uu 
quadrantsMutuu 
=uu  
newuu! $
Listuu% )
<uu) *
Quadrantuu* 2
>uu2 3
(uu3 4
)uu4 5
;uu5 6
intww 
numDirectionsww 
=ww 
spriteDirectionsww '
.ww' (
Lengthww( .
;ww. /
foryy 
(yy 
intyy 
iyy 
=yy 
$numyy 
;yy 
iyy 
<yy 
numDirectionsyy $
;yy$ %
++yy& (
iyy( )
)yy) *
{yy+ ,

GameObject{{ 
	spriteObj{{ 
={{ 
new{{ 

GameObject{{ )
({{) *
){{* +
;{{+ ,
SpriteRenderer}} 
sr}} 
=}} 
	spriteObj}} !
.}}! "
AddComponent}}" .
<}}. /
SpriteRenderer}}/ =
>}}= >
(}}> ?
)}}? @
;}}@ A
float 	
rot
 
= 
( 
float 
) 
i 
/ 
( 
float 
)  
numDirections  -
*. /
$num0 3
;3 4
float
ÄÄ 	
theta
ÄÄ
 
=
ÄÄ 
rot
ÄÄ 
*
ÄÄ 
Mathf
ÄÄ 
.
ÄÄ 
Deg2Rad
ÄÄ &
+
ÄÄ' (
Mathf
ÄÄ) .
.
ÄÄ. /
PI
ÄÄ/ 1
*
ÄÄ2 3
$num
ÄÄ4 9
;
ÄÄ9 :
Vector2
ÇÇ 
offset
ÇÇ 
=
ÇÇ 
(
ÇÇ 
new
ÇÇ 
Vector2
ÇÇ !
(
ÇÇ! "
Mathf
ÇÇ" '
.
ÇÇ' (
Sign
ÇÇ( ,
(
ÇÇ, -
Mathf
ÇÇ- 2
.
ÇÇ2 3
Cos
ÇÇ3 6
(
ÇÇ6 7
theta
ÇÇ7 <
)
ÇÇ< =
)
ÇÇ= >
,
ÇÇ> ?
Mathf
ÇÇ? D
.
ÇÇD E
Sign
ÇÇE I
(
ÇÇI J
Mathf
ÇÇJ O
.
ÇÇO P
Sin
ÇÇP S
(
ÇÇS T
theta
ÇÇT Y
)
ÇÇY Z
)
ÇÇZ [
)
ÇÇ[ \
)
ÇÇ\ ]
*
ÇÇ^ _
$num
ÇÇ` d
;
ÇÇd e
CardinalDirection
ÑÑ 
dir
ÑÑ 
=
ÑÑ 
(
ÑÑ 
CardinalDirection
ÑÑ .
)
ÑÑ. /
spriteDirections
ÑÑ/ ?
[
ÑÑ? @
i
ÑÑ@ A
]
ÑÑA B
;
ÑÑB C
	spriteObj
ÖÖ 
.
ÖÖ 
name
ÖÖ 
=
ÖÖ 
$str
ÖÖ 
+
ÖÖ  
dir
ÖÖ! $
.
ÖÖ$ %
ToString
ÖÖ% -
(
ÖÖ- .
)
ÖÖ. /
;
ÖÖ/ 0
	spriteObj
ÜÜ 
.
ÜÜ 
	transform
ÜÜ 
.
ÜÜ 
	SetParent
ÜÜ !
(
ÜÜ! "
	transform
ÜÜ" +
)
ÜÜ+ ,
;
ÜÜ, -
Quadrant
àà 
quadrant
àà 
=
àà 
new
àà 
Quadrant
àà $
(
àà$ %
)
àà% &
;
àà& '
quadrant
ââ 
.
ââ 
startRot
ââ 
=
ââ 
rot
ââ 
;
ââ 
quadrant
ää 
.
ää 
dir
ää 
=
ää 
dir
ää 
;
ää 
quadrant
ãã 
.
ãã 
offset
ãã 
=
ãã 
offset
ãã 
;
ãã 
quadrant
åå 
.
åå 
sr
åå 
=
åå 
sr
åå 
;
åå 
quadrantsMut
éé 
.
éé 
Add
éé 
(
éé 
quadrant
éé 
)
éé 
;
éé 
}
èè 
	quadrants
ëë 
=
ëë 
quadrantsMut
ëë 
.
ëë 
ToArray
ëë #
(
ëë# $
)
ëë$ %
;
ëë% &
}
ôô 
HideChildren
úú 
(
úú 
)
úú 
;
úú 
ZST_MapManager
üü 
.
üü 
SharedInstance
üü 
.
üü  
AddTile
üü  '
(
üü' (
this
üü( ,
)
üü, -
;
üü- .
ZST_MapManager
¢¢ 
.
¢¢ 
SharedInstance
¢¢ 
.
¢¢  
AddUpdateTag
¢¢  ,
(
¢¢, -
tileTag
¢¢- 4
)
¢¢4 5
;
¢¢5 6
}
££ 
void
•• 
Update
•• 
(
•• 
)
•• 
{
•• 
if
®® 
(
®® 
Application
®® 
.
®® 
	isPlaying
®® 
)
®® 
{
®® 
return
®® $
;
®®$ %
}
®®% &
ZST_MapManager
´´ 
.
´´ 
SharedInstance
´´ 
.
´´  
Update
´´  &
(
´´& '
)
´´' (
;
´´( )
snap
ÆÆ 
.
ÆÆ 
gridSideLength
ÆÆ 
=
ÆÆ 
(
ÆÆ 
float
ÆÆ $
)
ÆÆ$ % 
sideLengthInPixels
ÆÆ% 7
/
ÆÆ8 9)
kSideLengthInPixelsExpected
ÆÆ: U
;
ÆÆU V
Vector2
±± 	
positionCurr
±±
 
=
±± 
snap
±± 
.
±±  
GetSnappedPosition
±± 0
(
±±0 1
	transform
±±1 :
.
±±: ;
position
±±; C
)
±±C D
;
±±D E
float
≤≤ 
	threshold
≤≤ 
=
≤≤ 
snap
≤≤ 
.
≤≤ 
gridSideLength
≤≤ '
;
≤≤' (
Vector2
≥≥ 	
positionDelta
≥≥
 
=
≥≥ 
positionCurr
≥≥ &
-
≥≥' (
positionPrev
≥≥) 5
;
≥≥5 6
bool
¥¥ "
didMoveSignificantly
¥¥ 
=
¥¥ 
(
¥¥ 
Mathf
µµ 
.
µµ 	
Abs
µµ	 
(
µµ 
positionDelta
µµ 
.
µµ 
x
µµ 
)
µµ 
>=
µµ  
	threshold
µµ! *
||
µµ+ -
Mathf
∂∂ 
.
∂∂ 	
Abs
∂∂	 
(
∂∂ 
positionDelta
∂∂ 
.
∂∂ 
y
∂∂ 
)
∂∂ 
>=
∂∂  
	threshold
∂∂! *
)
∑∑ 
;
∑∑ 
positionPrev
∏∏ 
=
∏∏ 
positionCurr
∏∏ 
;
∏∏ 
bool
ªª 
doUpdate
ªª 
=
ªª "
didMoveSignificantly
ªª &
&&
ªª' )
!
ªª* +
	midUpdate
ªª+ 4
;
ªª4 5
	midUpdate
ææ 
=
ææ 
false
ææ 
;
ææ 
if
¡¡ 
(
¡¡ 
doUpdate
¡¡ 
)
¡¡ 
{
¡¡ 
ZST_MapManager
¡¡ 
.
¡¡  
SharedInstance
¡¡  .
.
¡¡. /
AddUpdateTag
¡¡/ ;
(
¡¡; <
tileTag
¡¡< C
)
¡¡C D
;
¡¡D E
}
¡¡E F
float
ƒƒ  
gridSideLengthCurr
ƒƒ 
=
ƒƒ 
snap
ƒƒ !
.
ƒƒ! "
gridSideLength
ƒƒ" 0
;
ƒƒ0 1
foreach
≈≈ 	
(
≈≈
 
Quadrant
≈≈ 
quadrant
≈≈ 
in
≈≈ 
	quadrants
≈≈  )
)
≈≈) *
{
≈≈+ ,
quadrant
∆∆ 
.
∆∆ 
sr
∆∆ 
.
∆∆ 
	transform
∆∆ 
.
∆∆ 
localPosition
∆∆ &
=
∆∆' (
quadrant
∆∆) 1
.
∆∆1 2
offset
∆∆2 8
*
∆∆9 : 
gridSideLengthCurr
∆∆; M
*
∆∆N O
$num
∆∆P T
;
∆∆T U
quadrant
«« 
.
«« 
sr
«« 
.
«« 
	transform
«« 
.
«« 

localScale
«« #
=
««$ %
Vector2
««& -
.
««- .
one
««. 1
*
««2 3
$num
««4 8
;
««8 9
}
»» 
bool
ÀÀ '
hasInputSpriteDataChanged
ÀÀ  
=
ÀÀ! "
(
ÀÀ# $
sprites_center
ÃÃ 
!=
ÃÃ !
sprites_center_Prev
ÃÃ (
||
ÃÃ) +
sprites_side
ÕÕ 
!=
ÕÕ 
sprites_side_Prev
ÕÕ $
||
ÕÕ% '"
sprites_cornerConvex
ŒŒ 
!=
ŒŒ '
sprites_cornerConvex_Prev
ŒŒ 4
||
ŒŒ5 7#
sprites_cornerConcave
œœ 
!=
œœ (
sprites_cornerConcave_Prev
œœ 6
)
–– 
;
–– 
if
—— 
(
—— '
hasInputSpriteDataChanged
—— 
)
——  
{
——! "
UpdateSprite
——" .
(
——. /
)
——/ 0
;
——0 1
}
——1 2!
sprites_center_Prev
““ 
=
““ 
sprites_center
““ &
;
““& '
sprites_side_Prev
”” 
=
”” 
sprites_side
”” "
;
””" #'
sprites_cornerConvex_Prev
‘‘ 
=
‘‘ "
sprites_cornerConvex
‘‘ 2
;
‘‘2 3(
sprites_cornerConcave_Prev
’’ 
=
’’ #
sprites_cornerConcave
’’ 4
;
’’4 5
if
ÿÿ 
(
ÿÿ 
	quadrants
ÿÿ 
!=
ÿÿ 
null
ÿÿ 
)
ÿÿ 
{
ÿÿ 
foreach
ŸŸ 

(
ŸŸ 
Quadrant
ŸŸ 
quadrant
ŸŸ 
in
ŸŸ  
	quadrants
ŸŸ! *
)
ŸŸ* +
{
ŸŸ, -
SpriteRenderer
⁄⁄ 
sr
⁄⁄ 
=
⁄⁄ 
quadrant
⁄⁄  
.
⁄⁄  !
sr
⁄⁄! #
;
⁄⁄# $
sr
€€ 
.
€€ 
sortingOrder
€€ 
=
€€ 
orderInLayer
€€ "
;
€€" #
sr
‹‹ 
.
‹‹ 
color
‹‹ 
=
‹‹ 
color
‹‹ 
;
‹‹ 
}
›› 
}
ﬁﬁ 
}
‡‡ 
void
‚‚ 
OnDrawGizmos
‚‚ 
(
‚‚ 
)
‚‚ 
{
‚‚ 
Gizmos
ÂÂ 
.
ÂÂ 	
color
ÂÂ	 
=
ÂÂ 
Color
ÂÂ 
.
ÂÂ 
clear
ÂÂ 
;
ÂÂ 
SetSnap
ÊÊ 
(
ÊÊ 
)
ÊÊ 
;
ÊÊ 
float
ÁÁ 
gridSideLength
ÁÁ 
=
ÁÁ 
snap
ÁÁ 
.
ÁÁ 
gridSideLength
ÁÁ ,
;
ÁÁ, -
Gizmos
ËË 
.
ËË 	
DrawCube
ËË	 
(
ËË 
	transform
ËË 
.
ËË 
position
ËË $
,
ËË$ %
	transform
ËË% .
.
ËË. /

localScale
ËË/ 9
*
ËË: ;
gridSideLength
ËË< J
)
ËËJ K
;
ËËK L
}
ÈÈ 
void
ÎÎ 
	OnDestroy
ÎÎ 
(
ÎÎ 
)
ÎÎ 
{
ÎÎ 
if
ÓÓ 
(
ÓÓ 
!
ÓÓ 
Application
ÓÓ 
.
ÓÓ 
	isPlaying
ÓÓ 
)
ÓÓ 
{
ÓÓ 
foreach
ÔÔ 

(
ÔÔ 
Quadrant
ÔÔ 
quadrant
ÔÔ 
in
ÔÔ  
	quadrants
ÔÔ! *
)
ÔÔ* +
{
ÔÔ, -
DestroyImmediate
 
(
 
quadrant
 
.
 
sr
  
.
  !

gameObject
! +
)
+ ,
;
, -
}
ÒÒ 
}
ÚÚ 
ZST_MapManager
ıı 
.
ıı 
SharedInstance
ıı 
.
ıı  

RemoveTile
ıı  *
(
ıı* +
this
ıı+ /
)
ıı/ 0
;
ıı0 1
ZST_MapManager
¯¯ 
.
¯¯ 
SharedInstance
¯¯ 
.
¯¯  
AddUpdateTag
¯¯  ,
(
¯¯, -
tileTag
¯¯- 4
)
¯¯4 5
;
¯¯5 6
}
˘˘ 
private
˚˚ 
bool
˚˚	 

IsUnrolled
˚˚ 
(
˚˚ 
)
˚˚ 
{
˚˚ 
if
˛˛ 
(
˛˛ 
	quadrants
˛˛ 
!=
˛˛ 
null
˛˛ 
)
˛˛ 
{
˛˛ 
foreach
ˇˇ 

(
ˇˇ 
Quadrant
ˇˇ 
quadrant
ˇˇ 
in
ˇˇ  
	quadrants
ˇˇ! *
)
ˇˇ* +
{
ˇˇ, -
if
ÅÅ 
(
ÅÅ 
quadrant
ÅÅ 
.
ÅÅ !
rolledSprite_center
ÅÅ $
==
ÅÅ% '
null
ÅÅ( ,
||
ÅÅ- /
quadrant
ÇÇ 
.
ÇÇ 
rolledSprite_side
ÇÇ "
==
ÇÇ# %
null
ÇÇ& *
||
ÇÇ+ -
quadrant
ÉÉ 
.
ÉÉ '
rolledSprite_cornerConvex
ÉÉ *
==
ÉÉ+ -
null
ÉÉ. 2
||
ÉÉ3 5
quadrant
ÑÑ 
.
ÑÑ (
rolledSprite_cornerConcave
ÑÑ +
==
ÑÑ, .
null
ÑÑ/ 3
)
ÑÑ3 4
{
ÑÑ5 6
return
ÖÖ 
true
ÖÖ 
;
ÖÖ 
}
ÜÜ 
}
áá 
return
àà 	
false
àà
 
;
àà 
}
ââ 
return
ää 
true
ää	 
;
ää 
}
åå 
private
éé 
Sprite
éé	 
RolledSprite
éé 
(
éé 
Sprite
éé #
[
éé# $
]
éé$ %
sprites
éé& -
)
éé- .
{
éé/ 0
if
èè 
(
èè 
sprites
èè 
==
èè 
null
èè 
||
èè 
sprites
èè  
.
èè  !
Length
èè! '
<=
èè( *
$num
èè+ ,
)
èè, -
{
èè. /
return
èè/ 5
null
èè6 :
;
èè: ;
}
èè; <
return
êê 
sprites
êê	 
[
êê 
(
êê 
int
êê 
)
êê 
(
êê 
Random
êê 
.
êê 
value
êê #
*
êê$ %
sprites
êê& -
.
êê- .
Length
êê. 4
)
êê4 5
]
êê5 6
;
êê6 7
}
ëë 
private
ìì 
bool
ìì	 
HasNeighbor
ìì 
(
ìì 
CardinalDirection
ìì +
dir
ìì, /
)
ìì/ 0
{
ìì1 2
if
îî 
(
îî 
!
îî 
hasNeighbor
îî 
.
îî 
ContainsKey
îî 
(
îî 
dir
îî "
)
îî" #
)
îî# $
{
îî% &
return
îî& ,
false
îî- 2
;
îî2 3
}
îî3 4
return
ïï 
hasNeighbor
ïï	 
[
ïï 
dir
ïï 
]
ïï 
;
ïï 
}
ññ 
public
òò 
void
òò 
UpdateSprite
òò 
(
òò 
)
òò 
{
òò 
if
õõ 
(
õõ 
doReroll
õõ 
||
õõ 

IsUnrolled
õõ 
(
õõ 
)
õõ 
)
õõ 
{
õõ  !
foreach
ùù 

(
ùù 
Quadrant
ùù 
quadrant
ùù 
in
ùù  
	quadrants
ùù! *
)
ùù* +
{
ùù, -
quadrant
ûû 
.
ûû !
rolledSprite_center
ûû  
=
ûû! "
RolledSprite
ûû# /
(
ûû/ 0
sprites_center
ûû0 >
)
ûû> ?
;
ûû? @
quadrant
üü 
.
üü 
rolledSprite_side
üü 
=
üü  
RolledSprite
üü! -
(
üü- .
sprites_side
üü. :
)
üü: ;
;
üü; <
quadrant
†† 
.
†† '
rolledSprite_cornerConvex
†† &
=
††' (
RolledSprite
††) 5
(
††5 6"
sprites_cornerConvex
††6 J
)
††J K
;
††K L
quadrant
°° 
.
°° (
rolledSprite_cornerConcave
°° '
=
°°( )
RolledSprite
°°* 6
(
°°6 7#
sprites_cornerConcave
°°7 L
)
°°L M
;
°°M N
}
¢¢ 
doReroll
§§ 
=
§§ 
false
§§ 
;
§§ 
}
•• 
System
®® 
.
®® 	
Array
®®	 
dirs
®® 
=
®® 
System
®® 
.
®® 
Enum
®® !
.
®®! "
	GetValues
®®" +
(
®®+ ,
typeof
®®, 2
(
®®2 3
CardinalDirection
®®3 D
)
®®D E
)
®®E F
;
®®F G
CardinalDirection
©© 
first
©© 
=
©© 
(
©© 
CardinalDirection
©© .
)
©©. /
dirs
©©/ 3
.
©©3 4
GetValue
©©4 <
(
©©< =
$num
©©= >
)
©©> ?
;
©©? @
CardinalDirection
™™ 
last
™™ 
=
™™ 
(
™™ 
CardinalDirection
™™ -
)
™™- .
dirs
™™. 2
.
™™2 3
GetValue
™™3 ;
(
™™; <
dirs
™™< @
.
™™@ A
Length
™™A G
-
™™H I
$num
™™J K
)
™™K L
;
™™L M
foreach
≠≠ 	
(
≠≠
 
Quadrant
≠≠ 
quadrant
≠≠ 
in
≠≠ 
	quadrants
≠≠  )
)
≠≠) *
{
≠≠+ ,
Sprite
ØØ 	
sprite
ØØ
 
=
ØØ 
null
ØØ 
;
ØØ 
CardinalDirection
±± 
dir
±± 
=
±± 
quadrant
±± #
.
±±# $
dir
±±$ '
;
±±' (
CardinalDirection
≤≤ 
dirCCW
≤≤ 
=
≤≤ 
dir
≤≤ !
.
≤≤! "
Equals
≤≤" (
(
≤≤( )
last
≤≤) -
)
≤≤- .
?
≤≤/ 0
first
≤≤1 6
:
≤≤7 8
dir
≤≤9 <
+
≤≤= >
$num
≤≤? @
;
≤≤@ A
CardinalDirection
≥≥ 
dirCW
≥≥ 
=
≥≥ 
dir
≥≥  
.
≥≥  !
Equals
≥≥! '
(
≥≥' (
first
≥≥( -
)
≥≥- .
?
≥≥/ 0
last
≥≥1 5
:
≥≥6 7
dir
≥≥8 ;
-
≥≥< =
$num
≥≥> ?
;
≥≥? @
float
µµ 
rot
µµ	 
=
µµ 
quadrant
µµ 
.
µµ 
startRot
µµ  
;
µµ  !
if
∂∂ 
(
∂∂ 
HasNeighbor
∂∂ 
(
∂∂ 
dirCW
∂∂ 
)
∂∂ 
&&
∂∂ 
HasNeighbor
∂∂ (
(
∂∂( )
dirCCW
∂∂) /
)
∂∂/ 0
)
∂∂0 1
{
∂∂2 3
if
∏∏ 
(
∏∏ 
HasNeighbor
∏∏ 
(
∏∏ 
dir
∏∏ 
)
∏∏ 
)
∏∏ 
{
∏∏ 
sprite
ππ 
=
ππ 
quadrant
ππ 
.
ππ !
rolledSprite_center
ππ *
;
ππ* +
rot
∫∫ 
=
∫∫	 

$num
∫∫ 
;
∫∫ 
}
ªª 
else
ªª 

{
ªª 
sprite
ºº 
=
ºº 
quadrant
ºº 
.
ºº (
rolledSprite_cornerConcave
ºº 1
;
ºº1 2
}
ΩΩ 
}
øø 
else
¿¿ 
if
¿¿ 

(
¿¿ 
!
¿¿ 
HasNeighbor
¿¿ 
(
¿¿ 
dirCW
¿¿ 
)
¿¿ 
&&
¿¿  "
!
¿¿# $
HasNeighbor
¿¿$ /
(
¿¿/ 0
dirCCW
¿¿0 6
)
¿¿6 7
)
¿¿7 8
{
¿¿9 :
sprite
¡¡ 

=
¡¡ 
quadrant
¡¡ 
.
¡¡ '
rolledSprite_cornerConvex
¡¡ /
;
¡¡/ 0
}
¬¬ 
else
√√ 
{
√√ 	
sprite
≈≈ 

=
≈≈ 
quadrant
≈≈ 
.
≈≈ 
rolledSprite_side
≈≈ '
;
≈≈' (
if
«« 
(
«« 
HasNeighbor
«« 
(
«« 
dirCW
«« 
)
«« 
)
«« 
{
«« 
rot
»» 
+=
»»	 
$num
»» 
;
»» 
}
…… 
}
   
quadrant
ÃÃ 
.
ÃÃ 
sr
ÃÃ 
.
ÃÃ 
sprite
ÃÃ 
=
ÃÃ 
sprite
ÃÃ 
;
ÃÃ 
quadrant
ÕÕ 
.
ÕÕ 
sr
ÕÕ 
.
ÕÕ 
	transform
ÕÕ 
.
ÕÕ 
rotation
ÕÕ !
=
ÕÕ" #

Quaternion
ÕÕ$ .
.
ÕÕ. /
Euler
ÕÕ/ 4
(
ÕÕ4 5
$num
ÕÕ5 6
,
ÕÕ6 7
$num
ÕÕ7 8
,
ÕÕ8 9
rot
ÕÕ9 <
)
ÕÕ< =
;
ÕÕ= >
}
ŒŒ 
}
–– 
public
““ 
Coord
““ 
GetCoord
““ 
(
““ 
)
““ 
{
““ 
if
”” 

(
”” 
!
”” 
snap
”” 
)
”” 
{
”” 
SetSnap
”” 
(
”” 
)
”” 
;
”” 
}
”” 
Vector2
‘‘ 	
gridPos
‘‘
 
=
‘‘ 
snap
‘‘ 
.
‘‘ 
gridSideLength
‘‘ '
==
‘‘( *
$num
‘‘+ ,
?
‘‘- .
Vector2
‘‘/ 6
.
‘‘6 7
zero
‘‘7 ;
:
‘‘< =
(
‘‘> ?
Vector2
‘‘? F
)
‘‘F G
snap
‘‘G K
.
‘‘K L
GetGridPosition
‘‘L [
(
‘‘[ \
)
‘‘\ ]
/
‘‘] ^
snap
‘‘^ b
.
‘‘b c
gridSideLength
‘‘c q
;
‘‘q r
Coord
’’ 
coord
’’ 
=
’’ 
new
’’ 
Coord
’’ 
(
’’ 
(
’’ 
int
’’ 
)
’’ 
gridPos
’’ &
.
’’& '
y
’’' (
,
’’( )
(
’’) *
int
’’* -
)
’’- .
gridPos
’’. 5
.
’’5 6
x
’’6 7
)
’’7 8
;
’’8 9
return
÷÷ 
coord
÷÷	 
;
÷÷ 
}
◊◊ 
public
ŸŸ 
void
ŸŸ 
MarkAsMidUpdate
ŸŸ 
(
ŸŸ 
)
ŸŸ 
{
ŸŸ  
	midUpdate
⁄⁄ 
=
⁄⁄ 
true
⁄⁄ 
;
⁄⁄ 
}
€€ 
public
›› 
void
›› 
RerollSprite
›› 
(
›› 
)
›› 
{
›› 
doReroll
ﬁﬁ 

=
ﬁﬁ 
true
ﬁﬁ 
;
ﬁﬁ 
UpdateSprite
ﬂﬂ 
(
ﬂﬂ 
)
ﬂﬂ 
;
ﬂﬂ 
}
‡‡ 
public
‚‚ 
void
‚‚  
HideOrShowChildren
‚‚ 
(
‚‚  
)
‚‚  !
{
‚‚" #
areChildrenHidden
„„ 
=
„„ 
!
„„ 
areChildrenHidden
„„ (
;
„„( )&
HideOrShowChildrenHelper
‰‰ 
(
‰‰ 
)
‰‰ 
;
‰‰ 
}
ÂÂ 
public
ÁÁ 
void
ÁÁ 
HideChildren
ÁÁ 
(
ÁÁ 
)
ÁÁ 
{
ÁÁ 
areChildrenHidden
ËË 
=
ËË 
true
ËË 
;
ËË &
HideOrShowChildrenHelper
ÈÈ 
(
ÈÈ 
)
ÈÈ 
;
ÈÈ 
}
ÍÍ 
private
ÏÏ 
void
ÏÏ	 &
HideOrShowChildrenHelper
ÏÏ &
(
ÏÏ& '
)
ÏÏ' (
{
ÏÏ) *
foreach
ÌÌ 	
(
ÌÌ
 
Quadrant
ÌÌ 
quadrant
ÌÌ 
in
ÌÌ 
	quadrants
ÌÌ  )
)
ÌÌ) *
{
ÌÌ+ ,
quadrant
ÓÓ 
.
ÓÓ 
sr
ÓÓ 
.
ÓÓ 

gameObject
ÓÓ 
.
ÓÓ 
	hideFlags
ÓÓ #
=
ÓÓ$ %
areChildrenHidden
ÓÓ& 7
?
ÓÓ8 9
	HideFlags
ÓÓ: C
.
ÓÓC D
HideInHierarchy
ÓÓD S
:
ÓÓT U
	HideFlags
ÓÓV _
.
ÓÓ_ `
None
ÓÓ` d
;
ÓÓd e
}
ÔÔ 
}
 
public
ÚÚ 
bool
ÚÚ 
AreChildrenHidden
ÚÚ 
(
ÚÚ 
)
ÚÚ  
{
ÚÚ! "
return
ÛÛ 
areChildrenHidden
ÛÛ	 
;
ÛÛ 
}
ÙÙ 
private
ˆˆ 
void
ˆˆ 
SetSnap
ˆˆ 
(
ˆˆ 
)
ˆˆ 
{
ˆˆ 
if
˜˜ 

(
˜˜ 
snap
˜˜ 
!=
˜˜ 
null
˜˜ 
)
˜˜ 
{
˜˜ 
return
˜˜ !
;
˜˜! "
}
˜˜" #
snap
¯¯ 
=
¯¯ 
GetComponent
¯¯ 
<
¯¯ 
ZST_SnapToGrid
¯¯ *
>
¯¯* +
(
¯¯+ ,
)
¯¯, -
;
¯¯- .
snap
˘˘ 
.
˘˘ 
	hideFlags
˘˘ 
=
˘˘ 
	HideFlags
˘˘ "
.
˘˘" #
HideInInspector
˘˘# 2
;
˘˘2 3
}
˙˙ 
}¸¸ ö
`C:\Users\Administrator\Desktop\git_wine\wine-game\Assets\ZSmartTile\Components\ZST_SnapToGrid.cs
[ 
ExecuteInEditMode 
] 
public 
class 
ZST_SnapToGrid 
: 
MonoBehaviour +
{, -
public 
float 
gridSideLength 
= 
$num #
;# $
void		 
Update		 
(		 
)		 
{		 
if 
( 
Application 
. 
	isPlaying 
) 
{ 
return $
;$ %
}% &
	transform 
. 
localPosition 
=  !
GetSnappedPosition" 4
(4 5
	transform5 >
.> ?
localPosition? L
)L M
;M N
} 
public 
Vector3 
GetGridPosition 
(  
)  !
{" #
return 
GetSnappedPosition	 
( 
	transform %
.% &
position& .
). /
;/ 0
} 
public 
Vector3 
GetSnappedPosition "
(" #
Vector3# *
position+ 3
)3 4
{5 6
if 
( 
gridSideLength 
== 
$num 
) 
{ 
return "
position# +
;+ ,
}, -
Vector3 	
gridPosition
 
= 
new 
Vector3 $
($ %
gridSideLength 
* 
Mathf 
. 
Round 
(  
position  (
.( )
x) *
/+ ,
gridSideLength- ;
); <
,< =
gridSideLength 
* 
Mathf 
. 
Round 
(  
position  (
.( )
y) *
/+ ,
gridSideLength- ;
); <
,< =
gridSideLength 
* 
Mathf 
. 
Round 
(  
position  (
.( )
z) *
/+ ,
gridSideLength- ;
); <
) 
; 
return 
gridPosition	 
; 
}   
}!! û
XC:\Users\Administrator\Desktop\git_wine\wine-game\Assets\ZSmartTile\Editor\ZST_Editor.cs
public 
class 

ZST_Editor 
: 
MonoBehaviour '
{( )
[ 
UnityEditor 
. 
	Callbacks 
. 
DidReloadScripts (
]( )
private 
static	 
void 
OnDidReloadScripts '
(' (
)( )
{* +
ZST_MapManager		 
.		 
SharedInstance		 
.		  
HardReloadTiles		  /
(		/ 0
)		0 1
;		1 2
}

 
} 